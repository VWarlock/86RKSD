0001   0000               .include "stdlib8080.inc"
0001+  0000               .org 0
0002+  0000             start:
0003+  0000 C3 8E 0E      jmp main
0004+  0003             
0005+  0003             
0006+  0003             
0007+  0003             
0002   0003             drawFiles:
0003   0003 CD 4D 1A      call hideFileCursor
0004   0006               ; 27 drawColumn(0);
0005   0006 AF            xra a
0006   0007 CD AE 1D      call drawColumn
0007   000A               ; 28 drawColumn(1);
0008   000A 3E 01         mvi a, 1
0009   000C C3 AE 1D      jmp drawColumn
0010   000F             swapPanels:
0011   000F 21 1C 27      lxi h, panelA
0012   0012 22 7B 2D      shld memswap_1
0013   0015 21 26 28      lxi h, panelB
0014   0018 22 7D 2D      shld memswap_2
0015   001B 21 0A 01      lxi h, 266
0016   001E CD CB 20      call memswap
0017   0021               ; 36 drawSwapPanels();
0018   0021 C3 43 1A      jmp drawSwapPanels
0019   0024             getSel:
0020   0024 2A 20 28      lhld (panelA)+(260)
0021   0027 EB            xchg
0022   0028 2A 1F 28      lhld (panelA)+(259)
0023   002B 26 00         mvi h, 0
0024   002D 19            dad d
0025   002E E5            push h
0026   002F 16 16         mvi d, 22
0027   0031 3A 1E 28      lda (panelA)+(258)
0028   0034 CD ED 20      call op_mul
0029   0037               ; Сложение
0030   0037 D1            pop d
0031   0038 19            dad d
0032   0039 22 46 2A      shld getSel_n
0033   003C               ; 43 if(n < panelA.cnt) return panelA.files1 + n;
0034   003C EB            xchg
0035   003D 2A 22 28      lhld (panelA)+(262)
0036   0040 CD 01 21      call op_cmp16
0037   0043 DA 59 00      jc l0
0038   0046 CA 59 00      jz l0
0039   0049               ; 43 return panelA.files1 + n;
0040   0049 2A 46 2A      lhld getSel_n
0041   004C               ; Умножение HL на 20
0042   004C 54            mov d, h
0043   004D 5D            mov e, l
0044   004E 29            dad h
0045   004F 29            dad h
0046   0050 19            dad d
0047   0051 29            dad h
0048   0052 29            dad h
0049   0053               ; Сложение
0050   0053 EB            xchg
0051   0054 2A 1C 27      lhld panelA
0052   0057 19            dad d
0053   0058 C9            ret
0054   0059             l0:
0055   0059               ; 44 panelA.offset = 0;
0056   0059 21 00 00      lxi h, 0
0057   005C 22 20 28      shld (panelA)+(260)
0058   005F               ; 45 panelA.cursorY = 0;
0059   005F AF            xra a
0060   0060 32 1F 28      sta (panelA)+(259)
0061   0063               ; 46 panelA.cursorX = 0;
0062   0063 32 1E 28      sta (panelA)+(258)
0063   0066               ; 47 if(panelA.cnt != 0) return panelA.files1;Сложение с константой 0
0064   0066 2A 22 28      lhld (panelA)+(262)
0065   0069 7D            mov a, l
0066   006A B4            ora h
0067   006B CA 72 00      jz l1
0068   006E               ; 47 return panelA.files1;
0069   006E 2A 1C 27      lhld panelA
0070   0071 C9            ret
0071   0072             l1:
0072   0072               ; 48 return (FileInfo*)parentDir;
0073   0072 21 32 2A      lxi h, parentDir
0074   0075 C9            ret
0075   0076               ; --- getSelNoBack -----------------------------------------------------------------
0076   0076             getSelNoBack:
0077   0076 CD 24 00      call getSel
0078   0079 22 48 2A      shld getSelNoBack_f
0079   007C               ; 55 if(f->fname[0] == '.') f = 0;Сложение с константой 0
0080   007C 7E            mov a, m
0081   007D FE 2E         cpi 46
0082   007F C2 88 00      jnz l2
0083   0082               ; 55 f = 0;
0084   0082 21 00 00      lxi h, 0
0085   0085 22 48 2A      shld getSelNoBack_f
0086   0088             l2:
0087   0088               ; 56 return f;  
0088   0088 C9            ret
0089   0089               ; --- drawFileInfo -----------------------------------------------------------------
0090   0089             drawFileInfo:
0091   0089 CD 24 00      call getSel
0092   008C 22 4A 2A      shld drawFileInfo_f
0093   008F               ; 68 if(f->fattrib & 0x10) {Сложение
0094   008F 11 0B 00      lxi d, 11
0095   0092 19            dad d
0096   0093 7E            mov a, m
0097   0094 E6 10         ani 16
0098   0096               ; convertToConfition
0099   0096 CA 9F 00      jz l3
0100   0099               ; 69 drawFileInfoDir();
0101   0099 CD 84 1E      call drawFileInfoDir
0102   009C C3 C0 00      jmp l4
0103   009F             l3:
0104   009F               ; 71 i2s32(buf, &f->fsize, 10, ' ');           
0105   009F 21 4C 2A      lxi h, drawFileInfo_buf
0106   00A2 22 81 2D      shld i2s32_1
0107   00A5               ; Сложение
0108   00A5 2A 4A 2A      lhld drawFileInfo_f
0109   00A8 11 0C 00      lxi d, 12
0110   00AB 19            dad d
0111   00AC 22 83 2D      shld i2s32_2
0112   00AF 21 0A 00      lxi h, 10
0113   00B2 22 85 2D      shld i2s32_3
0114   00B5 3E 20         mvi a, 32
0115   00B7 CD 07 21      call i2s32
0116   00BA               ; 72 drawFileInfo1(buf);
0117   00BA 21 4C 2A      lxi h, drawFileInfo_buf
0118   00BD CD 6C 1E      call drawFileInfo1
0119   00C0             l4:
0120   00C0               ; 75 if(f->fdate==0 && f->ftime==0) {Сложение
0121   00C0 2A 4A 2A      lhld drawFileInfo_f
0122   00C3 11 12 00      lxi d, 18
0123   00C6 19            dad d
0124   00C7               ; Сложение с константой 0
0125   00C7 5E            mov e, m
0126   00C8 23            inx h
0127   00C9 56            mov d, m
0128   00CA EB            xchg
0129   00CB 7D            mov a, l
0130   00CC B4            ora h
0131   00CD C2 E7 00      jnz l5
0132   00D0               ; Сложение
0133   00D0 2A 4A 2A      lhld drawFileInfo_f
0134   00D3 11 10 00      lxi d, 16
0135   00D6 19            dad d
0136   00D7               ; Сложение с константой 0
0137   00D7 5E            mov e, m
0138   00D8 23            inx h
0139   00D9 56            mov d, m
0140   00DA EB            xchg
0141   00DB 7D            mov a, l
0142   00DC B4            ora h
0143   00DD C2 E7 00      jnz l5
0144   00E0               ; 76 buf[0] = 0;
0145   00E0 AF            xra a
0146   00E1 32 4C 2A      sta (drawFileInfo_buf)+(0)
0147   00E4 C3 C1 01      jmp l6
0148   00E7             l5:
0149   00E7               ; 78 i2s(buf, f->fdate & 31, 2, ' ');  
0150   00E7 21 4C 2A      lxi h, drawFileInfo_buf
0151   00EA 22 8C 2D      shld i2s_1
0152   00ED               ; Сложение
0153   00ED 2A 4A 2A      lhld drawFileInfo_f
0154   00F0 11 12 00      lxi d, 18
0155   00F3 19            dad d
0156   00F4               ; 16 битная арифметическая операция с константой
0157   00F4 5E            mov e, m
0158   00F5 23            inx h
0159   00F6 56            mov d, m
0160   00F7 EB            xchg
0161   00F8 7D            mov a, l
0162   00F9 E6 1F         ani 31
0163   00FB 6F            mov l, a
0164   00FC 26 00         mvi h, 0
0165   00FE 22 8E 2D      shld i2s_2
0166   0101 2E 02         mvi l, 2
0167   0103 22 90 2D      shld i2s_3
0168   0106 3E 20         mvi a, 32
0169   0108 CD 7D 21      call i2s
0170   010B               ; 79 buf[2] = '-';
0171   010B 3E 2D         mvi a, 45
0172   010D 32 4E 2A      sta (drawFileInfo_buf)+(2)
0173   0110               ; 80 i2s(buf+3, (f->fdate>>5) & 15, 2, '0');
0174   0110 21 4F 2A      lxi h, (drawFileInfo_buf)+(3)
0175   0113 22 8C 2D      shld i2s_1
0176   0116               ; Сложение
0177   0116 2A 4A 2A      lhld drawFileInfo_f
0178   0119 11 12 00      lxi d, 18
0179   011C 19            dad d
0180   011D               ; Сдвиг вправо
0181   011D 5E            mov e, m
0182   011E 23            inx h
0183   011F 56            mov d, m
0184   0120 EB            xchg
0185   0121 11 05 00      lxi d, 5
0186   0124 CD DF 21      call op_shr16
0187   0127               ; 16 битная арифметическая операция с константой
0188   0127 7D            mov a, l
0189   0128 E6 0F         ani 15
0190   012A 6F            mov l, a
0191   012B 26 00         mvi h, 0
0192   012D 22 8E 2D      shld i2s_2
0193   0130 2E 02         mvi l, 2
0194   0132 22 90 2D      shld i2s_3
0195   0135 3E 30         mvi a, 48
0196   0137 CD 7D 21      call i2s
0197   013A               ; 81 buf[5] = '-';
0198   013A 3E 2D         mvi a, 45
0199   013C 32 51 2A      sta (drawFileInfo_buf)+(5)
0200   013F               ; 82 i2s(buf+6, (f->fdate>>9)+1980, 4, '0');
0201   013F 21 52 2A      lxi h, (drawFileInfo_buf)+(6)
0202   0142 22 8C 2D      shld i2s_1
0203   0145               ; Сложение
0204   0145 2A 4A 2A      lhld drawFileInfo_f
0205   0148 11 12 00      lxi d, 18
0206   014B 19            dad d
0207   014C               ; Сдвиг вправо
0208   014C 5E            mov e, m
0209   014D 23            inx h
0210   014E 56            mov d, m
0211   014F EB            xchg
0212   0150 11 09 00      lxi d, 9
0213   0153 CD DF 21      call op_shr16
0214   0156               ; Сложение
0215   0156 11 BC 07      lxi d, 1980
0216   0159 19            dad d
0217   015A 22 8E 2D      shld i2s_2
0218   015D 21 04 00      lxi h, 4
0219   0160 22 90 2D      shld i2s_3
0220   0163 3E 30         mvi a, 48
0221   0165 CD 7D 21      call i2s
0222   0168               ; 83 buf[10] = ' ';
0223   0168 3E 20         mvi a, 32
0224   016A 32 56 2A      sta (drawFileInfo_buf)+(10)
0225   016D               ; 84 i2s(buf+11, f->ftime>>11, 2, '0');
0226   016D 21 57 2A      lxi h, (drawFileInfo_buf)+(11)
0227   0170 22 8C 2D      shld i2s_1
0228   0173               ; Сложение
0229   0173 2A 4A 2A      lhld drawFileInfo_f
0230   0176 11 10 00      lxi d, 16
0231   0179 19            dad d
0232   017A               ; Сдвиг вправо
0233   017A 5E            mov e, m
0234   017B 23            inx h
0235   017C 56            mov d, m
0236   017D EB            xchg
0237   017E 11 0B 00      lxi d, 11
0238   0181 CD DF 21      call op_shr16
0239   0184 22 8E 2D      shld i2s_2
0240   0187 21 02 00      lxi h, 2
0241   018A 22 90 2D      shld i2s_3
0242   018D 3E 30         mvi a, 48
0243   018F CD 7D 21      call i2s
0244   0192               ; 85 buf[13] = ':';
0245   0192 3E 3A         mvi a, 58
0246   0194 32 59 2A      sta (drawFileInfo_buf)+(13)
0247   0197               ; 86 i2s(buf+14, (f->ftime>>5)&63, 2, '0');
0248   0197 21 5A 2A      lxi h, (drawFileInfo_buf)+(14)
0249   019A 22 8C 2D      shld i2s_1
0250   019D               ; Сложение
0251   019D 2A 4A 2A      lhld drawFileInfo_f
0252   01A0 11 10 00      lxi d, 16
0253   01A3 19            dad d
0254   01A4               ; Сдвиг вправо
0255   01A4 5E            mov e, m
0256   01A5 23            inx h
0257   01A6 56            mov d, m
0258   01A7 EB            xchg
0259   01A8 11 05 00      lxi d, 5
0260   01AB CD DF 21      call op_shr16
0261   01AE               ; 16 битная арифметическая операция с константой
0262   01AE 7D            mov a, l
0263   01AF E6 3F         ani 63
0264   01B1 6F            mov l, a
0265   01B2 26 00         mvi h, 0
0266   01B4 22 8E 2D      shld i2s_2
0267   01B7 2E 02         mvi l, 2
0268   01B9 22 90 2D      shld i2s_3
0269   01BC 3E 30         mvi a, 48
0270   01BE CD 7D 21      call i2s
0271   01C1             l6:
0272   01C1               ; 88 drawFileInfo2(buf);
0273   01C1 21 4C 2A      lxi h, drawFileInfo_buf
0274   01C4 C3 8A 1E      jmp drawFileInfo2
0275   01C7             showFileCursorAndDrawFileInfo:
0276   01C7 CD 65 1A      call showFileCursor
0277   01CA               ; 96 drawFileInfo();  
0278   01CA C3 89 00      jmp drawFileInfo
0279   01CD             drawFilesCount:
0280   01CD 21 00 00      lxi h, 0
0281   01D0 22 5E 2A      shld (drawFilesCount_total)+(0)
0282   01D3               ; 1 ((ushort*)a)[1] = (b>>16); }
0283   01D3 22 60 2A      shld (drawFilesCount_total)+(2)
0284   01D6               ; 107 filesCnt = 0;
0285   01D6 22 64 2A      shld drawFilesCount_filesCnt
0286   01D9               ; 108 for(p = panelA.files1, i = panelA.cnt; i; ++p, --i) {
0287   01D9 2A 1C 27      lhld panelA
0288   01DC 22 66 2A      shld drawFilesCount_p
0289   01DF 2A 22 28      lhld (panelA)+(262)
0290   01E2 22 62 2A      shld drawFilesCount_i
0291   01E5             l7:
0292   01E5               ; convertToConfition
0293   01E5 7D            mov a, l
0294   01E6 B4            ora h
0295   01E7 CA 22 02      jz l8
0296   01EA               ; 109 if((p->fattrib & 0x10) == 0) ++filesCnt;Сложение
0297   01EA 2A 66 2A      lhld drawFilesCount_p
0298   01ED 11 0B 00      lxi d, 11
0299   01F0 19            dad d
0300   01F1 7E            mov a, m
0301   01F2 E6 10         ani 16
0302   01F4 C2 FE 01      jnz l10
0303   01F7               ; 109 ++filesCnt;
0304   01F7 2A 64 2A      lhld drawFilesCount_filesCnt
0305   01FA 23            inx h
0306   01FB 22 64 2A      shld drawFilesCount_filesCnt
0307   01FE             l10:
0308   01FE               ; 110 add32_32(&total, &p->fsize);
0309   01FE 21 5E 2A      lxi h, drawFilesCount_total
0310   0201 22 93 2D      shld add32_32_1
0311   0204               ; Сложение
0312   0204 2A 66 2A      lhld drawFilesCount_p
0313   0207 11 0C 00      lxi d, 12
0314   020A 19            dad d
0315   020B CD ED 21      call add32_32
0316   020E             l9:
0317   020E 2A 66 2A      lhld drawFilesCount_p
0318   0211 11 14 00      lxi d, 20
0319   0214 19            dad d
0320   0215 22 66 2A      shld drawFilesCount_p
0321   0218 2A 62 2A      lhld drawFilesCount_i
0322   021B 2B            dcx h
0323   021C 22 62 2A      shld drawFilesCount_i
0324   021F C3 E5 01      jmp l7
0325   0222             l8:
0326   0222               ; 113 drawFilesCountInt(&total, filesCnt);
0327   0222 21 5E 2A      lxi h, drawFilesCount_total
0328   0225 22 3E 2D      shld drawFilesCountInt_1
0329   0228 2A 64 2A      lhld drawFilesCount_filesCnt
0330   022B C3 50 1B      jmp drawFilesCountInt
0331   022E             drawFiles2:
0332   022E CD 03 00      call drawFiles
0333   0231               ; 121 drawFilesCount();
0334   0231 CD CD 01      call drawFilesCount
0335   0234               ; 122 swapPanels();
0336   0234 CD 0F 00      call swapPanels
0337   0237               ; 123 drawFiles();
0338   0237 CD 03 00      call drawFiles
0339   023A               ; 124 drawFilesCount();
0340   023A CD CD 01      call drawFilesCount
0341   023D               ; 125 drawFileInfo();
0342   023D CD 89 00      call drawFileInfo
0343   0240               ; 126 swapPanels();
0344   0240 CD 0F 00      call swapPanels
0345   0243               ; 127 showFileCursorAndDrawFileInfo();
0346   0243 C3 C7 01      jmp showFileCursorAndDrawFileInfo
0347   0246             drawScreen:
0348   0246 AF            xra a
0349   0247 32 30 29      sta (cmdline)+(0)
0350   024A               ; 135 drawScreenInt();
0351   024A CD 53 1C      call drawScreenInt
0352   024D               ; 136 drawCmdLineWithPath();
0353   024D CD A2 1E      call drawCmdLineWithPath
0354   0250               ; 137 drawFiles2();
0355   0250 C3 2E 02      jmp drawFiles2
0356   0253             processInput:
0357   0253 C5            push b
0358   0254 32 68 2A      sta processInput_1
0359   0257               ; 144 strlen(cmdline);<cmdline_pos>
0360   0257 21 30 29      lxi h, cmdline
0361   025A CD 08 22      call strlen
0362   025D 44            mov b, h
0363   025E 4D            mov c, l
0364   025F               ; 145 if(c==KEY_BKSPC) {
0365   025F 3A 68 2A      lda processInput_1
0366   0262 FE 7F         cpi 127
0367   0264 C2 77 02      jnz l11
0368   0267               ; 146 if(cmdline_pos==0) return;Сложение с константой 0
0369   0267 7D            mov a, l
0370   0268 B4            ora h
0371   0269 C2 6E 02      jnz l12
0372   026C               ; 146 return;
0373   026C C1            pop b
0374   026D C9            ret
0375   026E             l12:
0376   026E               ; 147 --cmdline_pos;    
0377   026E 0B            dcx b
0378   026F               ; 148 cmdline[cmdline_pos] = 0;Сложение с BC
0379   026F 21 30 29      lxi h, cmdline
0380   0272 09            dad b
0381   0273 36 00         mvi m, 0
0382   0275               ; 149 return;
0383   0275 C1            pop b
0384   0276 C9            ret
0385   0277             l11:
0386   0277               ; 151 if(c>=32) {
0387   0277 3A 68 2A      lda processInput_1
0388   027A FE 20         cpi 32
0389   027C DA 99 02      jc l13
0390   027F               ; 152 if(cmdline_pos==255) return; Сложение с BC
0391   027F 21 01 FF      lxi h, 65281
0392   0282 09            dad b
0393   0283 7D            mov a, l
0394   0284 B4            ora h
0395   0285 C2 8A 02      jnz l14
0396   0288               ; 152 return; 
0397   0288 C1            pop b
0398   0289 C9            ret
0399   028A             l14:
0400   028A               ; 153 cmdline[cmdline_pos] = c;Сложение с BC
0401   028A 21 30 29      lxi h, cmdline
0402   028D 09            dad b
0403   028E 3A 68 2A      lda processInput_1
0404   0291 77            mov m, a
0405   0292               ; 154 ++cmdline_pos;
0406   0292 03            inx b
0407   0293               ; 155 cmdline[cmdline_pos] = 0;Сложение с BC
0408   0293 21 30 29      lxi h, cmdline
0409   0296 09            dad b
0410   0297 36 00         mvi m, 0
0411   0299             l13:
0412   0299 C1            pop b
0413   029A C9            ret
0414   029B               ; --- drawError -----------------------------------------------------------------
0415   029B             drawError:
0416   029B 32 6B 2A      sta drawError_2
0417   029E               ; 166 if(e == 0) return;
0418   029E B7            ora a
0419   029F C2 A3 02      jnz l15
0420   02A2               ; 166 return;
0421   02A2 C9            ret
0422   02A3             l15:
0423   02A3               ; 169 drawWindow(" o{ibka ");
0424   02A3 21 6C 2E      lxi h, string0
0425   02A6 CD 11 1F      call drawWindow
0426   02A9               ; 170 drawAnyKeyButton();
0427   02A9 CD 6D 1F      call drawAnyKeyButton
0428   02AC               ; 171 drawWindowText(0, 0, text);
0429   02AC AF            xra a
0430   02AD 32 65 2D      sta drawWindowText_1
0431   02B0 32 66 2D      sta drawWindowText_2
0432   02B3 2A 69 2A      lhld drawError_1
0433   02B6 CD 8D 1F      call drawWindowText
0434   02B9               ; 174 switch(e) {
0435   02B9 3A 6B 2A      lda drawError_2
0436   02BC FE 01         cpi 1
0437   02BE CA F1 02      jz l17
0438   02C1 FE 02         cpi 2
0439   02C3 CA FA 02      jz l18
0440   02C6 FE 07         cpi 7
0441   02C8 CA 03 03      jz l19
0442   02CB FE 03         cpi 3
0443   02CD CA 0C 03      jz l20
0444   02D0 FE 04         cpi 4
0445   02D2 CA 15 03      jz l21
0446   02D5 FE 05         cpi 5
0447   02D7 CA 1E 03      jz l22
0448   02DA FE 06         cpi 6
0449   02DC CA 27 03      jz l23
0450   02DF FE 08         cpi 8
0451   02E1 CA 30 03      jz l24
0452   02E4 FE 80         cpi 128
0453   02E6 CA 39 03      jz l25
0454   02E9 FE 0B         cpi 11
0455   02EB CA 42 03      jz l26
0456   02EE C3 4B 03      jmp l27
0457   02F1             l17:
0458   02F1               ; 175 text = "net fajlowoj sistemy"; break;
0459   02F1 21 FD 2F      lxi h, string1
0460   02F4 22 69 2A      shld drawError_1
0461   02F7               ; 175 break;
0462   02F7 C3 69 03      jmp l16
0463   02FA             l18:
0464   02FA               ; 176 text = "o{ibka nakopitelq"; break;
0465   02FA 21 25 30      lxi h, string2
0466   02FD 22 69 2A      shld drawError_1
0467   0300               ; 176 break;
0468   0300 C3 69 03      jmp l16
0469   0303             l19:
0470   0303               ; 177 text = "papka ne pusta"; break;
0471   0303 21 7E 30      lxi h, string3
0472   0306 22 69 2A      shld drawError_1
0473   0309               ; 177 break;
0474   0309 C3 69 03      jmp l16
0475   030C             l20:
0476   030C               ; 178 text = "fajl ne otkryt"; break;
0477   030C 21 BA 2F      lxi h, string4
0478   030F 22 69 2A      shld drawError_1
0479   0312               ; 178 break;
0480   0312 C3 69 03      jmp l16
0481   0315             l21:
0482   0315               ; 179 text = "putx ne najden"; break;
0483   0315 21 C9 30      lxi h, string5
0484   0318 22 69 2A      shld drawError_1
0485   031B               ; 179 break;
0486   031B C3 69 03      jmp l16
0487   031E             l22:
0488   031E               ; 180 text = "maksimum fajlow w papke"; break;
0489   031E 21 E5 2F      lxi h, string6
0490   0321 22 69 2A      shld drawError_1
0491   0324               ; 180 break;
0492   0324 C3 69 03      jmp l16
0493   0327             l23:
0494   0327               ; 181 text = "disk zapolnen"; break;
0495   0327 21 9C 2F      lxi h, string7
0496   032A 22 69 2A      shld drawError_1
0497   032D               ; 181 break;
0498   032D C3 69 03      jmp l16
0499   0330             l24:
0500   0330               ; 182 text = "fail su}estwuet"; break;
0501   0330 21 AA 2F      lxi h, string8
0502   0333 22 69 2A      shld drawError_1
0503   0336               ; 182 break;
0504   0336 C3 69 03      jmp l16
0505   0339             l25:
0506   0339               ; 183 text = "prerwano polxzowatelem"; break;
0507   0339 21 8D 30      lxi h, string9
0508   033C 22 69 2A      shld drawError_1
0509   033F               ; 183 break;
0510   033F C3 69 03      jmp l16
0511   0342             l26:
0512   0342               ; 184 text = "putx bolx{e 255 simwolow"; break;
0513   0342 21 B0 30      lxi h, string10
0514   0345 22 69 2A      shld drawError_1
0515   0348               ; 184 break;
0516   0348 C3 69 03      jmp l16
0517   034B             l27:
0518   034B               ; 185 i2s(buf, e, 3, '0'); text = buf; break;
0519   034B 21 6C 2A      lxi h, drawError_buf
0520   034E 22 8C 2D      shld i2s_1
0521   0351 2A 6B 2A      lhld drawError_2
0522   0354 26 00         mvi h, 0
0523   0356 22 8E 2D      shld i2s_2
0524   0359 2E 03         mvi l, 3
0525   035B 22 90 2D      shld i2s_3
0526   035E 3E 30         mvi a, 48
0527   0360 CD 7D 21      call i2s
0528   0363               ; 185 text = buf; break;
0529   0363 21 6C 2A      lxi h, drawError_buf
0530   0366 22 69 2A      shld drawError_1
0531   0369               ; 185 break;
0532   0369             l16:
0533   0369               ; 189 drawWindowText(0, 2, text);
0534   0369 AF            xra a
0535   036A 32 65 2D      sta drawWindowText_1
0536   036D 3E 02         mvi a, 2
0537   036F 32 66 2D      sta drawWindowText_2
0538   0372 2A 69 2A      lhld drawError_1
0539   0375 CD 8D 1F      call drawWindowText
0540   0378               ; 192 getch1();
0541   0378 C3 C3 20      jmp getch1
0542   037B             inputBox:
0543   037B C5            push b
0544   037C 22 70 2A      shld inputBox_1
0545   037F               ; 200 clearFlag = 1;
0546   037F 0E 01         mvi c, 1
0547   0381               ; 203 drawWindow(title);
0548   0381 CD 11 1F      call drawWindow
0549   0384               ; 204 drawWindowText(3, 1, "imq:");
0550   0384 3E 03         mvi a, 3
0551   0386 32 65 2D      sta drawWindowText_1
0552   0389 3E 01         mvi a, 1
0553   038B 32 66 2D      sta drawWindowText_2
0554   038E 21 DC 2F      lxi h, string11
0555   0391 CD 8D 1F      call drawWindowText
0556   0394               ; 205 drawWindowText(6, 4, "[ wk - ok ]  [ ar2 - otmena ]");
0557   0394 3E 06         mvi a, 6
0558   0396 32 65 2D      sta drawWindowText_1
0559   0399 3E 04         mvi a, 4
0560   039B 32 66 2D      sta drawWindowText_2
0561   039E 21 71 2F      lxi h, string12
0562   03A1 CD 8D 1F      call drawWindowText
0563   03A4               ; 208 while(1) {
0564   03A4             l28:
0565   03A4               ; 209 drawWindowInput(3, 2, 32);
0566   03A4 3E 03         mvi a, 3
0567   03A6 32 78 2D      sta drawWindowInput_1
0568   03A9 3D            dcr a
0569   03AA 32 79 2D      sta drawWindowInput_2
0570   03AD 3E 20         mvi a, 32
0571   03AF CD AA 20      call drawWindowInput
0572   03B2               ; 210 c = getch1();
0573   03B2 CD C3 20      call getch1
0574   03B5 47            mov b, a
0575   03B6               ; 211 if(c==KEY_RIGHT) clearFlag = 0;
0576   03B6 3E 18         mvi a, 24
0577   03B8 B8            cmp b
0578   03B9 C2 BE 03      jnz l30
0579   03BC               ; 211 clearFlag = 0;
0580   03BC 0E 00         mvi c, 0
0581   03BE             l30:
0582   03BE               ; 212 if(c==KEY_LEFT) clearFlag = 0;
0583   03BE 3E 08         mvi a, 8
0584   03C0 B8            cmp b
0585   03C1 C2 C6 03      jnz l31
0586   03C4               ; 212 clearFlag = 0;
0587   03C4 0E 00         mvi c, 0
0588   03C6             l31:
0589   03C6               ; 213 if(c==KEY_ENTER) { hideTextCursor(); return 1; }
0590   03C6 3E 0D         mvi a, 13
0591   03C8 B8            cmp b
0592   03C9 C2 D3 03      jnz l32
0593   03CC               ; 213 hideTextCursor(); return 1; }
0594   03CC CD 3B 1A      call hideTextCursor
0595   03CF               ; 213 return 1; }
0596   03CF 3E 01         mvi a, 1
0597   03D1 C1            pop b
0598   03D2 C9            ret
0599   03D3             l32:
0600   03D3               ; 214 if(c==KEY_ESC) { hideTextCursor(); return 0; }
0601   03D3 3E 1B         mvi a, 27
0602   03D5 B8            cmp b
0603   03D6 C2 DF 03      jnz l33
0604   03D9               ; 214 hideTextCursor(); return 0; }
0605   03D9 CD 3B 1A      call hideTextCursor
0606   03DC               ; 214 return 0; }
0607   03DC AF            xra a
0608   03DD C1            pop b
0609   03DE C9            ret
0610   03DF             l33:
0611   03DF               ; 215 if(clearFlag) clearFlag = 0, cmdline[0] = 0;convertToConfition
0612   03DF 79            mov a, c
0613   03E0 B7            ora a
0614   03E1 CA EA 03      jz l34
0615   03E4               ; 215 clearFlag = 0, cmdline[0] = 0;
0616   03E4 0E 00         mvi c, 0
0617   03E6 AF            xra a
0618   03E7 32 30 29      sta (cmdline)+(0)
0619   03EA             l34:
0620   03EA               ; 216 processInput(c);
0621   03EA 78            mov a, b
0622   03EB CD 53 02      call processInput
0623   03EE C3 A4 03      jmp l28
0624   03F1             l29:
0625   03F1 C1            pop b
0626   03F2 C9            ret
0627   03F3               ; --- confirm -----------------------------------------------------------------
0628   03F3             confirm:
0629   03F3 22 74 2A      shld confirm_2
0630   03F6               ; 225 drawWindow(title);
0631   03F6 2A 72 2A      lhld confirm_1
0632   03F9 CD 11 1F      call drawWindow
0633   03FC               ; 226 drawWindowText(3, 1, text);
0634   03FC 3E 03         mvi a, 3
0635   03FE 32 65 2D      sta drawWindowText_1
0636   0401 3E 01         mvi a, 1
0637   0403 32 66 2D      sta drawWindowText_2
0638   0406 2A 74 2A      lhld confirm_2
0639   0409 CD 8D 1F      call drawWindowText
0640   040C               ; 227 drawWindowText(6, 4, "[ wk - ok ]  [ ar2 - otmena ]");
0641   040C 3E 06         mvi a, 6
0642   040E 32 65 2D      sta drawWindowText_1
0643   0411 3E 04         mvi a, 4
0644   0413 32 66 2D      sta drawWindowText_2
0645   0416 21 71 2F      lxi h, string12
0646   0419 CD 8D 1F      call drawWindowText
0647   041C               ; 230 while(1) {
0648   041C             l35:
0649   041C               ; 231 switch(getch1()) {
0650   041C CD C3 20      call getch1
0651   041F FE 0D         cpi 13
0652   0421 CA 2C 04      jz l38
0653   0424 FE 1B         cpi 27
0654   0426 CA 2F 04      jz l39
0655   0429 C3 31 04      jmp l37
0656   042C             l38:
0657   042C               ; 232 return 1;
0658   042C 3E 01         mvi a, 1
0659   042E C9            ret
0660   042F             l39:
0661   042F               ; 233 return 0;
0662   042F AF            xra a
0663   0430 C9            ret
0664   0431             l37:
0665   0431 C3 1C 04      jmp l35
0666   0434             l36:
0667   0434 C9            ret
0668   0435               ; --- unpackName -----------------------------------------------------------------
0669   0435             unpackName:
0670   0435 C5            push b
0671   0436 22 78 2A      shld unpackName_2
0672   0439               ; 243 for(i=0; i!=11; ++i, ++s) {
0673   0439 06 00         mvi b, 0
0674   043B             l40:
0675   043B 3E 0B         mvi a, 11
0676   043D B8            cmp b
0677   043E CA 70 04      jz l41
0678   0441               ; 244 if(i==8) *d = '.', ++d;
0679   0441 3E 08         mvi a, 8
0680   0443 B8            cmp b
0681   0444 C2 50 04      jnz l43
0682   0447               ; 244 *d = '.', ++d;
0683   0447 2A 76 2A      lhld unpackName_1
0684   044A 36 2E         mvi m, 46
0685   044C 23            inx h
0686   044D 22 76 2A      shld unpackName_1
0687   0450             l43:
0688   0450               ; 245 if(*s!=' ') *d = *s, ++d;
0689   0450 2A 78 2A      lhld unpackName_2
0690   0453 7E            mov a, m
0691   0454 FE 20         cpi 32
0692   0456 CA 65 04      jz l44
0693   0459               ; 245 *d = *s, ++d;
0694   0459 7E            mov a, m
0695   045A 2A 76 2A      lhld unpackName_1
0696   045D 77            mov m, a
0697   045E 2A 76 2A      lhld unpackName_1
0698   0461 23            inx h
0699   0462 22 76 2A      shld unpackName_1
0700   0465             l44:
0701   0465             l42:
0702   0465 04            inr b
0703   0466 2A 78 2A      lhld unpackName_2
0704   0469 23            inx h
0705   046A 22 78 2A      shld unpackName_2
0706   046D C3 3B 04      jmp l40
0707   0470             l41:
0708   0470               ; 247 if(d[-1]=='.') --d;Сложение с константой -1
0709   0470 2A 76 2A      lhld unpackName_1
0710   0473 2B            dcx h
0711   0474 7E            mov a, m
0712   0475 FE 2E         cpi 46
0713   0477 C2 81 04      jnz l45
0714   047A               ; 247 --d;
0715   047A 2A 76 2A      lhld unpackName_1
0716   047D 2B            dcx h
0717   047E 22 76 2A      shld unpackName_1
0718   0481             l45:
0719   0481               ; 248 *d = 0;
0720   0481 2A 76 2A      lhld unpackName_1
0721   0484 36 00         mvi m, 0
0722   0486 C1            pop b
0723   0487 C9            ret
0724   0488               ; --- catPathAndUnpack -----------------------------------------------------------------
0725   0488             catPathAndUnpack:
0726   0488 22 7C 2A      shld catPathAndUnpack_2
0727   048B               ; 254 strlen(str);<len>
0728   048B 2A 7A 2A      lhld catPathAndUnpack_1
0729   048E CD 08 22      call strlen
0730   0491 22 7E 2A      shld catPathAndUnpack_len
0731   0494               ; 255 if(len) {convertToConfition
0732   0494 7D            mov a, l
0733   0495 B4            ora h
0734   0496 CA B9 04      jz l46
0735   0499               ; 256 if(len >= 255-13) return 1; // Не влезает разделитель плюс имя файла  Сложение
0736   0499 11 0E FF      lxi d, 65294
0737   049C 19            dad d
0738   049D D2 A3 04      jnc l47
0739   04A0               ; 256 return 1; // Не влезает разделитель плюс имя файла  
0740   04A0 3E 01         mvi a, 1
0741   04A2 C9            ret
0742   04A3             l47:
0743   04A3               ; 257 str[len] = '/';  Сложение
0744   04A3 2A 7A 2A      lhld catPathAndUnpack_1
0745   04A6 EB            xchg
0746   04A7 2A 7E 2A      lhld catPathAndUnpack_len
0747   04AA 19            dad d
0748   04AB 36 2F         mvi m, 47
0749   04AD               ; 258 str += len+1;Сложение с константой 1
0750   04AD 2A 7E 2A      lhld catPathAndUnpack_len
0751   04B0 23            inx h
0752   04B1               ; Сложение
0753   04B1 EB            xchg
0754   04B2 2A 7A 2A      lhld catPathAndUnpack_1
0755   04B5 19            dad d
0756   04B6 22 7A 2A      shld catPathAndUnpack_1
0757   04B9             l46:
0758   04B9               ; 260 unpackName(str, fileName);
0759   04B9 2A 7A 2A      lhld catPathAndUnpack_1
0760   04BC 22 76 2A      shld unpackName_1
0761   04BF 2A 7C 2A      lhld catPathAndUnpack_2
0762   04C2 CD 35 04      call unpackName
0763   04C5               ; 261 return 0;
0764   04C5 AF            xra a
0765   04C6 C9            ret
0766   04C7               ; --- getFirstSelected -----------------------------------------------------------------
0767   04C7             getFirstSelected:
0768   04C7 22 98 2A      shld getFirstSelected_1
0769   04CA               ; 272 nextSelectedCnt = panelA.cnt;
0770   04CA 2A 22 28      lhld (panelA)+(262)
0771   04CD 22 80 2A      shld nextSelectedCnt
0772   04D0               ; 273 nextSelectedFile = panelA.files1;
0773   04D0 2A 1C 27      lhld panelA
0774   04D3 22 82 2A      shld nextSelectedFile
0775   04D6               ; 274 if(type = getNextSelected(name)) return type; 
0776   04D6 2A 98 2A      lhld getFirstSelected_1
0777   04D9 CD 13 05      call getNextSelected
0778   04DC 32 9A 2A      sta getFirstSelected_type
0779   04DF               ; convertToConfition
0780   04DF B7            ora a
0781   04E0 CA E7 04      jz l48
0782   04E3               ; 274 return type; 
0783   04E3 3A 9A 2A      lda getFirstSelected_type
0784   04E6 C9            ret
0785   04E7             l48:
0786   04E7               ; 276 nextSelectedFile = getSelNoBack();
0787   04E7 CD 76 00      call getSelNoBack
0788   04EA 22 82 2A      shld nextSelectedFile
0789   04ED               ; 277 if(!nextSelectedFile) return 0;convertToConfition
0790   04ED 7D            mov a, l
0791   04EE B4            ora h
0792   04EF C2 F4 04      jnz l49
0793   04F2               ; 277 return 0;
0794   04F2 AF            xra a
0795   04F3 C9            ret
0796   04F4             l49:
0797   04F4               ; 278 unpackName(name, nextSelectedFile->fname);
0798   04F4 2A 98 2A      lhld getFirstSelected_1
0799   04F7 22 76 2A      shld unpackName_1
0800   04FA 2A 82 2A      lhld nextSelectedFile
0801   04FD CD 35 04      call unpackName
0802   0500               ; 279 if(nextSelectedFile->fattrib & 0x10) return 2;Сложение
0803   0500 2A 82 2A      lhld nextSelectedFile
0804   0503 11 0B 00      lxi d, 11
0805   0506 19            dad d
0806   0507 7E            mov a, m
0807   0508 E6 10         ani 16
0808   050A               ; convertToConfition
0809   050A CA 10 05      jz l50
0810   050D               ; 279 return 2;
0811   050D 3E 02         mvi a, 2
0812   050F C9            ret
0813   0510             l50:
0814   0510               ; 280 return 1;
0815   0510 3E 01         mvi a, 1
0816   0512 C9            ret
0817   0513               ; --- getNextSelected -----------------------------------------------------------------
0818   0513             getNextSelected:
0819   0513 22 9B 2A      shld getNextSelected_1
0820   0516               ; 286 for(;;) {
0821   0516             l51:
0822   0516               ; 287 if(nextSelectedCnt == 0) return 0;Сложение с константой 0
0823   0516 2A 80 2A      lhld nextSelectedCnt
0824   0519 7D            mov a, l
0825   051A B4            ora h
0826   051B C2 20 05      jnz l54
0827   051E               ; 287 return 0;
0828   051E AF            xra a
0829   051F C9            ret
0830   0520             l54:
0831   0520               ; 288 if(nextSelectedFile->fattrib & 0x80) break;Сложение
0832   0520 2A 82 2A      lhld nextSelectedFile
0833   0523 11 0B 00      lxi d, 11
0834   0526 19            dad d
0835   0527 7E            mov a, m
0836   0528 E6 80         ani 128
0837   052A               ; convertToConfition
0838   052A C2 41 05      jnz l52
0839   052D 2A 82 2A      lhld nextSelectedFile
0840   0530 11 14 00      lxi d, 20
0841   0533 19            dad d
0842   0534 22 82 2A      shld nextSelectedFile
0843   0537 2A 80 2A      lhld nextSelectedCnt
0844   053A 2B            dcx h
0845   053B 22 80 2A      shld nextSelectedCnt
0846   053E             l53:
0847   053E C3 16 05      jmp l51
0848   0541             l52:
0849   0541               ; 292 nextSelectedFile->fattrib &= 0x7F;Сложение
0850   0541 2A 82 2A      lhld nextSelectedFile
0851   0544 11 0B 00      lxi d, 11
0852   0547 19            dad d
0853   0548 7E            mov a, m
0854   0549 E6 7F         ani 127
0855   054B 77            mov m, a
0856   054C               ; 293 unpackName(name, nextSelectedFile->fname);
0857   054C 2A 9B 2A      lhld getNextSelected_1
0858   054F 22 76 2A      shld unpackName_1
0859   0552 2A 82 2A      lhld nextSelectedFile
0860   0555 CD 35 04      call unpackName
0861   0558               ; 294 ++nextSelectedFile, --nextSelectedCnt;
0862   0558 2A 82 2A      lhld nextSelectedFile
0863   055B 11 14 00      lxi d, 20
0864   055E 19            dad d
0865   055F 22 82 2A      shld nextSelectedFile
0866   0562 2A 80 2A      lhld nextSelectedCnt
0867   0565 2B            dcx h
0868   0566 22 80 2A      shld nextSelectedCnt
0869   0569               ; 295 if(nextSelectedFile[-1].fattrib & 0x10) return 2;Сложение
0870   0569 2A 82 2A      lhld nextSelectedFile
0871   056C 11 EC FF      lxi d, 65516
0872   056F 19            dad d
0873   0570               ; Сложение
0874   0570 11 0B 00      lxi d, 11
0875   0573 19            dad d
0876   0574 7E            mov a, m
0877   0575 E6 10         ani 16
0878   0577               ; convertToConfition
0879   0577 CA 7D 05      jz l56
0880   057A               ; 295 return 2;
0881   057A 3E 02         mvi a, 2
0882   057C C9            ret
0883   057D             l56:
0884   057D               ; 296 return 1;
0885   057D 3E 01         mvi a, 1
0886   057F C9            ret
0887   0580               ; --- cmpFileInfo -----------------------------------------------------------------
0888   0580             cmpFileInfo:
0889   0580 C5            push b
0890   0581 22 9F 2A      shld cmpFileInfo_2
0891   0584               ; 305 i = (a->fattrib&0x10);Сложение
0892   0584 2A 9D 2A      lhld cmpFileInfo_1
0893   0587 11 0B 00      lxi d, 11
0894   058A 19            dad d
0895   058B 7E            mov a, m
0896   058C E6 10         ani 16
0897   058E 47            mov b, a
0898   058F               ; 306 j = (b->fattrib&0x10);Сложение
0899   058F 2A 9F 2A      lhld cmpFileInfo_2
0900   0592 11 0B 00      lxi d, 11
0901   0595 19            dad d
0902   0596 7E            mov a, m
0903   0597 E6 10         ani 16
0904   0599 4F            mov c, a
0905   059A               ; 307 if(i<j) return 1;
0906   059A 79            mov a, c
0907   059B B8            cmp b
0908   059C DA A6 05      jc l57
0909   059F CA A6 05      jz l57
0910   05A2               ; 307 return 1;
0911   05A2 3E 01         mvi a, 1
0912   05A4 C1            pop b
0913   05A5 C9            ret
0914   05A6             l57:
0915   05A6               ; 308 if(j<i) return 0;
0916   05A6 79            mov a, c
0917   05A7 B8            cmp b
0918   05A8 D2 AE 05      jnc l58
0919   05AB               ; 308 return 0;
0920   05AB AF            xra a
0921   05AC C1            pop b
0922   05AD C9            ret
0923   05AE             l58:
0924   05AE               ; 309 if(1==memcmp(a->fname, b->fname, sizeof(a->fname))) return 1;
0925   05AE 2A 9D 2A      lhld cmpFileInfo_1
0926   05B1 22 99 2D      shld memcmp_1
0927   05B4 2A 9F 2A      lhld cmpFileInfo_2
0928   05B7 22 9B 2D      shld memcmp_2
0929   05BA 21 0B 00      lxi h, 11
0930   05BD CD 17 22      call memcmp
0931   05C0 FE 01         cpi 1
0932   05C2 C2 C9 05      jnz l59
0933   05C5               ; 309 return 1;
0934   05C5 3E 01         mvi a, 1
0935   05C7 C1            pop b
0936   05C8 C9            ret
0937   05C9             l59:
0938   05C9               ; 310 return 0;
0939   05C9 AF            xra a
0940   05CA C1            pop b
0941   05CB C9            ret
0942   05CC               ; --- sort -----------------------------------------------------------------
0943   05CC             sort:
0944   05CC 22 A3 2A      shld sort_2
0945   05CF               ; 317 st_;<st>
0946   05CF 21 AB 2A      lxi h, sort_st_
0947   05D2 22 2B 2B      shld sort_st
0948   05D5               ; 318 0;<stc>
0949   05D5 AF            xra a
0950   05D6 32 2D 2B      sta sort_stc
0951   05D9               ; 319 while(1) {
0952   05D9             l60:
0953   05D9               ; 320 i = low;
0954   05D9 2A A1 2A      lhld sort_1
0955   05DC 22 A5 2A      shld sort_i
0956   05DF               ; 321 j = high;
0957   05DF 2A A3 2A      lhld sort_2
0958   05E2 22 A7 2A      shld sort_j
0959   05E5               ; 322 x = low + (high-low)/2;16 битная арифметическая операция с константой
0960   05E5 2A A1 2A      lhld sort_1
0961   05E8 EB            xchg
0962   05E9 2A A3 2A      lhld sort_2
0963   05EC 7D            mov a, l
0964   05ED 93            sub e
0965   05EE 6F            mov l, a
0966   05EF 7C            mov a, h
0967   05F0 9A            sbb d
0968   05F1 67            mov h, a
0969   05F2 11 14 00      lxi d, 20
0970   05F5 CD 3C 22      call op_div16
0971   05F8 11 02 00      lxi d, 2
0972   05FB CD 3C 22      call op_div16
0973   05FE               ; Умножение HL на 20
0974   05FE 54            mov d, h
0975   05FF 5D            mov e, l
0976   0600 29            dad h
0977   0601 29            dad h
0978   0602 19            dad d
0979   0603 29            dad h
0980   0604 29            dad h
0981   0605               ; Сложение
0982   0605 EB            xchg
0983   0606 2A A1 2A      lhld sort_1
0984   0609 19            dad d
0985   060A 22 A9 2A      shld sort_x
0986   060D               ; 323 while(1) {
0987   060D             l62:
0988   060D               ; 324 while(0!=cmpFileInfo(x, i)) i++;
0989   060D             l64:
0990   060D 2A A9 2A      lhld sort_x
0991   0610 22 9D 2A      shld cmpFileInfo_1
0992   0613 2A A5 2A      lhld sort_i
0993   0616 CD 80 05      call cmpFileInfo
0994   0619 B7            ora a
0995   061A CA 2C 06      jz l65
0996   061D               ; 324 i++;
0997   061D 2A A5 2A      lhld sort_i
0998   0620 E5            push h
0999   0621 11 14 00      lxi d, 20
1000   0624 19            dad d
1001   0625 22 A5 2A      shld sort_i
1002   0628 E1            pop h
1003   0629 C3 0D 06      jmp l64
1004   062C             l65:
1005   062C               ; 325 while(0!=cmpFileInfo(j, x)) j--;
1006   062C             l66:
1007   062C 2A A7 2A      lhld sort_j
1008   062F 22 9D 2A      shld cmpFileInfo_1
1009   0632 2A A9 2A      lhld sort_x
1010   0635 CD 80 05      call cmpFileInfo
1011   0638 B7            ora a
1012   0639 CA 4B 06      jz l67
1013   063C               ; 325 j--;
1014   063C 2A A7 2A      lhld sort_j
1015   063F E5            push h
1016   0640 11 EC FF      lxi d, 65516
1017   0643 19            dad d
1018   0644 22 A7 2A      shld sort_j
1019   0647 E1            pop h
1020   0648 C3 2C 06      jmp l66
1021   064B             l67:
1022   064B               ; 326 if(i <= j) {
1023   064B 2A A5 2A      lhld sort_i
1024   064E EB            xchg
1025   064F 2A A7 2A      lhld sort_j
1026   0652 CD 01 21      call op_cmp16
1027   0655 DA AB 06      jc l68
1028   0658               ; 327 memswap(i, j, sizeof(FileInfo));
1029   0658 2A A5 2A      lhld sort_i
1030   065B 22 7B 2D      shld memswap_1
1031   065E 2A A7 2A      lhld sort_j
1032   0661 22 7D 2D      shld memswap_2
1033   0664 21 14 00      lxi h, 20
1034   0667 CD CB 20      call memswap
1035   066A               ; 328 if(x==i) x=j; else if(x==j) x=i;
1036   066A 2A A9 2A      lhld sort_x
1037   066D EB            xchg
1038   066E 2A A5 2A      lhld sort_i
1039   0671 CD 01 21      call op_cmp16
1040   0674 C2 80 06      jnz l69
1041   0677               ; 328 x=j; else if(x==j) x=i;
1042   0677 2A A7 2A      lhld sort_j
1043   067A 22 A9 2A      shld sort_x
1044   067D C3 93 06      jmp l70
1045   0680             l69:
1046   0680               ; 328 if(x==j) x=i;
1047   0680 2A A9 2A      lhld sort_x
1048   0683 EB            xchg
1049   0684 2A A7 2A      lhld sort_j
1050   0687 CD 01 21      call op_cmp16
1051   068A C2 93 06      jnz l71
1052   068D               ; 328 x=i;
1053   068D 2A A5 2A      lhld sort_i
1054   0690 22 A9 2A      shld sort_x
1055   0693             l71:
1056   0693             l70:
1057   0693               ; 329 i++; j--;   
1058   0693 2A A5 2A      lhld sort_i
1059   0696 E5            push h
1060   0697 11 14 00      lxi d, 20
1061   069A 19            dad d
1062   069B 22 A5 2A      shld sort_i
1063   069E E1            pop h
1064   069F               ; 329 j--;   
1065   069F 2A A7 2A      lhld sort_j
1066   06A2 E5            push h
1067   06A3 11 EC FF      lxi d, 65516
1068   06A6 19            dad d
1069   06A7 22 A7 2A      shld sort_j
1070   06AA E1            pop h
1071   06AB             l68:
1072   06AB               ; 331 if(j<=i) break;
1073   06AB 2A A7 2A      lhld sort_j
1074   06AE EB            xchg
1075   06AF 2A A5 2A      lhld sort_i
1076   06B2 CD 01 21      call op_cmp16
1077   06B5 D2 BB 06      jnc l63
1078   06B8 C3 0D 06      jmp l62
1079   06BB             l63:
1080   06BB               ; 333 if(i < high) {
1081   06BB 2A A5 2A      lhld sort_i
1082   06BE EB            xchg
1083   06BF 2A A3 2A      lhld sort_2
1084   06C2 CD 01 21      call op_cmp16
1085   06C5 DA 14 07      jc l73
1086   06C8 CA 14 07      jz l73
1087   06CB               ; 334 if(low < j) if(stc != SORT_STACK_MAX) *st = low, ++st, *st = j, ++st, ++stc;
1088   06CB 2A A1 2A      lhld sort_1
1089   06CE EB            xchg
1090   06CF 2A A7 2A      lhld sort_j
1091   06D2 CD 01 21      call op_cmp16
1092   06D5 DA 0B 07      jc l74
1093   06D8 CA 0B 07      jz l74
1094   06DB               ; 334 if(stc != SORT_STACK_MAX) *st = low, ++st, *st = j, ++st, ++stc;
1095   06DB 3A 2D 2B      lda sort_stc
1096   06DE FE 20         cpi 32
1097   06E0 CA 0B 07      jz l75
1098   06E3               ; 334 *st = low, ++st, *st = j, ++st, ++stc;
1099   06E3 2A A1 2A      lhld sort_1
1100   06E6 EB            xchg
1101   06E7 2A 2B 2B      lhld sort_st
1102   06EA 73            mov m, e
1103   06EB 23            inx h
1104   06EC 72            mov m, d
1105   06ED 2A 2B 2B      lhld sort_st
1106   06F0 23            inx h
1107   06F1 23            inx h
1108   06F2 22 2B 2B      shld sort_st
1109   06F5 2A A7 2A      lhld sort_j
1110   06F8 EB            xchg
1111   06F9 2A 2B 2B      lhld sort_st
1112   06FC 73            mov m, e
1113   06FD 23            inx h
1114   06FE 72            mov m, d
1115   06FF 2A 2B 2B      lhld sort_st
1116   0702 23            inx h
1117   0703 23            inx h
1118   0704 22 2B 2B      shld sort_st
1119   0707 21 2D 2B      lxi h, sort_stc
1120   070A 34            inr m
1121   070B             l75:
1122   070B             l74:
1123   070B               ; 335 low = i; 
1124   070B 2A A5 2A      lhld sort_i
1125   070E 22 A1 2A      shld sort_1
1126   0711               ; 336 continue;
1127   0711 C3 D9 05      jmp l60
1128   0714             l73:
1129   0714               ; 338 if(low < j) { 
1130   0714 2A A1 2A      lhld sort_1
1131   0717 EB            xchg
1132   0718 2A A7 2A      lhld sort_j
1133   071B CD 01 21      call op_cmp16
1134   071E DA 2D 07      jc l76
1135   0721 CA 2D 07      jz l76
1136   0724               ; 339 high = j;
1137   0724 2A A7 2A      lhld sort_j
1138   0727 22 A3 2A      shld sort_2
1139   072A               ; 340 continue; 
1140   072A C3 D9 05      jmp l60
1141   072D             l76:
1142   072D               ; 342 if(stc==0) break;
1143   072D 3A 2D 2B      lda sort_stc
1144   0730 B7            ora a
1145   0731 CA 59 07      jz l61
1146   0734 21 2D 2B      lxi h, sort_stc
1147   0737 35            dcr m
1148   0738 2A 2B 2B      lhld sort_st
1149   073B 2B            dcx h
1150   073C 2B            dcx h
1151   073D 22 2B 2B      shld sort_st
1152   0740 5E            mov e, m
1153   0741 23            inx h
1154   0742 56            mov d, m
1155   0743 EB            xchg
1156   0744 22 A3 2A      shld sort_2
1157   0747 2A 2B 2B      lhld sort_st
1158   074A 2B            dcx h
1159   074B 2B            dcx h
1160   074C 22 2B 2B      shld sort_st
1161   074F 5E            mov e, m
1162   0750 23            inx h
1163   0751 56            mov d, m
1164   0752 EB            xchg
1165   0753 22 A1 2A      shld sort_1
1166   0756 C3 D9 05      jmp l60
1167   0759             l61:
1168   0759 C9            ret
1169   075A               ; --- packName -----------------------------------------------------------------
1170   075A             packName:
1171   075A C5            push b
1172   075B 22 30 2B      shld packName_2
1173   075E               ; 352 memset(buf, ' ', 11);    
1174   075E 2A 2E 2B      lhld packName_1
1175   0761 22 A1 2D      shld memset_1
1176   0764 3E 20         mvi a, 32
1177   0766 32 A3 2D      sta memset_2
1178   0769 21 0B 00      lxi h, 11
1179   076C CD 77 22      call memset
1180   076F               ; 354 i = 8;
1181   076F 3E 08         mvi a, 8
1182   0771 32 32 2B      sta packName_i
1183   0774               ; 355 f = '.';
1184   0774 0E 2E         mvi c, 46
1185   0776               ; 356 for(;;) {
1186   0776             l78:
1187   0776               ; 357 c = *path;
1188   0776 2A 30 2B      lhld packName_2
1189   0779 46            mov b, m
1190   077A               ; 358 if(c == 0) return;
1191   077A AF            xra a
1192   077B B8            cmp b
1193   077C C2 81 07      jnz l81
1194   077F               ; 358 return;
1195   077F C1            pop b
1196   0780 C9            ret
1197   0781             l81:
1198   0781               ; 359 ++path;
1199   0781 23            inx h
1200   0782 22 30 2B      shld packName_2
1201   0785               ; 360 if(c == f) { buf += i; i = 3; f = 0; continue; }
1202   0785 79            mov a, c
1203   0786 B8            cmp b
1204   0787 C2 A0 07      jnz l82
1205   078A               ; 360 buf += i; i = 3; f = 0; continue; }Сложение
1206   078A 2A 32 2B      lhld packName_i
1207   078D 26 00         mvi h, 0
1208   078F EB            xchg
1209   0790 2A 2E 2B      lhld packName_1
1210   0793 19            dad d
1211   0794 22 2E 2B      shld packName_1
1212   0797               ; 360 i = 3; f = 0; continue; }
1213   0797 3E 03         mvi a, 3
1214   0799 32 32 2B      sta packName_i
1215   079C               ; 360 f = 0; continue; }
1216   079C 4A            mov c, d
1217   079D               ; 360 continue; }
1218   079D C3 B6 07      jmp l80
1219   07A0             l82:
1220   07A0               ; 361 if(i) { *buf = c; ++buf; --i; }convertToConfition
1221   07A0 3A 32 2B      lda packName_i
1222   07A3 B7            ora a
1223   07A4 CA B6 07      jz l83
1224   07A7               ; 361 *buf = c; ++buf; --i; }
1225   07A7 2A 2E 2B      lhld packName_1
1226   07AA 70            mov m, b
1227   07AB               ; 361 ++buf; --i; }
1228   07AB 2A 2E 2B      lhld packName_1
1229   07AE 23            inx h
1230   07AF 22 2E 2B      shld packName_1
1231   07B2               ; 361 --i; }
1232   07B2 21 32 2B      lxi h, packName_i
1233   07B5 35            dcr m
1234   07B6             l83:
1235   07B6             l80:
1236   07B6 C3 76 07      jmp l78
1237   07B9             l79:
1238   07B9 C1            pop b
1239   07BA C9            ret
1240   07BB               ; --- getFiles -----------------------------------------------------------------
1241   07BB             getFiles:
1242   07BB CD 3B 1A      call hideTextCursor
1243   07BE               ; 378 panelA.cnt = 0;
1244   07BE 21 00 00      lxi h, 0
1245   07C1 22 22 28      shld (panelA)+(262)
1246   07C4               ; 379 panelA.offset = 0;
1247   07C4 22 20 28      shld (panelA)+(260)
1248   07C7               ; 380 panelA.cursorX = 0;
1249   07C7 AF            xra a
1250   07C8 32 1E 28      sta (panelA)+(258)
1251   07CB               ; 381 panelA.cursorY = 0;
1252   07CB 32 1F 28      sta (panelA)+(259)
1253   07CE               ; 383 f = panelA.files1;
1254   07CE 2A 1C 27      lhld panelA
1255   07D1 22 33 2B      shld getFiles_f
1256   07D4               ; 386 if(panelA.path1[0]) {convertToConfition
1257   07D4 3A 1E 27      lda ((panelA)+(2))+(0)
1258   07D7 B7            ora a
1259   07D8 CA FB 07      jz l84
1260   07DB               ; 387 memcpy(f, parentDir, sizeof(FileInfo));
1261   07DB 22 A6 2D      shld memcpy_1
1262   07DE 21 32 2A      lxi h, parentDir
1263   07E1 22 A8 2D      shld memcpy_2
1264   07E4 21 14 00      lxi h, 20
1265   07E7 CD 91 22      call memcpy
1266   07EA               ; 388 ++f;
1267   07EA 2A 33 2B      lhld getFiles_f
1268   07ED 11 14 00      lxi d, 20
1269   07F0 19            dad d
1270   07F1 22 33 2B      shld getFiles_f
1271   07F4               ; 389 ++panelA.cnt;    
1272   07F4 2A 22 28      lhld (panelA)+(262)
1273   07F7 23            inx h
1274   07F8 22 22 28      shld (panelA)+(262)
1275   07FB             l84:
1276   07FB               ; 392 st = f;
1277   07FB 2A 33 2B      lhld getFiles_f
1278   07FE 22 35 2B      shld getFiles_st
1279   0801               ; 393 for(;;) {
1280   0801             l85:
1281   0801               ; 394 i = fs_findfirst(panelA.path1, f, maxFiles-panelA.cnt);  
1282   0801 21 1E 27      lxi h, (panelA)+(2)
1283   0804 22 AC 2D      shld fs_findfirst_1
1284   0807 2A 33 2B      lhld getFiles_f
1285   080A 22 AE 2D      shld fs_findfirst_2
1286   080D               ; 16 битная арифметическая операция с константой
1287   080D 2A 22 28      lhld (panelA)+(262)
1288   0810 EB            xchg
1289   0811 2A 30 2A      lhld maxFiles
1290   0814 7D            mov a, l
1291   0815 93            sub e
1292   0816 6F            mov l, a
1293   0817 7C            mov a, h
1294   0818 9A            sbb d
1295   0819 67            mov h, a
1296   081A CD B5 22      call fs_findfirst
1297   081D 32 39 2B      sta getFiles_i
1298   0820               ; 395 if(i==ERR_MAX_FILES) i=0; //! Вывести бы ошибки
1299   0820 FE 0A         cpi 10
1300   0822 C2 29 08      jnz l88
1301   0825               ; 395 i=0; //! Вывести бы ошибки
1302   0825 AF            xra a
1303   0826 32 39 2B      sta getFiles_i
1304   0829             l88:
1305   0829               ; 396 if(i==0) break;    
1306   0829 B7            ora a
1307   082A CA 3C 08      jz l86
1308   082D 3A 1E 27      lda ((panelA)+(2))+(0)
1309   0830 B7            ora a
1310   0831 C2 35 08      jnz l90
1311   0834               ; 397 return; //! Вывести бы ошибки
1312   0834 C9            ret
1313   0835             l90:
1314   0835               ; 398 panelA.path1[0] = 0;
1315   0835 AF            xra a
1316   0836 32 1E 27      sta ((panelA)+(2))+(0)
1317   0839             l87:
1318   0839 C3 01 08      jmp l85
1319   083C             l86:
1320   083C               ; 401 f += fs_low;
1321   083C 2A DB 2D      lhld fs_low
1322   083F               ; Умножение HL на 20
1323   083F 54            mov d, h
1324   0840 5D            mov e, l
1325   0841 29            dad h
1326   0842 29            dad h
1327   0843 19            dad d
1328   0844 29            dad h
1329   0845 29            dad h
1330   0846               ; Сложение
1331   0846 EB            xchg
1332   0847 2A 33 2B      lhld getFiles_f
1333   084A 19            dad d
1334   084B 22 33 2B      shld getFiles_f
1335   084E               ; 402 panelA.cnt += fs_low;Сложение
1336   084E 2A DB 2D      lhld fs_low
1337   0851 EB            xchg
1338   0852 2A 22 28      lhld (panelA)+(262)
1339   0855 19            dad d
1340   0856 22 22 28      shld (panelA)+(262)
1341   0859               ; 404 for(j=panelA.cnt, f=panelA.files1; j; --j, ++f) { 
1342   0859 22 3A 2B      shld getFiles_j
1343   085C 2A 1C 27      lhld panelA
1344   085F 22 33 2B      shld getFiles_f
1345   0862             l91:
1346   0862               ; convertToConfition
1347   0862 2A 3A 2B      lhld getFiles_j
1348   0865 7D            mov a, l
1349   0866 B4            ora h
1350   0867 CA BF 08      jz l92
1351   086A               ; 405 f->fattrib &= 0x7F;Сложение
1352   086A 2A 33 2B      lhld getFiles_f
1353   086D 11 0B 00      lxi d, 11
1354   0870 19            dad d
1355   0871 7E            mov a, m
1356   0872 E6 7F         ani 127
1357   0874 77            mov m, a
1358   0875               ; 406 n=f->fname;
1359   0875 2A 33 2B      lhld getFiles_f
1360   0878 22 37 2B      shld getFiles_n
1361   087B               ; 407 for(i=12; i; --i, ++n)
1362   087B 3E 0C         mvi a, 12
1363   087D 32 39 2B      sta getFiles_i
1364   0880             l94:
1365   0880               ; convertToConfition
1366   0880 3A 39 2B      lda getFiles_i
1367   0883 B7            ora a
1368   0884 CA AB 08      jz l95
1369   0887               ; 408 if((uchar)*n>='a' && (uchar)*n<='z')
1370   0887 7E            mov a, m
1371   0888 FE 61         cpi 97
1372   088A DA 9D 08      jc l97
1373   088D 7E            mov a, m
1374   088E FE 7A         cpi 122
1375   0890 CA 96 08      jz l98
1376   0893 D2 9D 08      jnc l97
1377   0896             l98:
1378   0896               ; 409 *n = *n-('a'-'A');Арифметика 9/3
1379   0896 2A 37 2B      lhld getFiles_n
1380   0899 7E            mov a, m
1381   089A D6 20         sui 32
1382   089C 77            mov m, a
1383   089D             l97:
1384   089D             l96:
1385   089D 21 39 2B      lxi h, getFiles_i
1386   08A0 35            dcr m
1387   08A1 2A 37 2B      lhld getFiles_n
1388   08A4 23            inx h
1389   08A5 22 37 2B      shld getFiles_n
1390   08A8 C3 80 08      jmp l94
1391   08AB             l95:
1392   08AB             l93:
1393   08AB 2A 3A 2B      lhld getFiles_j
1394   08AE 2B            dcx h
1395   08AF 22 3A 2B      shld getFiles_j
1396   08B2 2A 33 2B      lhld getFiles_f
1397   08B5 11 14 00      lxi d, 20
1398   08B8 19            dad d
1399   08B9 22 33 2B      shld getFiles_f
1400   08BC C3 62 08      jmp l91
1401   08BF             l92:
1402   08BF               ; 412 if(panelA.cnt > 1)Сложение с константой -2
1403   08BF 2A 22 28      lhld (panelA)+(262)
1404   08C2 2B            dcx h
1405   08C3 2B            dcx h
1406   08C4 CA CA 08      jz l100
1407   08C7 D2 E3 08      jnc l99
1408   08CA             l100:
1409   08CA               ; 413 sort(st, ((FileInfo*)panelA.files1) + (panelA.cnt-1));
1410   08CA 2A 35 2B      lhld getFiles_st
1411   08CD 22 A1 2A      shld sort_1
1412   08D0               ; Сложение с константой -1
1413   08D0 2A 22 28      lhld (panelA)+(262)
1414   08D3 2B            dcx h
1415   08D4               ; Умножение HL на 20
1416   08D4 54            mov d, h
1417   08D5 5D            mov e, l
1418   08D6 29            dad h
1419   08D7 29            dad h
1420   08D8 19            dad d
1421   08D9 29            dad h
1422   08DA 29            dad h
1423   08DB               ; Сложение
1424   08DB EB            xchg
1425   08DC 2A 1C 27      lhld panelA
1426   08DF 19            dad d
1427   08E0 CD CC 05      call sort
1428   08E3             l99:
1429   08E3 C9            ret
1430   08E4               ; --- selectFile -----------------------------------------------------------------
1431   08E4             selectFile:
1432   08E4 C5            push b
1433   08E5 22 50 2B      shld selectFile_1
1434   08E8               ; 421 for(l=0, f=panelA.files1; l<panelA.cnt; ++l, ++f) {
1435   08E8 01 00 00      lxi b, 0
1436   08EB 2A 1C 27      lhld panelA
1437   08EE 22 52 2B      shld selectFile_f
1438   08F1             l101:
1439   08F1 2A 22 28      lhld (panelA)+(262)
1440   08F4 50            mov d, b
1441   08F5 59            mov e, c
1442   08F6 CD 01 21      call op_cmp16
1443   08F9 DA 5D 09      jc l102
1444   08FC CA 5D 09      jz l102
1445   08FF               ; 422 if(0==memcmp(f->fname, sfile, 11)) {
1446   08FF 2A 52 2B      lhld selectFile_f
1447   0902 22 99 2D      shld memcmp_1
1448   0905 2A 50 2B      lhld selectFile_1
1449   0908 22 9B 2D      shld memcmp_2
1450   090B 21 0B 00      lxi h, 11
1451   090E CD 17 22      call memcmp
1452   0911 B7            ora a
1453   0912 C2 4F 09      jnz l104
1454   0915               ; 424 if(l>=2*ROWS_CNT) {Сложение с BC
1455   0915 21 D4 FF      lxi h, 65492
1456   0918 09            dad b
1457   0919 D2 3A 09      jnc l105
1458   091C               ; 425 panelA.offset = l-ROWS_CNT-(l%ROWS_CNT);Сложение с BC
1459   091C 21 EA FF      lxi h, 65514
1460   091F 09            dad b
1461   0920 11 16 00      lxi d, 22
1462   0923 E5            push h
1463   0924 60            mov h, b
1464   0925 69            mov l, c
1465   0926 CD DC 22      call op_mod16
1466   0929               ; 16 битная арифметическая операция с константой
1467   0929 EB            xchg
1468   092A E1            pop h
1469   092B 7D            mov a, l
1470   092C 93            sub e
1471   092D 6F            mov l, a
1472   092E 7C            mov a, h
1473   092F 9A            sbb d
1474   0930 67            mov h, a
1475   0931 22 20 28      shld (panelA)+(260)
1476   0934               ; 426 l-=panelA.offset;Арифметическая операция с BC&
1477   0934 79            mov a, c
1478   0935 95            sub l
1479   0936 4F            mov c, a
1480   0937 7C            mov a, h
1481   0938 9C            sbb h
1482   0939 47            mov b, a
1483   093A             l105:
1484   093A               ; 429 panelA.cursorX = l/ROWS_CNT;
1485   093A 11 16 00      lxi d, 22
1486   093D 60            mov h, b
1487   093E 69            mov l, c
1488   093F CD 3C 22      call op_div16
1489   0942 7D            mov a, l
1490   0943 32 1E 28      sta (panelA)+(258)
1491   0946               ; 430 panelA.cursorY = op_div16_mod;
1492   0946 3A 9F 2D      lda op_div16_mod
1493   0949 32 1F 28      sta (panelA)+(259)
1494   094C               ; 431 break;
1495   094C C3 5D 09      jmp l102
1496   094F             l104:
1497   094F             l103:
1498   094F 03            inx b
1499   0950 2A 52 2B      lhld selectFile_f
1500   0953 11 14 00      lxi d, 20
1501   0956 19            dad d
1502   0957 22 52 2B      shld selectFile_f
1503   095A C3 F1 08      jmp l101
1504   095D             l102:
1505   095D C1            pop b
1506   095E C9            ret
1507   095F               ; --- reloadFiles -----------------------------------------------------------------
1508   095F             reloadFiles:
1509   095F 22 54 2B      shld reloadFiles_1
1510   0962               ; 441 drawPanelTitle(1);   
1511   0962 3E 01         mvi a, 1
1512   0964 CD 9F 1C      call drawPanelTitle
1513   0967               ; 442 drawCmdLineWithPath();
1514   0967 CD A2 1E      call drawCmdLineWithPath
1515   096A               ; 445 getFiles();
1516   096A CD BB 07      call getFiles
1517   096D               ; 448 drawPanelTitle(1);   
1518   096D 3E 01         mvi a, 1
1519   096F CD 9F 1C      call drawPanelTitle
1520   0972               ; 449 drawCmdLineWithPath();
1521   0972 CD A2 1E      call drawCmdLineWithPath
1522   0975               ; 452 if(sfile) {convertToConfition
1523   0975 2A 54 2B      lhld reloadFiles_1
1524   0978 7D            mov a, l
1525   0979 B4            ora h
1526   097A CA 80 09      jz l106
1527   097D               ; 453 selectFile(sfile);
1528   097D CD E4 08      call selectFile
1529   0980             l106:
1530   0980               ; 457 drawFilesCount();
1531   0980 CD CD 01      call drawFilesCount
1532   0983               ; 458 drawFiles();
1533   0983 CD 03 00      call drawFiles
1534   0986               ; 459 showFileCursorAndDrawFileInfo();
1535   0986 CD C7 01      call showFileCursorAndDrawFileInfo
1536   0989               ; 462 drawCmdLine(); 
1537   0989 C3 D6 1F      jmp drawCmdLine
1538   098C             absolutePath:
1539   098C 22 56 2B      shld absolutePath_1
1540   098F               ; 472 if(str[0] == '/') {Сложение с константой 0
1541   098F 7E            mov a, m
1542   0990 FE 2F         cpi 47
1543   0992 C2 A2 09      jnz l107
1544   0995               ; 473 strcpy(str, str+1);
1545   0995 22 B2 2D      shld strcpy_1
1546   0998               ; Сложение с константой 1
1547   0998 2A 56 2B      lhld absolutePath_1
1548   099B 23            inx h
1549   099C CD E3 22      call strcpy
1550   099F               ; 474 return 1;
1551   099F 3E 01         mvi a, 1
1552   09A1 C9            ret
1553   09A2             l107:
1554   09A2               ; 478 l = strlen(panelA.path1);
1555   09A2 21 1E 27      lxi h, (panelA)+(2)
1556   09A5 CD 08 22      call strlen
1557   09A8 22 58 2B      shld absolutePath_l
1558   09AB               ; 481 if(l != 0) l++;Сложение с константой 0
1559   09AB 7D            mov a, l
1560   09AC B4            ora h
1561   09AD CA B7 09      jz l108
1562   09B0               ; 481 l++;
1563   09B0 54            mov d, h
1564   09B1 5D            mov e, l
1565   09B2 23            inx h
1566   09B3 22 58 2B      shld absolutePath_l
1567   09B6 EB            xchg
1568   09B7             l108:
1569   09B7               ; 484 if(strlen(str) + l >= 255) return 0;
1570   09B7 2A 56 2B      lhld absolutePath_1
1571   09BA CD 08 22      call strlen
1572   09BD               ; Сложение
1573   09BD EB            xchg
1574   09BE 2A 58 2B      lhld absolutePath_l
1575   09C1 19            dad d
1576   09C2               ; Сложение
1577   09C2 11 01 FF      lxi d, 65281
1578   09C5 19            dad d
1579   09C6 D2 CB 09      jnc l109
1580   09C9               ; 484 return 0;
1581   09C9 AF            xra a
1582   09CA C9            ret
1583   09CB             l109:
1584   09CB               ; 487 memcpy_back(str+l, str, strlen(str)+1);Сложение
1585   09CB 2A 56 2B      lhld absolutePath_1
1586   09CE EB            xchg
1587   09CF 2A 58 2B      lhld absolutePath_l
1588   09D2 19            dad d
1589   09D3 22 B6 2D      shld memcpy_back_1
1590   09D6 2A 56 2B      lhld absolutePath_1
1591   09D9 22 B8 2D      shld memcpy_back_2
1592   09DC 2A 56 2B      lhld absolutePath_1
1593   09DF CD 08 22      call strlen
1594   09E2               ; Сложение с константой 1
1595   09E2 23            inx h
1596   09E3 CD F4 22      call memcpy_back
1597   09E6               ; 488 memcpy(str, panelA.path1, l);
1598   09E6 2A 56 2B      lhld absolutePath_1
1599   09E9 22 A6 2D      shld memcpy_1
1600   09EC 21 1E 27      lxi h, (panelA)+(2)
1601   09EF 22 A8 2D      shld memcpy_2
1602   09F2 2A 58 2B      lhld absolutePath_l
1603   09F5 CD 91 22      call memcpy
1604   09F8               ; 491 if(l != 0) str[l-1] = '/';Сложение с константой 0
1605   09F8 2A 58 2B      lhld absolutePath_l
1606   09FB 7D            mov a, l
1607   09FC B4            ora h
1608   09FD CA 08 0A      jz l110
1609   0A00               ; 491 str[l-1] = '/';Сложение с константой -1
1610   0A00 2B            dcx h
1611   0A01               ; Сложение
1612   0A01 EB            xchg
1613   0A02 2A 56 2B      lhld absolutePath_1
1614   0A05 19            dad d
1615   0A06 36 2F         mvi m, 47
1616   0A08             l110:
1617   0A08               ; 493 return 1;
1618   0A08 3E 01         mvi a, 1
1619   0A0A C9            ret
1620   0A0B               ; --- getName -----------------------------------------------------------------
1621   0A0B             getName:
1622   0A0B 22 5A 2B      shld getName_1
1623   0A0E               ; 500 for(p = name; *p; p++)
1624   0A0E 22 5C 2B      shld getName_p
1625   0A11             l111:
1626   0A11               ; convertToConfition
1627   0A11 2A 5C 2B      lhld getName_p
1628   0A14 AF            xra a
1629   0A15 B6            ora m
1630   0A16 CA 30 0A      jz l112
1631   0A19               ; 501 if(*p == '/')
1632   0A19 7E            mov a, m
1633   0A1A FE 2F         cpi 47
1634   0A1C C2 23 0A      jnz l114
1635   0A1F               ; 502 name = p+1;Сложение с константой 1
1636   0A1F 23            inx h
1637   0A20 22 5A 2B      shld getName_1
1638   0A23             l114:
1639   0A23             l113:
1640   0A23 2A 5C 2B      lhld getName_p
1641   0A26 54            mov d, h
1642   0A27 5D            mov e, l
1643   0A28 23            inx h
1644   0A29 22 5C 2B      shld getName_p
1645   0A2C EB            xchg
1646   0A2D C3 11 0A      jmp l111
1647   0A30             l112:
1648   0A30               ; 503 return name;
1649   0A30 2A 5A 2B      lhld getName_1
1650   0A33 C9            ret
1651   0A34               ; --- dropPathInt -----------------------------------------------------------------
1652   0A34             dropPathInt:
1653   0A34 22 60 2B      shld dropPathInt_2
1654   0A37               ; 513 p = getname(src);
1655   0A37 2A 5E 2B      lhld dropPathInt_1
1656   0A3A CD 0B 0A      call getName
1657   0A3D 22 62 2B      shld dropPathInt_p
1658   0A40               ; 516 if(preparedName) packName(preparedName, p);convertToConfition
1659   0A40 2A 60 2B      lhld dropPathInt_2
1660   0A43 7D            mov a, l
1661   0A44 B4            ora h
1662   0A45 CA 51 0A      jz l115
1663   0A48               ; 516 packName(preparedName, p);
1664   0A48 22 2E 2B      shld packName_1
1665   0A4B 2A 62 2B      lhld dropPathInt_p
1666   0A4E CD 5A 07      call packName
1667   0A51             l115:
1668   0A51               ; 519 if(p != src) --p;
1669   0A51 2A 62 2B      lhld dropPathInt_p
1670   0A54 EB            xchg
1671   0A55 2A 5E 2B      lhld dropPathInt_1
1672   0A58 CD 01 21      call op_cmp16
1673   0A5B CA 65 0A      jz l116
1674   0A5E               ; 519 --p;
1675   0A5E 2A 62 2B      lhld dropPathInt_p
1676   0A61 2B            dcx h
1677   0A62 22 62 2B      shld dropPathInt_p
1678   0A65             l116:
1679   0A65               ; 520 *p = 0;
1680   0A65 2A 62 2B      lhld dropPathInt_p
1681   0A68 36 00         mvi m, 0
1682   0A6A C9            ret
1683   0A6B               ; --- dropPath -----------------------------------------------------------------
1684   0A6B             dropPath:
1685   0A6B 21 1E 27      lxi h, (panelA)+(2)
1686   0A6E 22 5E 2B      shld dropPathInt_1
1687   0A71 21 64 2B      lxi h, dropPath_buf
1688   0A74 CD 34 0A      call dropPathInt
1689   0A77               ; 529 reloadFiles(buf);
1690   0A77 21 64 2B      lxi h, dropPath_buf
1691   0A7A C3 5F 09      jmp reloadFiles
1692   0A7D             cursor_left:
1693   0A7D 3A 1E 28      lda (panelA)+(258)
1694   0A80 B7            ora a
1695   0A81 CA 8B 0A      jz l117
1696   0A84               ; 537 --panelA.cursorX; 
1697   0A84 21 1E 28      lxi h, (panelA)+(258)
1698   0A87 35            dcr m
1699   0A88 C3 C8 0A      jmp l118
1700   0A8B             l117:
1701   0A8B               ; 539 if(panelA.offset) { convertToConfition
1702   0A8B 2A 20 28      lhld (panelA)+(260)
1703   0A8E 7D            mov a, l
1704   0A8F B4            ora h
1705   0A90 CA BD 0A      jz l119
1706   0A93               ; 540 if(ROWS_CNT > panelA.offset) { Сложение
1707   0A93 11 EA FF      lxi d, 65514
1708   0A96 19            dad d
1709   0A97 DA A9 0A      jc l120
1710   0A9A CA A9 0A      jz l120
1711   0A9D               ; 541 panelA.offset = 0; 
1712   0A9D 21 00 00      lxi h, 0
1713   0AA0 22 20 28      shld (panelA)+(260)
1714   0AA3               ; 542 drawFiles();
1715   0AA3 CD 03 00      call drawFiles
1716   0AA6 C3 BA 0A      jmp l121
1717   0AA9             l120:
1718   0AA9               ; 544 panelA.offset -= ROWS_CNT; 16 битная арифметическая операция с константой
1719   0AA9 2A 20 28      lhld (panelA)+(260)
1720   0AAC 7D            mov a, l
1721   0AAD D6 16         sui 22
1722   0AAF 6F            mov l, a
1723   0AB0 7C            mov a, h
1724   0AB1 DE 00         sbi 0
1725   0AB3 67            mov h, a
1726   0AB4 22 20 28      shld (panelA)+(260)
1727   0AB7               ; 545 drawFiles();
1728   0AB7 CD 03 00      call drawFiles
1729   0ABA             l121:
1730   0ABA C3 C8 0A      jmp l122
1731   0ABD             l119:
1732   0ABD               ; 548 if(panelA.cursorY) {convertToConfition
1733   0ABD 3A 1F 28      lda (panelA)+(259)
1734   0AC0 B7            ora a
1735   0AC1 CA C8 0A      jz l123
1736   0AC4               ; 549 panelA.cursorY = 0; 
1737   0AC4 AF            xra a
1738   0AC5 32 1F 28      sta (panelA)+(259)
1739   0AC8             l123:
1740   0AC8             l122:
1741   0AC8             l118:
1742   0AC8               ; 552 showFileCursorAndDrawFileInfo();
1743   0AC8 C3 C7 01      jmp showFileCursorAndDrawFileInfo
1744   0ACB             cursor_right:
1745   0ACB 2A 20 28      lhld (panelA)+(260)
1746   0ACE EB            xchg
1747   0ACF 2A 1F 28      lhld (panelA)+(259)
1748   0AD2 26 00         mvi h, 0
1749   0AD4 19            dad d
1750   0AD5 E5            push h
1751   0AD6 16 16         mvi d, 22
1752   0AD8 3A 1E 28      lda (panelA)+(258)
1753   0ADB CD ED 20      call op_mul
1754   0ADE               ; Сложение
1755   0ADE D1            pop d
1756   0ADF 19            dad d
1757   0AE0 22 6F 2B      shld cursor_right_w
1758   0AE3               ; 563 if(w + ROWS_CNT >= panelA.cnt) { //! перепутаны > и >=Сложение
1759   0AE3 11 16 00      lxi d, 22
1760   0AE6 19            dad d
1761   0AE7 EB            xchg
1762   0AE8 2A 22 28      lhld (panelA)+(262)
1763   0AEB CD 01 21      call op_cmp16
1764   0AEE CA F4 0A      jz l125
1765   0AF1 D2 4E 0B      jnc l124
1766   0AF4             l125:
1767   0AF4               ; 565 if(w + 1 >= panelA.cnt) { Сложение с константой 1
1768   0AF4 2A 6F 2B      lhld cursor_right_w
1769   0AF7 23            inx h
1770   0AF8 EB            xchg
1771   0AF9 2A 22 28      lhld (panelA)+(262)
1772   0AFC CD 01 21      call op_cmp16
1773   0AFF CA 05 0B      jz l127
1774   0B02 D2 06 0B      jnc l126
1775   0B05             l127:
1776   0B05               ; 566 return;
1777   0B05 C9            ret
1778   0B06             l126:
1779   0B06               ; 569 panelA.cursorY = panelA.cnt - (panelA.offset + panelA.cursorX*ROWS_CNT + 1);
1780   0B06 16 16         mvi d, 22
1781   0B08 3A 1E 28      lda (panelA)+(258)
1782   0B0B CD ED 20      call op_mul
1783   0B0E               ; Сложение
1784   0B0E EB            xchg
1785   0B0F 2A 20 28      lhld (panelA)+(260)
1786   0B12 19            dad d
1787   0B13               ; Сложение с константой 1
1788   0B13 23            inx h
1789   0B14               ; 16 битная арифметическая операция с константой
1790   0B14 EB            xchg
1791   0B15 2A 22 28      lhld (panelA)+(262)
1792   0B18 7D            mov a, l
1793   0B19 93            sub e
1794   0B1A 6F            mov l, a
1795   0B1B 7C            mov a, h
1796   0B1C 9A            sbb d
1797   0B1D 67            mov h, a
1798   0B1E 7D            mov a, l
1799   0B1F 32 1F 28      sta (panelA)+(259)
1800   0B22               ; 571 if(panelA.cursorY>ROWS_CNT-1) {
1801   0B22 FE 15         cpi 21
1802   0B24 DA 4B 0B      jc l128
1803   0B27 CA 4B 0B      jz l128
1804   0B2A               ; 572 panelA.cursorY -= ROWS_CNT;Арифметика 4/3
1805   0B2A D6 16         sui 22
1806   0B2C 32 1F 28      sta (panelA)+(259)
1807   0B2F               ; 573 if(panelA.cursorX == 1) { 
1808   0B2F 3A 1E 28      lda (panelA)+(258)
1809   0B32 FE 01         cpi 1
1810   0B34 C2 47 0B      jnz l129
1811   0B37               ; 574 panelA.offset += ROWS_CNT;Сложение
1812   0B37 11 16 00      lxi d, 22
1813   0B3A 2A 20 28      lhld (panelA)+(260)
1814   0B3D 19            dad d
1815   0B3E 22 20 28      shld (panelA)+(260)
1816   0B41               ; 575 drawFiles();
1817   0B41 CD 03 00      call drawFiles
1818   0B44 C3 4B 0B      jmp l130
1819   0B47             l129:
1820   0B47               ; 577 panelA.cursorX++; 
1821   0B47 21 1E 28      lxi h, (panelA)+(258)
1822   0B4A 34            inr m
1823   0B4B             l130:
1824   0B4B             l128:
1825   0B4B C3 6A 0B      jmp l131
1826   0B4E             l124:
1827   0B4E               ; 581 if(panelA.cursorX == 1) { 
1828   0B4E 3A 1E 28      lda (panelA)+(258)
1829   0B51 FE 01         cpi 1
1830   0B53 C2 66 0B      jnz l132
1831   0B56               ; 582 panelA.offset += ROWS_CNT;Сложение
1832   0B56 11 16 00      lxi d, 22
1833   0B59 2A 20 28      lhld (panelA)+(260)
1834   0B5C 19            dad d
1835   0B5D 22 20 28      shld (panelA)+(260)
1836   0B60               ; 583 drawFiles();
1837   0B60 CD 03 00      call drawFiles
1838   0B63 C3 6A 0B      jmp l133
1839   0B66             l132:
1840   0B66               ; 585 panelA.cursorX++;
1841   0B66 21 1E 28      lxi h, (panelA)+(258)
1842   0B69 34            inr m
1843   0B6A             l133:
1844   0B6A             l131:
1845   0B6A               ; 588 showFileCursorAndDrawFileInfo();
1846   0B6A C3 C7 01      jmp showFileCursorAndDrawFileInfo
1847   0B6D             cursor_up:
1848   0B6D 3A 1F 28      lda (panelA)+(259)
1849   0B70 B7            ora a
1850   0B71 CA 7B 0B      jz l134
1851   0B74               ; 596 --panelA.cursorY;
1852   0B74 21 1F 28      lxi h, (panelA)+(259)
1853   0B77 35            dcr m
1854   0B78 C3 9D 0B      jmp l135
1855   0B7B             l134:
1856   0B7B               ; 598 if(panelA.cursorX) { convertToConfition
1857   0B7B 3A 1E 28      lda (panelA)+(258)
1858   0B7E B7            ora a
1859   0B7F CA 8E 0B      jz l136
1860   0B82               ; 599 --panelA.cursorX;
1861   0B82 21 1E 28      lxi h, (panelA)+(258)
1862   0B85 35            dcr m
1863   0B86               ; 600 panelA.cursorY = ROWS_CNT-1; 
1864   0B86 3E 15         mvi a, 21
1865   0B88 32 1F 28      sta (panelA)+(259)
1866   0B8B C3 9D 0B      jmp l137
1867   0B8E             l136:
1868   0B8E               ; 602 if(panelA.offset) {convertToConfition
1869   0B8E 2A 20 28      lhld (panelA)+(260)
1870   0B91 7D            mov a, l
1871   0B92 B4            ora h
1872   0B93 CA 9D 0B      jz l138
1873   0B96               ; 603 --panelA.offset; 
1874   0B96 2B            dcx h
1875   0B97 22 20 28      shld (panelA)+(260)
1876   0B9A               ; 604 drawFiles();
1877   0B9A CD 03 00      call drawFiles
1878   0B9D             l138:
1879   0B9D             l137:
1880   0B9D             l135:
1881   0B9D               ; 607 showFileCursorAndDrawFileInfo();
1882   0B9D C3 C7 01      jmp showFileCursorAndDrawFileInfo
1883   0BA0             cursor_down:
1884   0BA0 16 16         mvi d, 22
1885   0BA2 3A 1E 28      lda (panelA)+(258)
1886   0BA5 CD ED 20      call op_mul
1887   0BA8               ; Сложение
1888   0BA8 EB            xchg
1889   0BA9 2A 20 28      lhld (panelA)+(260)
1890   0BAC 19            dad d
1891   0BAD               ; Сложение
1892   0BAD EB            xchg
1893   0BAE 2A 1F 28      lhld (panelA)+(259)
1894   0BB1 26 00         mvi h, 0
1895   0BB3 19            dad d
1896   0BB4               ; Сложение с константой 1
1897   0BB4 23            inx h
1898   0BB5 EB            xchg
1899   0BB6 2A 22 28      lhld (panelA)+(262)
1900   0BB9 CD 01 21      call op_cmp16
1901   0BBC CA C2 0B      jz l140
1902   0BBF D2 C3 0B      jnc l139
1903   0BC2             l140:
1904   0BC2               ; 614 return;
1905   0BC2 C9            ret
1906   0BC3             l139:
1907   0BC3               ; 616 if(panelA.cursorY < ROWS_CNT-1) {
1908   0BC3 3A 1F 28      lda (panelA)+(259)
1909   0BC6 FE 15         cpi 21
1910   0BC8 D2 D2 0B      jnc l141
1911   0BCB               ; 617 ++panelA.cursorY;
1912   0BCB 21 1F 28      lxi h, (panelA)+(259)
1913   0BCE 34            inr m
1914   0BCF C3 EE 0B      jmp l142
1915   0BD2             l141:
1916   0BD2               ; 619 if(panelA.cursorX == 0) {
1917   0BD2 3A 1E 28      lda (panelA)+(258)
1918   0BD5 B7            ora a
1919   0BD6 C2 E4 0B      jnz l143
1920   0BD9               ; 620 panelA.cursorY = 0;
1921   0BD9 AF            xra a
1922   0BDA 32 1F 28      sta (panelA)+(259)
1923   0BDD               ; 621 ++panelA.cursorX; 
1924   0BDD 21 1E 28      lxi h, (panelA)+(258)
1925   0BE0 34            inr m
1926   0BE1 C3 EE 0B      jmp l144
1927   0BE4             l143:
1928   0BE4               ; 623 ++panelA.offset; 
1929   0BE4 2A 20 28      lhld (panelA)+(260)
1930   0BE7 23            inx h
1931   0BE8 22 20 28      shld (panelA)+(260)
1932   0BEB               ; 624 drawFiles();
1933   0BEB CD 03 00      call drawFiles
1934   0BEE             l144:
1935   0BEE             l142:
1936   0BEE               ; 627 showFileCursorAndDrawFileInfo();
1937   0BEE C3 C7 01      jmp showFileCursorAndDrawFileInfo
1938   0BF1             cmd_tab:
1939   0BF1 CD 4D 1A      call hideFileCursor
1940   0BF4               ; 635 drawPanelTitle(0);
1941   0BF4 AF            xra a
1942   0BF5 CD 9F 1C      call drawPanelTitle
1943   0BF8               ; 636 swapPanels();
1944   0BF8 CD 0F 00      call swapPanels
1945   0BFB               ; 637 showFileCursor();
1946   0BFB CD 65 1A      call showFileCursor
1947   0BFE               ; 638 drawPanelTitle(1);
1948   0BFE 3E 01         mvi a, 1
1949   0C00 CD 9F 1C      call drawPanelTitle
1950   0C03               ; 639 drawCmdLineWithPath();
1951   0C03 C3 A2 1E      jmp drawCmdLineWithPath
1952   0C06             runCmdLine:
1953   0C06 C5            push b
1954   0C07               ; 649 if(!absolutePath(cmdline)) return;
1955   0C07 21 30 29      lxi h, cmdline
1956   0C0A CD 8C 09      call absolutePath
1957   0C0D               ; convertToConfition
1958   0C0D B7            ora a
1959   0C0E C2 13 0C      jnz l145
1960   0C11               ; 649 return;
1961   0C11 C1            pop b
1962   0C12 C9            ret
1963   0C13             l145:
1964   0C13               ; 652 cmdLine2 = strchr(cmdLine, ' ');
1965   0C13 21 30 29      lxi h, cmdline
1966   0C16 22 BC 2D      shld strchr_1
1967   0C19 3E 20         mvi a, 32
1968   0C1B CD 1A 23      call strchr
1969   0C1E 44            mov b, h
1970   0C1F 4D            mov c, l
1971   0C20               ; 653 if(cmdLine2) {convertToConfition
1972   0C20 7D            mov a, l
1973   0C21 B4            ora h
1974   0C22 CA 2B 0C      jz l146
1975   0C25               ; 654 *cmdLine2 = 0;
1976   0C25 AF            xra a
1977   0C26 02            stax b
1978   0C27               ; 655 ++cmdLine2;
1979   0C27 03            inx b
1980   0C28 C3 2E 0C      jmp l147
1981   0C2B             l146:
1982   0C2B               ; 657 cmdLine2 = "";
1983   0C2B 01 32 2E      lxi b, string13
1984   0C2E             l147:
1985   0C2E               ; 661 run(cmdLine, cmdLine2);
1986   0C2E 21 30 29      lxi h, cmdline
1987   0C31 22 74 2B      shld run_1
1988   0C34 60            mov h, b
1989   0C35 69            mov l, c
1990   0C36 CD 49 0D      call run
1991   0C39 C1            pop b
1992   0C3A C9            ret
1993   0C3B               ; --- dupFiles -----------------------------------------------------------------
1994   0C3B             dupFiles:
1995   0C3B 32 71 2B      sta dupFiles_1
1996   0C3E               ; 667 swapPanels();
1997   0C3E CD 0F 00      call swapPanels
1998   0C41               ; 669 if(0==strcmp(panelA.path1, panelB.path1)) {
1999   0C41 21 1E 27      lxi h, (panelA)+(2)
2000   0C44 22 BF 2D      shld strcmp_1
2001   0C47 21 28 28      lxi h, (panelB)+(2)
2002   0C4A CD 2C 23      call strcmp
2003   0C4D B7            ora a
2004   0C4E C2 72 0C      jnz l148
2005   0C51               ; 670 memcpy(panelA.files1, panelB.files1, maxFiles*sizeof(FileInfo));
2006   0C51 2A 1C 27      lhld panelA
2007   0C54 22 A6 2D      shld memcpy_1
2008   0C57 2A 26 28      lhld panelB
2009   0C5A 22 A8 2D      shld memcpy_2
2010   0C5D 2A 30 2A      lhld maxFiles
2011   0C60 11 14 00      lxi d, 20
2012   0C63 CD 70 23      call op_mul16
2013   0C66 CD 91 22      call memcpy
2014   0C69               ; 671 panelA.cnt = panelB.cnt;    
2015   0C69 2A 2C 29      lhld (panelB)+(262)
2016   0C6C 22 22 28      shld (panelA)+(262)
2017   0C6F C3 79 0C      jmp l149
2018   0C72             l148:
2019   0C72               ; 674 if(reload) getFiles();convertToConfition
2020   0C72 3A 71 2B      lda dupFiles_1
2021   0C75 B7            ora a
2022   0C76 C4 BB 07      cnz getFiles
2023   0C79             l149:
2024   0C79               ; 677 getSel();
2025   0C79 CD 24 00      call getSel
2026   0C7C               ; 678 swapPanels();
2027   0C7C C3 0F 00      jmp swapPanels
2028   0C7F             loadState:
2029   0C7F 2A D8 2D      lhld fs_selfName
2030   0C82 CD 08 22      call strlen
2031   0C85 22 72 2B      shld loadState_i
2032   0C88               ; 686 if(i < 4) return;Сложение
2033   0C88 11 FB FF      lxi d, 65531
2034   0C8B 19            dad d
2035   0C8C DA 90 0C      jc l151
2036   0C8F               ; 686 return;
2037   0C8F C9            ret
2038   0C90             l151:
2039   0C90               ; 687 i -= 3;16 битная арифметическая операция с константой
2040   0C90 2A 72 2B      lhld loadState_i
2041   0C93 7D            mov a, l
2042   0C94 D6 03         sui 3
2043   0C96 6F            mov l, a
2044   0C97 7C            mov a, h
2045   0C98 DE 00         sbi 0
2046   0C9A 67            mov h, a
2047   0C9B 22 72 2B      shld loadState_i
2048   0C9E               ; 688 if(0 != strcmp(fs_selfName + i, ".RK")) return;Сложение
2049   0C9E 2A D8 2D      lhld fs_selfName
2050   0CA1 EB            xchg
2051   0CA2 2A 72 2B      lhld loadState_i
2052   0CA5 19            dad d
2053   0CA6 22 BF 2D      shld strcmp_1
2054   0CA9 21 FB 2E      lxi h, string14
2055   0CAC CD 2C 23      call strcmp
2056   0CAF B7            ora a
2057   0CB0 CA B4 0C      jz l152
2058   0CB3               ; 688 return;
2059   0CB3 C9            ret
2060   0CB4             l152:
2061   0CB4               ; 689 strcpy(fs_selfName + i, ".IN");Сложение
2062   0CB4 2A D8 2D      lhld fs_selfName
2063   0CB7 EB            xchg
2064   0CB8 2A 72 2B      lhld loadState_i
2065   0CBB 19            dad d
2066   0CBC 22 B2 2D      shld strcpy_1
2067   0CBF 21 F7 2E      lxi h, string15
2068   0CC2 CD E3 22      call strcpy
2069   0CC5               ; 691 if(fs_open(fs_selfName)) return;
2070   0CC5 2A D8 2D      lhld fs_selfName
2071   0CC8 CD 94 23      call fs_open
2072   0CCB               ; convertToConfition
2073   0CCB B7            ora a
2074   0CCC CA D0 0C      jz l153
2075   0CCF               ; 691 return;
2076   0CCF C9            ret
2077   0CD0             l153:
2078   0CD0               ; 692 fs_read(cmdline, 12);
2079   0CD0 21 30 29      lxi h, cmdline
2080   0CD3 22 C7 2D      shld fs_read_1
2081   0CD6 21 0C 00      lxi h, 12
2082   0CD9 CD 9F 23      call fs_read
2083   0CDC               ; 693 if(cmdline[11]) swapPanels();convertToConfition
2084   0CDC 3A 3B 29      lda (cmdline)+(11)
2085   0CDF B7            ora a
2086   0CE0 C4 0F 00      cnz swapPanels
2087   0CE3 21 1E 27      lxi h, (panelA)+(2)
2088   0CE6 22 C7 2D      shld fs_read_1
2089   0CE9 21 00 01      lxi h, 256
2090   0CEC CD 9F 23      call fs_read
2091   0CEF               ; 694 panelA.path1[255] = 0;
2092   0CEF AF            xra a
2093   0CF0 32 1D 28      sta ((panelA)+(2))+(255)
2094   0CF3               ; 695 fs_read(panelB.path1, 256); panelB.path1[255] = 0;
2095   0CF3 21 28 28      lxi h, (panelB)+(2)
2096   0CF6 22 C7 2D      shld fs_read_1
2097   0CF9 21 00 01      lxi h, 256
2098   0CFC CD 9F 23      call fs_read
2099   0CFF               ; 695 panelB.path1[255] = 0;
2100   0CFF AF            xra a
2101   0D00 32 27 29      sta ((panelB)+(2))+(255)
2102   0D03 C9            ret
2103   0D04               ; --- saveState -----------------------------------------------------------------
2104   0D04             saveState:
2105   0D04 2A D8 2D      lhld fs_selfName
2106   0D07 CD B2 23      call fs_create
2107   0D0A               ; convertToConfition
2108   0D0A B7            ora a
2109   0D0B CA 19 0D      jz l155
2110   0D0E 2A D8 2D      lhld fs_selfName
2111   0D11 CD 94 23      call fs_open
2112   0D14               ; convertToConfition
2113   0D14 B7            ora a
2114   0D15 CA 19 0D      jz l155
2115   0D18               ; 701 return;
2116   0D18 C9            ret
2117   0D19             l155:
2118   0D19               ; 702 fs_write(getSel()->fname, 11);
2119   0D19 CD 24 00      call getSel
2120   0D1C 22 CD 2D      shld fs_write_1
2121   0D1F 21 0B 00      lxi h, 11
2122   0D22 CD BE 23      call fs_write
2123   0D25               ; 703 fs_write(&activePanel, 1);
2124   0D25 21 2A 2D      lxi h, activePanel
2125   0D28 22 CD 2D      shld fs_write_1
2126   0D2B 21 01 00      lxi h, 1
2127   0D2E CD BE 23      call fs_write
2128   0D31               ; 704 fs_write(panelA.path1, 256);
2129   0D31 21 1E 27      lxi h, (panelA)+(2)
2130   0D34 22 CD 2D      shld fs_write_1
2131   0D37 21 00 01      lxi h, 256
2132   0D3A CD BE 23      call fs_write
2133   0D3D               ; 705 fs_write(panelB.path1, 256);
2134   0D3D 21 28 28      lxi h, (panelB)+(2)
2135   0D40 22 CD 2D      shld fs_write_1
2136   0D43 21 00 01      lxi h, 256
2137   0D46 C3 BE 23      jmp fs_write
2138   0D49             run:
2139   0D49 22 76 2B      shld run_2
2140   0D4C               ; 713 saveState();
2141   0D4C CD 04 0D      call saveState
2142   0D4F               ; 714 drawError(prog, fs_exec(prog, cmdLine)); 
2143   0D4F 2A 74 2B      lhld run_1
2144   0D52 22 69 2A      shld drawError_1
2145   0D55 2A 74 2B      lhld run_1
2146   0D58 22 D1 2D      shld fs_exec_1
2147   0D5B 2A 76 2B      lhld run_2
2148   0D5E CD D1 23      call fs_exec
2149   0D61 CD 9B 02      call drawError
2150   0D64               ; 715 drawScreen(); // Там происходит очистка ком строки
2151   0D64 C3 46 02      jmp drawScreen
2152   0D67             cmd_editview:
2153   0D67 22 78 2B      shld cmd_editview_1
2154   0D6A               ; 721 getSel();<f>
2155   0D6A CD 24 00      call getSel
2156   0D6D 22 7A 2B      shld cmd_editview_f
2157   0D70               ; 722 if(f->fattrib & 0x10) return;Сложение
2158   0D70 11 0B 00      lxi d, 11
2159   0D73 19            dad d
2160   0D74 7E            mov a, m
2161   0D75 E6 10         ani 16
2162   0D77               ; convertToConfition
2163   0D77 CA 7B 0D      jz l156
2164   0D7A               ; 722 return;
2165   0D7A C9            ret
2166   0D7B             l156:
2167   0D7B               ; 723 unpackName(cmdLine, f->fname);
2168   0D7B 21 30 29      lxi h, cmdline
2169   0D7E 22 76 2A      shld unpackName_1
2170   0D81 2A 7A 2B      lhld cmd_editview_f
2171   0D84 CD 35 04      call unpackName
2172   0D87               ; 724 if(!absolutePath(cmdLine)) {
2173   0D87 21 30 29      lxi h, cmdline
2174   0D8A CD 8C 09      call absolutePath
2175   0D8D               ; convertToConfition
2176   0D8D B7            ora a
2177   0D8E C2 94 0D      jnz l157
2178   0D91               ; 725 drawScreen();
2179   0D91 C3 46 02      jmp drawScreen
2180   0D94               ; 726 return;
2181   0D94             l157:
2182   0D94               ; 728 run(app, cmdLine);
2183   0D94 2A 78 2B      lhld cmd_editview_1
2184   0D97 22 74 2B      shld run_1
2185   0D9A 21 30 29      lxi h, cmdline
2186   0D9D C3 49 0D      jmp run
2187   0DA0             cmd_enter:
2188   0DA0 3A 30 29      lda (cmdline)+(0)
2189   0DA3 B7            ora a
2190   0DA4 CA AA 0D      jz l158
2191   0DA7               ; 740 runCmdLine(); // Функция восстановит экран
2192   0DA7 C3 06 0C      jmp runCmdLine
2193   0DAA               ; 741 return;
2194   0DAA             l158:
2195   0DAA               ; 745 f = getSelNoBack();
2196   0DAA CD 76 00      call getSelNoBack
2197   0DAD 22 7F 2B      shld cmd_enter_f
2198   0DB0               ; 748 if(f == 0) { Сложение с константой 0
2199   0DB0 7D            mov a, l
2200   0DB1 B4            ora h
2201   0DB2 C2 B8 0D      jnz l159
2202   0DB5               ; 749 dropPath(); 
2203   0DB5 C3 6B 0A      jmp dropPath
2204   0DB8               ; 750 return; 
2205   0DB8             l159:
2206   0DB8               ; 754 unpackName(cmdLine, f->fname);
2207   0DB8 21 30 29      lxi h, cmdline
2208   0DBB 22 76 2A      shld unpackName_1
2209   0DBE 2A 7F 2B      lhld cmd_enter_f
2210   0DC1 CD 35 04      call unpackName
2211   0DC4               ; 755 if(!absolutePath(cmdLine)) { drawScreen(); return; }
2212   0DC4 21 30 29      lxi h, cmdline
2213   0DC7 CD 8C 09      call absolutePath
2214   0DCA               ; convertToConfition
2215   0DCA B7            ora a
2216   0DCB C2 D1 0D      jnz l160
2217   0DCE               ; 755 drawScreen(); return; }
2218   0DCE C3 46 02      jmp drawScreen
2219   0DD1               ; 755 return; }
2220   0DD1             l160:
2221   0DD1               ; 758 if((f->fattrib & 0x10) != 0) { Сложение
2222   0DD1 2A 7F 2B      lhld cmd_enter_f
2223   0DD4 11 0B 00      lxi d, 11
2224   0DD7 19            dad d
2225   0DD8 7E            mov a, m
2226   0DD9 E6 10         ani 16
2227   0DDB CA F4 0D      jz l161
2228   0DDE               ; 759 strcpy(panelA.path1, cmdline);
2229   0DDE 21 1E 27      lxi h, (panelA)+(2)
2230   0DE1 22 B2 2D      shld strcpy_1
2231   0DE4 21 30 29      lxi h, cmdline
2232   0DE7 CD E3 22      call strcpy
2233   0DEA               ; 760 cmdline[0] = 0;
2234   0DEA AF            xra a
2235   0DEB 32 30 29      sta (cmdline)+(0)
2236   0DEE               ; 761 reloadFiles(0);
2237   0DEE 21 00 00      lxi h, 0
2238   0DF1 C3 5F 09      jmp reloadFiles
2239   0DF4               ; 762 return;
2240   0DF4             l161:
2241   0DF4               ; 766 run(cmdline, "");
2242   0DF4 21 30 29      lxi h, cmdline
2243   0DF7 22 74 2B      shld run_1
2244   0DFA 21 32 2E      lxi h, string13
2245   0DFD C3 49 0D      jmp run
2246   0E00             cmd_esc:
2247   0E00 3A 30 29      lda (cmdline)+(0)
2248   0E03 B7            ora a
2249   0E04 CA 0E 0E      jz l162
2250   0E07               ; 773 cmdline[0] = 0;
2251   0E07 AF            xra a
2252   0E08 32 30 29      sta (cmdline)+(0)
2253   0E0B               ; 774 drawCmdLine();
2254   0E0B C3 D6 1F      jmp drawCmdLine
2255   0E0E               ; 775 return;
2256   0E0E             l162:
2257   0E0E               ; 777 dropPath();
2258   0E0E C3 6B 0A      jmp dropPath
2259   0E11             cmd_inverseOne:
2260   0E11 CD 76 00      call getSelNoBack
2261   0E14 22 85 2B      shld cmd_inverseOne_f
2262   0E17               ; 784 if(!f) return;convertToConfition
2263   0E17 7D            mov a, l
2264   0E18 B4            ora h
2265   0E19 C2 1D 0E      jnz l163
2266   0E1C               ; 784 return;
2267   0E1C C9            ret
2268   0E1D             l163:
2269   0E1D               ; 785 f->fattrib ^= 0x80;Сложение
2270   0E1D 11 0B 00      lxi d, 11
2271   0E20 19            dad d
2272   0E21 7E            mov a, m
2273   0E22 EE 80         xri 128
2274   0E24 77            mov m, a
2275   0E25               ; 786 drawFile(panelA.cursorX, panelA.cursorY, f);
2276   0E25 3A 1E 28      lda (panelA)+(258)
2277   0E28 32 57 2D      sta drawFile_1
2278   0E2B 3A 1F 28      lda (panelA)+(259)
2279   0E2E 32 58 2D      sta drawFile_2
2280   0E31 2A 85 2B      lhld cmd_inverseOne_f
2281   0E34 CD 42 1E      call drawFile
2282   0E37               ; 787 cursor_down();
2283   0E37 C3 A0 0B      jmp cursor_down
2284   0E3A             cmd_inverseAll:
2285   0E3A 2A 1C 27      lhld panelA
2286   0E3D 22 87 2B      shld cmd_inverseAll_f
2287   0E40 2A 22 28      lhld (panelA)+(262)
2288   0E43 22 89 2B      shld cmd_inverseAll_i
2289   0E46             l164:
2290   0E46               ; convertToConfition
2291   0E46 2A 89 2B      lhld cmd_inverseAll_i
2292   0E49 7D            mov a, l
2293   0E4A B4            ora h
2294   0E4B CA 88 0E      jz l165
2295   0E4E               ; 796 if(f->fattrib & 0x10) {Сложение
2296   0E4E 2A 87 2B      lhld cmd_inverseAll_f
2297   0E51 11 0B 00      lxi d, 11
2298   0E54 19            dad d
2299   0E55 7E            mov a, m
2300   0E56 E6 10         ani 16
2301   0E58               ; convertToConfition
2302   0E58 CA 69 0E      jz l167
2303   0E5B               ; 797 f->fattrib &= 0x7F;Сложение
2304   0E5B 2A 87 2B      lhld cmd_inverseAll_f
2305   0E5E 11 0B 00      lxi d, 11
2306   0E61 19            dad d
2307   0E62 7E            mov a, m
2308   0E63 E6 7F         ani 127
2309   0E65 77            mov m, a
2310   0E66 C3 74 0E      jmp l168
2311   0E69             l167:
2312   0E69               ; 799 f->fattrib ^= 0x80;Сложение
2313   0E69 2A 87 2B      lhld cmd_inverseAll_f
2314   0E6C 11 0B 00      lxi d, 11
2315   0E6F 19            dad d
2316   0E70 7E            mov a, m
2317   0E71 EE 80         xri 128
2318   0E73 77            mov m, a
2319   0E74             l168:
2320   0E74             l166:
2321   0E74 2A 89 2B      lhld cmd_inverseAll_i
2322   0E77 2B            dcx h
2323   0E78 22 89 2B      shld cmd_inverseAll_i
2324   0E7B 2A 87 2B      lhld cmd_inverseAll_f
2325   0E7E 11 14 00      lxi d, 20
2326   0E81 19            dad d
2327   0E82 22 87 2B      shld cmd_inverseAll_f
2328   0E85 C3 46 0E      jmp l164
2329   0E88             l165:
2330   0E88               ; 802 drawFiles();
2331   0E88 CD 03 00      call drawFiles
2332   0E8B               ; 803 showFileCursor();
2333   0E8B C3 65 1A      jmp showFileCursor
2334   0E8E             main:
2335   0E8E C5            push b
2336   0E8F               ; 813 fs_init();
2337   0E8F CD DF 23      call fs_init
2338   0E92               ; 816 drawInit();  
2339   0E92 CD FB 19      call drawInit
2340   0E95               ; 819 panelA.files1 = ((FileInfo*)START_FILE_BUFFER);
2341   0E95 21 00 34      lxi h, 13312
2342   0E98 22 1C 27      shld panelA
2343   0E9B               ; 820 panelB.files1 = ((FileInfo*)START_FILE_BUFFER)+maxFiles;
2344   0E9B 2A 30 2A      lhld maxFiles
2345   0E9E               ; Умножение HL на 20
2346   0E9E 54            mov d, h
2347   0E9F 5D            mov e, l
2348   0EA0 29            dad h
2349   0EA1 29            dad h
2350   0EA2 19            dad d
2351   0EA3 29            dad h
2352   0EA4 29            dad h
2353   0EA5               ; Сложение
2354   0EA5 11 00 34      lxi d, 13312
2355   0EA8 19            dad d
2356   0EA9 22 26 28      shld panelB
2357   0EAC               ; 823 panelA.path1[0] = 0;
2358   0EAC AF            xra a
2359   0EAD 32 1E 27      sta ((panelA)+(2))+(0)
2360   0EB0               ; 824 panelB.path1[0] = 0;
2361   0EB0 32 28 28      sta ((panelB)+(2))+(0)
2362   0EB3               ; 827 cmdline[0] = 0;
2363   0EB3 32 30 29      sta (cmdline)+(0)
2364   0EB6               ; 830 drawScreenInt();
2365   0EB6 CD 53 1C      call drawScreenInt
2366   0EB9               ; 831 drawCmdLineWithPath();
2367   0EB9 CD A2 1E      call drawCmdLineWithPath
2368   0EBC               ; 834 loadState();
2369   0EBC CD 7F 0C      call loadState
2370   0EBF               ; 837 getFiles();
2371   0EBF CD BB 07      call getFiles
2372   0EC2               ; 840 dupFiles(1);
2373   0EC2 3E 01         mvi a, 1
2374   0EC4 CD 3B 0C      call dupFiles
2375   0EC7               ; 843 selectFile(cmdline);
2376   0EC7 21 30 29      lxi h, cmdline
2377   0ECA CD E4 08      call selectFile
2378   0ECD               ; 844 cmdline[0] = 0;
2379   0ECD AF            xra a
2380   0ECE 32 30 29      sta (cmdline)+(0)
2381   0ED1               ; 847 drawPanelTitle(1);
2382   0ED1 3C            inr a
2383   0ED2 CD 9F 1C      call drawPanelTitle
2384   0ED5               ; 848 swapPanels();
2385   0ED5 CD 0F 00      call swapPanels
2386   0ED8               ; 849 drawPanelTitle(0);
2387   0ED8 AF            xra a
2388   0ED9 CD 9F 1C      call drawPanelTitle
2389   0EDC               ; 850 swapPanels();
2390   0EDC CD 0F 00      call swapPanels
2391   0EDF               ; 851 drawFiles2();
2392   0EDF CD 2E 02      call drawFiles2
2393   0EE2               ; 852 drawCmdLineWithPath();
2394   0EE2 CD A2 1E      call drawCmdLineWithPath
2395   0EE5               ; 855 while(1) {
2396   0EE5             l169:
2397   0EE5               ; 856 c = getch1();
2398   0EE5 CD C3 20      call getch1
2399   0EE8 47            mov b, a
2400   0EE9               ; 858 switch(c) {
2401   0EE9 78            mov a, b
2402   0EEA B7            ora a
2403   0EEB CA 23 0F      jz l172
2404   0EEE FE 01         cpi 1
2405   0EF0 CA 29 0F      jz l173
2406   0EF3 FE 02         cpi 2
2407   0EF5 CA 30 0F      jz l174
2408   0EF8 FE 03         cpi 3
2409   0EFA CA 39 0F      jz l175
2410   0EFD FE 0D         cpi 13
2411   0EFF CA 42 0F      jz l176
2412   0F02 FE 1B         cpi 27
2413   0F04 CA 48 0F      jz l177
2414   0F07 FE 08         cpi 8
2415   0F09 CA 4E 0F      jz l178
2416   0F0C FE 18         cpi 24
2417   0F0E CA 54 0F      jz l179
2418   0F11 FE 1A         cpi 26
2419   0F13 CA 5A 0F      jz l180
2420   0F16 FE 19         cpi 25
2421   0F18 CA 60 0F      jz l181
2422   0F1B FE 09         cpi 9
2423   0F1D CA 66 0F      jz l182
2424   0F20 C3 6C 0F      jmp l171
2425   0F23             l172:
2426   0F23               ; 859 cmd_freespace();         continue;
2427   0F23 CD 26 17      call cmd_freespace
2428   0F26               ; 859 continue;
2429   0F26 C3 E5 0E      jmp l169
2430   0F29             l173:
2431   0F29               ; 860 cmd_new(0);              continue;
2432   0F29 AF            xra a
2433   0F2A CD 87 16      call cmd_new
2434   0F2D               ; 860 continue;
2435   0F2D C3 E5 0E      jmp l169
2436   0F30             l174:
2437   0F30               ; 861 cmd_editview(viewerApp); continue;
2438   0F30 21 0F 27      lxi h, viewerApp
2439   0F33 CD 67 0D      call cmd_editview
2440   0F36               ; 861 continue;
2441   0F36 C3 E5 0E      jmp l169
2442   0F39             l175:
2443   0F39               ; 862 cmd_editview(editorApp); continue;
2444   0F39 21 02 27      lxi h, editorApp
2445   0F3C CD 67 0D      call cmd_editview
2446   0F3F               ; 862 continue;
2447   0F3F C3 E5 0E      jmp l169
2448   0F42             l176:
2449   0F42               ; 863 cmd_enter();             continue;
2450   0F42 CD A0 0D      call cmd_enter
2451   0F45               ; 863 continue;
2452   0F45 C3 E5 0E      jmp l169
2453   0F48             l177:
2454   0F48               ; 864 cmd_esc();               continue;
2455   0F48 CD 00 0E      call cmd_esc
2456   0F4B               ; 864 continue;
2457   0F4B C3 E5 0E      jmp l169
2458   0F4E             l178:
2459   0F4E               ; 865 cursor_left();           continue;
2460   0F4E CD 7D 0A      call cursor_left
2461   0F51               ; 865 continue;
2462   0F51 C3 E5 0E      jmp l169
2463   0F54             l179:
2464   0F54               ; 866 cursor_right();          continue; 
2465   0F54 CD CB 0A      call cursor_right
2466   0F57               ; 866 continue; 
2467   0F57 C3 E5 0E      jmp l169
2468   0F5A             l180:
2469   0F5A               ; 867 cursor_down();           continue;
2470   0F5A CD A0 0B      call cursor_down
2471   0F5D               ; 867 continue;
2472   0F5D C3 E5 0E      jmp l169
2473   0F60             l181:
2474   0F60               ; 868 cursor_up();             continue; 
2475   0F60 CD 6D 0B      call cursor_up
2476   0F63               ; 868 continue; 
2477   0F63 C3 E5 0E      jmp l169
2478   0F66             l182:
2479   0F66               ; 869 cmd_tab();               continue; 
2480   0F66 CD F1 0B      call cmd_tab
2481   0F69               ; 869 continue; 
2482   0F69 C3 E5 0E      jmp l169
2483   0F6C             l171:
2484   0F6C               ; 873 if(!cmdLine[0]) {convertToConfition
2485   0F6C 3A 30 29      lda (cmdline)+(0)
2486   0F6F B7            ora a
2487   0F70 C2 31 10      jnz l183
2488   0F73               ; 874 switch(c) {
2489   0F73 78            mov a, b
2490   0F74 FE 31         cpi 49
2491   0F76 CA BD 0F      jz l185
2492   0F79 FE 32         cpi 50
2493   0F7B CA C3 0F      jz l186
2494   0F7E FE 33         cpi 51
2495   0F80 CA CA 0F      jz l187
2496   0F83 FE 34         cpi 52
2497   0F85 CA D3 0F      jz l188
2498   0F88 FE 25         cpi 37
2499   0F8A CA DC 0F      jz l189
2500   0F8D FE 35         cpi 53
2501   0F8F CA E7 0F      jz l190
2502   0F92 FE 26         cpi 38
2503   0F94 CA F3 0F      jz l191
2504   0F97 FE 36         cpi 54
2505   0F99 CA FE 0F      jz l192
2506   0F9C FE 37         cpi 55
2507   0F9E CA 08 10      jz l193
2508   0FA1 FE 38         cpi 56
2509   0FA3 CA 10 10      jz l194
2510   0FA6 FE 1F         cpi 31
2511   0FA8 CA 16 10      jz l195
2512   0FAB FE 3A         cpi 58
2513   0FAD CA 1C 10      jz l196
2514   0FB0 FE 3B         cpi 59
2515   0FB2 CA 22 10      jz l197
2516   0FB5 FE 2D         cpi 45
2517   0FB7 CA 2A 10      jz l198
2518   0FBA C3 31 10      jmp l184
2519   0FBD             l185:
2520   0FBD               ; 875 cmd_freespace();         continue;
2521   0FBD CD 26 17      call cmd_freespace
2522   0FC0               ; 875 continue;
2523   0FC0 C3 E5 0E      jmp l169
2524   0FC3             l186:
2525   0FC3               ; 876 cmd_new(0);              continue;
2526   0FC3 AF            xra a
2527   0FC4 CD 87 16      call cmd_new
2528   0FC7               ; 876 continue;
2529   0FC7 C3 E5 0E      jmp l169
2530   0FCA             l187:
2531   0FCA               ; 877 cmd_editview(viewerApp); continue;
2532   0FCA 21 0F 27      lxi h, viewerApp
2533   0FCD CD 67 0D      call cmd_editview
2534   0FD0               ; 877 continue;
2535   0FD0 C3 E5 0E      jmp l169
2536   0FD3             l188:
2537   0FD3               ; 878 cmd_editview(editorApp); continue;
2538   0FD3 21 02 27      lxi h, editorApp
2539   0FD6 CD 67 0D      call cmd_editview
2540   0FD9               ; 878 continue;
2541   0FD9 C3 E5 0E      jmp l169
2542   0FDC             l189:
2543   0FDC               ; 879 cmd_copymove(1, 1);      continue;
2544   0FDC 3E 01         mvi a, 1
2545   0FDE 32 F0 2C      sta cmd_copymove_1
2546   0FE1 CD D7 15      call cmd_copymove
2547   0FE4               ; 879 continue;
2548   0FE4 C3 E5 0E      jmp l169
2549   0FE7             l190:
2550   0FE7               ; 880 cmd_copymove(1, 0);      continue;
2551   0FE7 3E 01         mvi a, 1
2552   0FE9 32 F0 2C      sta cmd_copymove_1
2553   0FEC AF            xra a
2554   0FED CD D7 15      call cmd_copymove
2555   0FF0               ; 880 continue;
2556   0FF0 C3 E5 0E      jmp l169
2557   0FF3             l191:
2558   0FF3               ; 881 cmd_copymove(0, 1);      continue;
2559   0FF3 AF            xra a
2560   0FF4 32 F0 2C      sta cmd_copymove_1
2561   0FF7 3C            inr a
2562   0FF8 CD D7 15      call cmd_copymove
2563   0FFB               ; 881 continue;
2564   0FFB C3 E5 0E      jmp l169
2565   0FFE             l192:
2566   0FFE               ; 882 cmd_copymove(0, 0);      continue;
2567   0FFE AF            xra a
2568   0FFF 32 F0 2C      sta cmd_copymove_1
2569   1002 CD D7 15      call cmd_copymove
2570   1005               ; 882 continue;
2571   1005 C3 E5 0E      jmp l169
2572   1008             l193:
2573   1008               ; 883 cmd_new(1);              continue;
2574   1008 3E 01         mvi a, 1
2575   100A CD 87 16      call cmd_new
2576   100D               ; 883 continue;
2577   100D C3 E5 0E      jmp l169
2578   1010             l194:
2579   1010               ; 884 cmd_delete();            continue;
2580   1010 CD 78 18      call cmd_delete
2581   1013               ; 884 continue;
2582   1013 C3 E5 0E      jmp l169
2583   1016             l195:
2584   1016               ; 885 cmd_inverseOne();        continue;
2585   1016 CD 11 0E      call cmd_inverseOne
2586   1019               ; 885 continue;
2587   1019 C3 E5 0E      jmp l169
2588   101C             l196:
2589   101C               ; 886 cmd_inverseAll();        continue; // *
2590   101C CD 3A 0E      call cmd_inverseAll
2591   101F               ; 886 continue; // *
2592   101F C3 E5 0E      jmp l169
2593   1022             l197:
2594   1022               ; 887 cmd_sel(1);              continue; // +
2595   1022 3E 01         mvi a, 1
2596   1024 CD 60 19      call cmd_sel
2597   1027               ; 887 continue; // +
2598   1027 C3 E5 0E      jmp l169
2599   102A             l198:
2600   102A               ; 888 cmd_sel(0);              continue;
2601   102A AF            xra a
2602   102B CD 60 19      call cmd_sel
2603   102E               ; 888 continue;
2604   102E C3 E5 0E      jmp l169
2605   1031             l184:
2606   1031             l183:
2607   1031               ; 893 processInput(c);
2608   1031 78            mov a, b
2609   1032 CD 53 02      call processInput
2610   1035               ; 894 drawCmdLine();
2611   1035 CD D6 1F      call drawCmdLine
2612   1038 C3 E5 0E      jmp l169
2613   103B             l170:
2614   103B C1            pop b
2615   103C C9            ret
2616   103D               ; --- cmd_copyFile -----------------------------------------------------------------
2617   103D             cmd_copyFile:
2618   103D 22 8D 2B      shld cmd_copyFile_2
2619   1040               ; 10 0;<progress_i>
2620   1040 AF            xra a
2621   1041 32 A0 2B      sta cmd_copyFile_progress_i
2622   1044               ; 15 if(e = fs_open(from)) return e;
2623   1044 2A 8B 2B      lhld cmd_copyFile_1
2624   1047 CD 94 23      call fs_open
2625   104A 32 9F 2B      sta cmd_copyFile_e
2626   104D               ; convertToConfition
2627   104D B7            ora a
2628   104E CA 55 10      jz l199
2629   1051               ; 15 return e;
2630   1051 3A 9F 2B      lda cmd_copyFile_e
2631   1054 C9            ret
2632   1055             l199:
2633   1055               ; 16 if(e = fs_getsize()) return e;
2634   1055 CD F0 23      call fs_getsize
2635   1058 32 9F 2B      sta cmd_copyFile_e
2636   105B               ; convertToConfition
2637   105B B7            ora a
2638   105C CA 63 10      jz l200
2639   105F               ; 16 return e;
2640   105F 3A 9F 2B      lda cmd_copyFile_e
2641   1062 C9            ret
2642   1063             l200:
2643   1063               ; 19 set32(&progress_step, &fs_result);
2644   1063 21 A9 2B      lxi h, cmd_copyFile_progress_step
2645   1066 22 E0 2D      shld set32_1
2646   1069 21 DB 2D      lxi h, fs_low
2647   106C CD FF 23      call set32
2648   106F               ; 20 div32_16(&progress_step, 40);
2649   106F 21 A9 2B      lxi h, cmd_copyFile_progress_step
2650   1072 22 E4 2D      shld div32_16_1
2651   1075 21 28 00      lxi h, 40
2652   1078 CD 15 24      call div32_16
2653   107B               ; 23 drawWindow(" kopirowanie ");
2654   107B 21 40 2E      lxi h, string16
2655   107E CD 11 1F      call drawWindow
2656   1081               ; 24 drawWindowText(0, 0, "iz:");
2657   1081 AF            xra a
2658   1082 32 65 2D      sta drawWindowText_1
2659   1085 32 66 2D      sta drawWindowText_2
2660   1088 21 E1 2F      lxi h, string17
2661   108B CD 8D 1F      call drawWindowText
2662   108E               ; 25 drawWindowText(4, 0, from);
2663   108E 3E 04         mvi a, 4
2664   1090 32 65 2D      sta drawWindowText_1
2665   1093 AF            xra a
2666   1094 32 66 2D      sta drawWindowText_2
2667   1097 2A 8B 2B      lhld cmd_copyFile_1
2668   109A CD 8D 1F      call drawWindowText
2669   109D               ; 26 drawWindowText(0, 1, "w:");
2670   109D AF            xra a
2671   109E 32 65 2D      sta drawWindowText_1
2672   10A1 3C            inr a
2673   10A2 32 66 2D      sta drawWindowText_2
2674   10A5 21 0A 31      lxi h, string18
2675   10A8 CD 8D 1F      call drawWindowText
2676   10AB               ; 27 drawWindowText(4, 1, to);
2677   10AB 3E 04         mvi a, 4
2678   10AD 32 65 2D      sta drawWindowText_1
2679   10B0 3E 01         mvi a, 1
2680   10B2 32 66 2D      sta drawWindowText_2
2681   10B5 2A 8D 2B      lhld cmd_copyFile_2
2682   10B8 CD 8D 1F      call drawWindowText
2683   10BB               ; 28 drawWindowText(0, 2, "skopirowano           /           bajt");
2684   10BB AF            xra a
2685   10BC 32 65 2D      sta drawWindowText_1
2686   10BF 3E 02         mvi a, 2
2687   10C1 32 66 2D      sta drawWindowText_2
2688   10C4 21 D8 30      lxi h, string19
2689   10C7 CD 8D 1F      call drawWindowText
2690   10CA               ; 29 drawWindowProgress(0, 3, 40, 0x7F);
2691   10CA AF            xra a
2692   10CB 32 69 2D      sta drawWindowProgress_1
2693   10CE 3E 03         mvi a, 3
2694   10D0 32 6A 2D      sta drawWindowProgress_2
2695   10D3 3E 28         mvi a, 40
2696   10D5 32 6B 2D      sta drawWindowProgress_3
2697   10D8 3E 7F         mvi a, 127
2698   10DA CD AF 1F      call drawWindowProgress
2699   10DD               ; 30 i2s32(buf, &fs_result, 10, ' ');
2700   10DD 21 8F 2B      lxi h, cmd_copyFile_buf
2701   10E0 22 81 2D      shld i2s32_1
2702   10E3 21 DB 2D      lxi h, fs_low
2703   10E6 22 83 2D      shld i2s32_2
2704   10E9 21 0A 00      lxi h, 10
2705   10EC 22 85 2D      shld i2s32_3
2706   10EF 3E 20         mvi a, 32
2707   10F1 CD 07 21      call i2s32
2708   10F4               ; 31 drawWindowText(23, 2, buf);
2709   10F4 3E 17         mvi a, 23
2710   10F6 32 65 2D      sta drawWindowText_1
2711   10F9 3E 02         mvi a, 2
2712   10FB 32 66 2D      sta drawWindowText_2
2713   10FE 21 8F 2B      lxi h, cmd_copyFile_buf
2714   1101 CD 8D 1F      call drawWindowText
2715   1104               ; 32 drawEscButton();
2716   1104 CD 7D 1F      call drawEscButton
2717   1107               ; 35 if(e = fs_swap()) return e;
2718   1107 CD 73 24      call fs_swap
2719   110A 32 9F 2B      sta cmd_copyFile_e
2720   110D               ; convertToConfition
2721   110D B7            ora a
2722   110E CA 15 11      jz l201
2723   1111               ; 35 return e;
2724   1111 3A 9F 2B      lda cmd_copyFile_e
2725   1114 C9            ret
2726   1115             l201:
2727   1115               ; 36 if(e = fs_create(to)) return e;
2728   1115 2A 8D 2B      lhld cmd_copyFile_2
2729   1118 CD B2 23      call fs_create
2730   111B 32 9F 2B      sta cmd_copyFile_e
2731   111E               ; convertToConfition
2732   111E B7            ora a
2733   111F CA 26 11      jz l202
2734   1122               ; 36 return e;
2735   1122 3A 9F 2B      lda cmd_copyFile_e
2736   1125 C9            ret
2737   1126             l202:
2738   1126               ; 1 ((ushort*)a)[0] = (b&0xFFFF); ((ushort*)a)[1] = (b>>16); }
2739   1126 21 00 00      lxi h, 0
2740   1129 22 A1 2B      shld (cmd_copyFile_progress)+(0)
2741   112C               ; 1 ((ushort*)a)[1] = (b>>16); }
2742   112C 22 A3 2B      shld (cmd_copyFile_progress)+(2)
2743   112F               ; 1 ((ushort*)a)[0] = (b&0xFFFF); ((ushort*)a)[1] = (b>>16); }
2744   112F 22 A5 2B      shld (cmd_copyFile_progress_x)+(0)
2745   1132               ; 1 ((ushort*)a)[1] = (b>>16); }
2746   1132 22 A7 2B      shld (cmd_copyFile_progress_x)+(2)
2747   1135               ; 41 for(;;) {
2748   1135             l203:
2749   1135               ; 43 i2s32(buf, &progress, 10, ' ');
2750   1135 21 8F 2B      lxi h, cmd_copyFile_buf
2751   1138 22 81 2D      shld i2s32_1
2752   113B 21 A1 2B      lxi h, cmd_copyFile_progress
2753   113E 22 83 2D      shld i2s32_2
2754   1141 21 0A 00      lxi h, 10
2755   1144 22 85 2D      shld i2s32_3
2756   1147 3E 20         mvi a, 32
2757   1149 CD 07 21      call i2s32
2758   114C               ; 44 drawWindowText(12, 2, buf); 
2759   114C 3E 0C         mvi a, 12
2760   114E 32 65 2D      sta drawWindowText_1
2761   1151 3E 02         mvi a, 2
2762   1153 32 66 2D      sta drawWindowText_2
2763   1156 21 8F 2B      lxi h, cmd_copyFile_buf
2764   1159 CD 8D 1F      call drawWindowText
2765   115C               ; 47 if(e = fs_swap()) return e;
2766   115C CD 73 24      call fs_swap
2767   115F 32 9F 2B      sta cmd_copyFile_e
2768   1162               ; convertToConfition
2769   1162 B7            ora a
2770   1163 CA 6A 11      jz l206
2771   1166               ; 47 return e;
2772   1166 3A 9F 2B      lda cmd_copyFile_e
2773   1169 C9            ret
2774   116A             l206:
2775   116A               ; 48 if(e = fs_read(panelB.files1, 1024) ) return e;
2776   116A 2A 26 28      lhld panelB
2777   116D 22 C7 2D      shld fs_read_1
2778   1170 21 00 04      lxi h, 1024
2779   1173 CD 9F 23      call fs_read
2780   1176 32 9F 2B      sta cmd_copyFile_e
2781   1179               ; convertToConfition
2782   1179 B7            ora a
2783   117A CA 81 11      jz l207
2784   117D               ; 48 return e;
2785   117D 3A 9F 2B      lda cmd_copyFile_e
2786   1180 C9            ret
2787   1181             l207:
2788   1181               ; 49 if(fs_low == 0) return 0; // ‘ ЇҐаҐ§ Јаг§Є®© д ©«®ўСложение с константой 0
2789   1181 2A DB 2D      lhld fs_low
2790   1184 7D            mov a, l
2791   1185 B4            ora h
2792   1186 C2 8B 11      jnz l208
2793   1189               ; 49 return 0; // ‘ ЇҐаҐ§ Јаг§Є®© д ©«®ў
2794   1189 AF            xra a
2795   118A C9            ret
2796   118B             l208:
2797   118B               ; 50 if(e = fs_swap()) return e;
2798   118B CD 73 24      call fs_swap
2799   118E 32 9F 2B      sta cmd_copyFile_e
2800   1191               ; convertToConfition
2801   1191 B7            ora a
2802   1192 CA 99 11      jz l209
2803   1195               ; 50 return e;
2804   1195 3A 9F 2B      lda cmd_copyFile_e
2805   1198 C9            ret
2806   1199             l209:
2807   1199               ; 51 if(e = fs_write(panelB.files1, fs_low)) return e;
2808   1199 2A 26 28      lhld panelB
2809   119C 22 CD 2D      shld fs_write_1
2810   119F 2A DB 2D      lhld fs_low
2811   11A2 CD BE 23      call fs_write
2812   11A5 32 9F 2B      sta cmd_copyFile_e
2813   11A8               ; convertToConfition
2814   11A8 B7            ora a
2815   11A9 CA B0 11      jz l210
2816   11AC               ; 51 return e;
2817   11AC 3A 9F 2B      lda cmd_copyFile_e
2818   11AF C9            ret
2819   11B0             l210:
2820   11B0               ; 54 add32_16(&progress, fs_low);
2821   11B0 21 A1 2B      lxi h, cmd_copyFile_progress
2822   11B3 22 EA 2D      shld add32_16_1
2823   11B6 2A DB 2D      lhld fs_low
2824   11B9 CD 7F 24      call add32_16
2825   11BC               ; 57 add32_16(&progress_x, fs_low);
2826   11BC 21 A5 2B      lxi h, cmd_copyFile_progress_x
2827   11BF 22 EA 2D      shld add32_16_1
2828   11C2 2A DB 2D      lhld fs_low
2829   11C5 CD 7F 24      call add32_16
2830   11C8               ; 58 while(progress_i < 40 && cmp32_32(&progress_x, &progress_step) != 1) {
2831   11C8             l211:
2832   11C8 3A A0 2B      lda cmd_copyFile_progress_i
2833   11CB FE 28         cpi 40
2834   11CD D2 05 12      jnc l212
2835   11D0 21 A5 2B      lxi h, cmd_copyFile_progress_x
2836   11D3 22 EE 2D      shld cmp32_32_1
2837   11D6 21 A9 2B      lxi h, cmd_copyFile_progress_step
2838   11D9 CD 9A 24      call cmp32_32
2839   11DC FE 01         cpi 1
2840   11DE CA 05 12      jz l212
2841   11E1               ; 59 sub32_32(&progress_x, &progress_step);
2842   11E1 21 A5 2B      lxi h, cmd_copyFile_progress_x
2843   11E4 22 F2 2D      shld sub32_32_1
2844   11E7 21 A9 2B      lxi h, cmd_copyFile_progress_step
2845   11EA CD C8 24      call sub32_32
2846   11ED               ; 60 drawWindowText(progress_i, 3, "\x17");
2847   11ED 3A A0 2B      lda cmd_copyFile_progress_i
2848   11F0 32 65 2D      sta drawWindowText_1
2849   11F3 3E 03         mvi a, 3
2850   11F5 32 66 2D      sta drawWindowText_2
2851   11F8 21 33 2E      lxi h, string20
2852   11FB CD 8D 1F      call drawWindowText
2853   11FE               ; 61 ++progress_i;
2854   11FE 21 A0 2B      lxi h, cmd_copyFile_progress_i
2855   1201 34            inr m
2856   1202 C3 C8 11      jmp l211
2857   1205             l212:
2858   1205               ; 65 if(bioskey1() == KEY_ESC) { e = ERR_USER; break; }
2859   1205 CD C7 20      call bioskey1
2860   1208 FE 1B         cpi 27
2861   120A C2 15 12      jnz l213
2862   120D               ; 65 e = ERR_USER; break; }
2863   120D 3E 80         mvi a, 128
2864   120F 32 9F 2B      sta cmd_copyFile_e
2865   1212               ; 65 break; }
2866   1212 C3 18 12      jmp l204
2867   1215             l213:
2868   1215             l205:
2869   1215 C3 35 11      jmp l203
2870   1218             l204:
2871   1218               ; 69 fs_delete(to);
2872   1218 2A 8D 2B      lhld cmd_copyFile_2
2873   121B CD E5 24      call fs_delete
2874   121E               ; 70 return e;
2875   121E 3A 9F 2B      lda cmd_copyFile_e
2876   1221 C9            ret
2877   1222               ; --- applyMask1 -----------------------------------------------------------------
2878   1222             applyMask1:
2879   1222 C5            push b
2880   1223 32 B1 2B      sta applyMask1_3
2881   1226               ; 77 for(;;) {
2882   1226             l214:
2883   1226               ; 78 m = *mask;
2884   1226 2A AF 2B      lhld applyMask1_2
2885   1229 46            mov b, m
2886   122A               ; 79 if(m == '*') return;
2887   122A 3E 2A         mvi a, 42
2888   122C B8            cmp b
2889   122D C2 32 12      jnz l217
2890   1230               ; 79 return;
2891   1230 C1            pop b
2892   1231 C9            ret
2893   1232             l217:
2894   1232               ; 80 if(m != '?') *dest = m;
2895   1232 3E 3F         mvi a, 63
2896   1234 B8            cmp b
2897   1235 CA 3C 12      jz l218
2898   1238               ; 80 *dest = m;
2899   1238 2A AD 2B      lhld applyMask1_1
2900   123B 70            mov m, b
2901   123C             l218:
2902   123C               ; 81 --i;
2903   123C 21 B1 2B      lxi h, applyMask1_3
2904   123F 35            dcr m
2905   1240               ; 82 if(i==0) return;
2906   1240 3A B1 2B      lda applyMask1_3
2907   1243 B7            ora a
2908   1244 C2 49 12      jnz l219
2909   1247               ; 82 return;
2910   1247 C1            pop b
2911   1248 C9            ret
2912   1249             l219:
2913   1249               ; 83 ++mask, ++dest;
2914   1249 2A AF 2B      lhld applyMask1_2
2915   124C 23            inx h
2916   124D 22 AF 2B      shld applyMask1_2
2917   1250 2A AD 2B      lhld applyMask1_1
2918   1253 23            inx h
2919   1254 22 AD 2B      shld applyMask1_1
2920   1257             l216:
2921   1257 C3 26 12      jmp l214
2922   125A             l215:
2923   125A C1            pop b
2924   125B C9            ret
2925   125C               ; --- cmd_copyFolder -----------------------------------------------------------------
2926   125C             cmd_copyFolder:
2927   125C 22 B4 2B      shld cmd_copyFolder_2
2928   125F               ; 94 0;<level>
2929   125F AF            xra a
2930   1260 32 B9 2B      sta cmd_copyFolder_level
2931   1263               ; 99 e = fs_mkdir(to); 
2932   1263 CD F1 24      call fs_mkdir
2933   1266 32 B6 2B      sta cmd_copyFolder_e
2934   1269               ; 100 if(e) return e;convertToConfition
2935   1269 B7            ora a
2936   126A CA 71 12      jz l220
2937   126D               ; 100 return e;
2938   126D 3A B6 2B      lda cmd_copyFolder_e
2939   1270 C9            ret
2940   1271             l220:
2941   1271               ; 102 for(i=0;;++i) {
2942   1271 21 00 00      lxi h, 0
2943   1274 22 B7 2B      shld cmd_copyFolder_i
2944   1277             l221:
2945   1277               ; 104 if(i == maxFiles) return ERR_MAX_FILES;
2946   1277 EB            xchg
2947   1278 2A 30 2A      lhld maxFiles
2948   127B CD 01 21      call op_cmp16
2949   127E C2 84 12      jnz l224
2950   1281               ; 104 return ERR_MAX_FILES;
2951   1281 3E 0A         mvi a, 10
2952   1283 C9            ret
2953   1284             l224:
2954   1284               ; 108 e = fs_findfirst(from, panelB.files1, i+1);
2955   1284 2A B2 2B      lhld cmd_copyFolder_1
2956   1287 22 AC 2D      shld fs_findfirst_1
2957   128A 2A 26 28      lhld panelB
2958   128D 22 AE 2D      shld fs_findfirst_2
2959   1290               ; Сложение с константой 1
2960   1290 2A B7 2B      lhld cmd_copyFolder_i
2961   1293 23            inx h
2962   1294 CD B5 22      call fs_findfirst
2963   1297 32 B6 2B      sta cmd_copyFolder_e
2964   129A               ; 109 if(e != 0 && e != ERR_MAX_FILES) return e; // Њл ўбҐЈ¤  Ўг¤Ґ¬ Ї®«гзЁвм ERR_MAX_FILES
2965   129A B7            ora a
2966   129B CA A7 12      jz l225
2967   129E 3A B6 2B      lda cmd_copyFolder_e
2968   12A1 FE 0A         cpi 10
2969   12A3 CA A7 12      jz l225
2970   12A6               ; 109 return e; // Њл ўбҐЈ¤  Ўг¤Ґ¬ Ї®«гзЁвм ERR_MAX_FILES
2971   12A6 C9            ret
2972   12A7             l225:
2973   12A7               ; 112 if(i >= fs_low) {
2974   12A7 2A B7 2B      lhld cmd_copyFolder_i
2975   12AA EB            xchg
2976   12AB 2A DB 2D      lhld fs_low
2977   12AE CD 01 21      call op_cmp16
2978   12B1 CA B7 12      jz l227
2979   12B4 D2 F0 12      jnc l226
2980   12B7             l227:
2981   12B7               ; 114 if(level==0) return 0;
2982   12B7 3A B9 2B      lda cmd_copyFolder_level
2983   12BA B7            ora a
2984   12BB C2 C0 12      jnz l228
2985   12BE               ; 114 return 0;
2986   12BE AF            xra a
2987   12BF C9            ret
2988   12C0             l228:
2989   12C0               ; 116 dropPathInt(from, 0);
2990   12C0 2A B2 2B      lhld cmd_copyFolder_1
2991   12C3 22 5E 2B      shld dropPathInt_1
2992   12C6 21 00 00      lxi h, 0
2993   12C9 CD 34 0A      call dropPathInt
2994   12CC               ; 117 dropPathInt(to, 0);
2995   12CC 2A B4 2B      lhld cmd_copyFolder_2
2996   12CF 22 5E 2B      shld dropPathInt_1
2997   12D2 21 00 00      lxi h, 0
2998   12D5 CD 34 0A      call dropPathInt
2999   12D8               ; 118 --level;
3000   12D8 21 B9 2B      lxi h, cmd_copyFolder_level
3001   12DB 35            dcr m
3002   12DC               ; 119 i = stack[level];
3003   12DC 2A B9 2B      lhld cmd_copyFolder_level
3004   12DF 26 00         mvi h, 0
3005   12E1               ; Умножение HL на 2
3006   12E1 29            dad h
3007   12E2               ; Сложение
3008   12E2 11 BA 2B      lxi d, cmd_copyFolder_stack
3009   12E5 19            dad d
3010   12E6 5E            mov e, m
3011   12E7 23            inx h
3012   12E8 56            mov d, m
3013   12E9 EB            xchg
3014   12EA 22 B7 2B      shld cmd_copyFolder_i
3015   12ED               ; 120 continue;
3016   12ED C3 A2 13      jmp l223
3017   12F0             l226:
3018   12F0               ; 122 f = panelB.files1 + i;
3019   12F0 2A B7 2B      lhld cmd_copyFolder_i
3020   12F3               ; Умножение HL на 20
3021   12F3 54            mov d, h
3022   12F4 5D            mov e, l
3023   12F5 29            dad h
3024   12F6 29            dad h
3025   12F7 19            dad d
3026   12F8 29            dad h
3027   12F9 29            dad h
3028   12FA               ; Сложение
3029   12FA EB            xchg
3030   12FB 2A 26 28      lhld panelB
3031   12FE 19            dad d
3032   12FF 22 CA 2B      shld cmd_copyFolder_f
3033   1302               ; 125 if(catPathAndUnpack(from, f->fname)) return ERR_RECV_STRING;
3034   1302 2A B2 2B      lhld cmd_copyFolder_1
3035   1305 22 7A 2A      shld catPathAndUnpack_1
3036   1308 2A CA 2B      lhld cmd_copyFolder_f
3037   130B CD 88 04      call catPathAndUnpack
3038   130E               ; convertToConfition
3039   130E B7            ora a
3040   130F CA 15 13      jz l229
3041   1312               ; 125 return ERR_RECV_STRING;
3042   1312 3E 0B         mvi a, 11
3043   1314 C9            ret
3044   1315             l229:
3045   1315               ; 126 if(catPathAndUnpack(to,   f->fname)) return ERR_RECV_STRING;
3046   1315 2A B4 2B      lhld cmd_copyFolder_2
3047   1318 22 7A 2A      shld catPathAndUnpack_1
3048   131B 2A CA 2B      lhld cmd_copyFolder_f
3049   131E CD 88 04      call catPathAndUnpack
3050   1321               ; convertToConfition
3051   1321 B7            ora a
3052   1322 CA 28 13      jz l230
3053   1325               ; 126 return ERR_RECV_STRING;
3054   1325 3E 0B         mvi a, 11
3055   1327 C9            ret
3056   1328             l230:
3057   1328               ; 129 if(f->fattrib & 0x10) {Сложение
3058   1328 2A CA 2B      lhld cmd_copyFolder_f
3059   132B 11 0B 00      lxi d, 11
3060   132E 19            dad d
3061   132F 7E            mov a, m
3062   1330 E6 10         ani 16
3063   1332               ; convertToConfition
3064   1332 CA 70 13      jz l231
3065   1335               ; 131 if(level == COPY_STACK-1) return ERR_RECV_STRING;
3066   1335 3A B9 2B      lda cmd_copyFolder_level
3067   1338 FE 07         cpi 7
3068   133A C2 3F 13      jnz l232
3069   133D               ; 131 return ERR_RECV_STRING;
3070   133D 7B            mov a, e
3071   133E C9            ret
3072   133F             l232:
3073   133F               ; 132 stack[level] = i;
3074   133F 2A B9 2B      lhld cmd_copyFolder_level
3075   1342 62            mov h, d
3076   1343               ; Умножение HL на 2
3077   1343 29            dad h
3078   1344               ; Сложение
3079   1344 11 BA 2B      lxi d, cmd_copyFolder_stack
3080   1347 19            dad d
3081   1348 E5            push h
3082   1349 2A B7 2B      lhld cmd_copyFolder_i
3083   134C D1            pop d
3084   134D EB            xchg
3085   134E 73            mov m, e
3086   134F 23            inx h
3087   1350 72            mov m, d
3088   1351 2B            dcx h
3089   1352               ; 133 level++;
3090   1352 21 B9 2B      lxi h, cmd_copyFolder_level
3091   1355 34            inr m
3092   1356               ; 135 e = fs_mkdir(to); 
3093   1356 2A B4 2B      lhld cmd_copyFolder_2
3094   1359 CD F1 24      call fs_mkdir
3095   135C 32 B6 2B      sta cmd_copyFolder_e
3096   135F               ; 136 if(e) return e;convertToConfition
3097   135F B7            ora a
3098   1360 CA 67 13      jz l233
3099   1363               ; 136 return e;
3100   1363 3A B6 2B      lda cmd_copyFolder_e
3101   1366 C9            ret
3102   1367             l233:
3103   1367               ; 138 i = -1;
3104   1367 21 FF FF      lxi h, 65535
3105   136A 22 B7 2B      shld cmd_copyFolder_i
3106   136D               ; 139 continue;
3107   136D C3 A2 13      jmp l223
3108   1370             l231:
3109   1370               ; 143 e = cmd_copyFile(from, to);
3110   1370 2A B2 2B      lhld cmd_copyFolder_1
3111   1373 22 8B 2B      shld cmd_copyFile_1
3112   1376 2A B4 2B      lhld cmd_copyFolder_2
3113   1379 CD 3D 10      call cmd_copyFile
3114   137C 32 B6 2B      sta cmd_copyFolder_e
3115   137F               ; 146 dropPathInt(from, 0);
3116   137F 2A B2 2B      lhld cmd_copyFolder_1
3117   1382 22 5E 2B      shld dropPathInt_1
3118   1385 21 00 00      lxi h, 0
3119   1388 CD 34 0A      call dropPathInt
3120   138B               ; 147 dropPathInt(to, 0);
3121   138B 2A B4 2B      lhld cmd_copyFolder_2
3122   138E 22 5E 2B      shld dropPathInt_1
3123   1391 21 00 00      lxi h, 0
3124   1394 CD 34 0A      call dropPathInt
3125   1397               ; 150 if(e) return e;convertToConfition
3126   1397 3A B6 2B      lda cmd_copyFolder_e
3127   139A B7            ora a
3128   139B CA A2 13      jz l234
3129   139E               ; 150 return e;
3130   139E 3A B6 2B      lda cmd_copyFolder_e
3131   13A1 C9            ret
3132   13A2             l234:
3133   13A2             l223:
3134   13A2 2A B7 2B      lhld cmd_copyFolder_i
3135   13A5 23            inx h
3136   13A6 22 B7 2B      shld cmd_copyFolder_i
3137   13A9 C3 77 12      jmp l221
3138   13AC             l222:
3139   13AC C9            ret
3140   13AD               ; --- applyMask -----------------------------------------------------------------
3141   13AD             applyMask:
3142   13AD 22 CE 2B      shld applyMask_2
3143   13B0               ; 157 applyMask1(dest, mask, 8);
3144   13B0 2A CC 2B      lhld applyMask_1
3145   13B3 22 AD 2B      shld applyMask1_1
3146   13B6 2A CE 2B      lhld applyMask_2
3147   13B9 22 AF 2B      shld applyMask1_2
3148   13BC 3E 08         mvi a, 8
3149   13BE CD 22 12      call applyMask1
3150   13C1               ; 158 applyMask1(dest+8, mask+8, 3);Сложение
3151   13C1 2A CC 2B      lhld applyMask_1
3152   13C4 11 08 00      lxi d, 8
3153   13C7 19            dad d
3154   13C8 22 AD 2B      shld applyMask1_1
3155   13CB               ; Сложение
3156   13CB 2A CE 2B      lhld applyMask_2
3157   13CE 11 08 00      lxi d, 8
3158   13D1 19            dad d
3159   13D2 22 AF 2B      shld applyMask1_2
3160   13D5 3E 03         mvi a, 3
3161   13D7 C3 22 12      jmp applyMask1
3162   13DA             cmd_copymove1:
3163   13DA 32 D1 2B      sta cmd_copymove1_2
3164   13DD               ; 173 if(shiftPressed) {convertToConfition
3165   13DD B7            ora a
3166   13DE CA FD 13      jz l235
3167   13E1               ; 175 f = getSelNoBack();
3168   13E1 CD 76 00      call getSelNoBack
3169   13E4 22 D5 2B      shld cmd_copymove1_f
3170   13E7               ; 176 if(!f) return 0; // ” ©« ­Ґ ўлЎа ­, ўле®¤Ё¬ ЎҐ§ ®иЁЎЄЁconvertToConfition
3171   13E7 7D            mov a, l
3172   13E8 B4            ora h
3173   13E9 C2 EE 13      jnz l236
3174   13EC               ; 176 return 0; // ” ©« ­Ґ ўлЎа ­, ўле®¤Ё¬ ЎҐ§ ®иЁЎЄЁ
3175   13EC AF            xra a
3176   13ED C9            ret
3177   13EE             l236:
3178   13EE               ; 177 unpackName(cmdLine, f->fname);
3179   13EE 21 30 29      lxi h, cmdline
3180   13F1 22 76 2A      shld unpackName_1
3181   13F4 2A D5 2B      lhld cmd_copymove1_f
3182   13F7 CD 35 04      call unpackName
3183   13FA C3 37 14      jmp l237
3184   13FD             l235:
3185   13FD               ; 180 i = strlen(panelB.path1);
3186   13FD 21 28 28      lxi h, (panelB)+(2)
3187   1400 CD 08 22      call strlen
3188   1403 22 EE 2C      shld cmd_copymove1_i
3189   1406               ; 181 if(i >= 254) return ERR_RECV_STRING; // ’ Є Є Є ЇаЁЎ ўЁ¬ 2 бЁ¬ў®« Сложение
3190   1406 11 02 FF      lxi d, 65282
3191   1409 19            dad d
3192   140A D2 10 14      jnc l238
3193   140D               ; 181 return ERR_RECV_STRING; // ’ Є Є Є ЇаЁЎ ўЁ¬ 2 бЁ¬ў®« 
3194   140D 3E 0B         mvi a, 11
3195   140F C9            ret
3196   1410             l238:
3197   1410               ; 182 cmdLine[0] = '/';
3198   1410 3E 2F         mvi a, 47
3199   1412 32 30 29      sta (cmdline)+(0)
3200   1415               ; 183 strcpy(cmdline+1, panelB.path1);
3201   1415 21 31 29      lxi h, (cmdline)+(1)
3202   1418 22 B2 2D      shld strcpy_1
3203   141B 21 28 28      lxi h, (panelB)+(2)
3204   141E CD E3 22      call strcpy
3205   1421               ; 184 if(i != 0) strcpy(cmdline+i+1, "/");Сложение с константой 0
3206   1421 2A EE 2C      lhld cmd_copymove1_i
3207   1424 7D            mov a, l
3208   1425 B4            ora h
3209   1426 CA 37 14      jz l239
3210   1429               ; 184 strcpy(cmdline+i+1, "/");Сложение
3211   1429 11 30 29      lxi d, cmdline
3212   142C 19            dad d
3213   142D               ; Сложение с константой 1
3214   142D 23            inx h
3215   142E 22 B2 2D      shld strcpy_1
3216   1431 21 FF 2E      lxi h, string21
3217   1434 CD E3 22      call strcpy
3218   1437             l239:
3219   1437             l237:
3220   1437               ; 188 if(!inputBox(copymode ? " kopirowatx " : " pereimenowatx/peremestitx ") && cmdline[0]!=0) return 0;
3221   1437 3A D0 2B      lda cmd_copymove1_1
3222   143A B7            ora a
3223   143B CA 44 14      jz l241
3224   143E 21 4E 2E      lxi h, string22
3225   1441 C3 47 14      jmp l242
3226   1444             l241:
3227   1444 21 92 2E      lxi h, string23
3228   1447             l242:
3229   1447 CD 7B 03      call inputBox
3230   144A               ; convertToConfition
3231   144A B7            ora a
3232   144B C2 57 14      jnz l240
3233   144E 3A 30 29      lda (cmdline)+(0)
3234   1451 B7            ora a
3235   1452 CA 57 14      jz l240
3236   1455               ; 188 return 0;
3237   1455 AF            xra a
3238   1456 C9            ret
3239   1457             l240:
3240   1457               ; 191 if(!absolutePath(cmdline)) return ERR_RECV_STRING;
3241   1457 21 30 29      lxi h, cmdline
3242   145A CD 8C 09      call absolutePath
3243   145D               ; convertToConfition
3244   145D B7            ora a
3245   145E C2 64 14      jnz l243
3246   1461               ; 191 return ERR_RECV_STRING;
3247   1461 3E 0B         mvi a, 11
3248   1463 C9            ret
3249   1464             l243:
3250   1464               ; 194 mask[0] = 0;  
3251   1464 AF            xra a
3252   1465 32 D7 2C      sta (cmd_copymove1_mask)+(0)
3253   1468               ; 195 name = getname(cmdline);
3254   1468 21 30 29      lxi h, cmdline
3255   146B CD 0B 0A      call getName
3256   146E 22 D2 2B      shld cmd_copymove1_name
3257   1471               ; 196 if(name[0] != 0) {Сложение с константой 0
3258   1471 7E            mov a, m
3259   1472 B7            ora a
3260   1473 CA 91 14      jz l244
3261   1476               ; 198 packName(mask, name);
3262   1476 21 D7 2C      lxi h, cmd_copymove1_mask
3263   1479 22 2E 2B      shld packName_1
3264   147C 2A D2 2B      lhld cmd_copymove1_name
3265   147F CD 5A 07      call packName
3266   1482               ; 200 dropPathInt(cmdLine, 0);
3267   1482 21 30 29      lxi h, cmdline
3268   1485 22 5E 2B      shld dropPathInt_1
3269   1488 21 00 00      lxi h, 0
3270   148B CD 34 0A      call dropPathInt
3271   148E C3 A3 14      jmp l245
3272   1491             l244:
3273   1491               ; 204 if(cmdline[0] != 0 && name[0] == 0) name[-1] = 0;
3274   1491 3A 30 29      lda (cmdline)+(0)
3275   1494 B7            ora a
3276   1495 CA A3 14      jz l246
3277   1498               ; Сложение с константой 0
3278   1498 2A D2 2B      lhld cmd_copymove1_name
3279   149B 7E            mov a, m
3280   149C B7            ora a
3281   149D C2 A3 14      jnz l246
3282   14A0               ; 204 name[-1] = 0;Сложение с константой -1
3283   14A0 2B            dcx h
3284   14A1 36 00         mvi m, 0
3285   14A3             l246:
3286   14A3             l245:
3287   14A3               ; 208 type = getFirstSelected(sourceFile);
3288   14A3 21 D7 2B      lxi h, cmd_copymove1_sourceFile
3289   14A6 CD C7 04      call getFirstSelected
3290   14A9 32 ED 2C      sta cmd_copymove1_type
3291   14AC               ; 209 if(type == 0) return 0; // ЌҐв ўлЎа ­­ле д ©«®ў
3292   14AC B7            ora a
3293   14AD C2 B2 14      jnz l247
3294   14B0               ; 209 return 0; // ЌҐв ўлЎа ­­ле д ©«®ў
3295   14B0 AF            xra a
3296   14B1 C9            ret
3297   14B2             l247:
3298   14B2               ; 211 for(;;) {
3299   14B2             l248:
3300   14B2               ; 213 if(!absolutePath(sourceFile)) { e = ERR_RECV_STRING; break; }
3301   14B2 21 D7 2B      lxi h, cmd_copymove1_sourceFile
3302   14B5 CD 8C 09      call absolutePath
3303   14B8               ; convertToConfition
3304   14B8 B7            ora a
3305   14B9 C2 C4 14      jnz l251
3306   14BC               ; 213 e = ERR_RECV_STRING; break; }
3307   14BC 3E 0B         mvi a, 11
3308   14BE 32 D4 2B      sta cmd_copymove1_e
3309   14C1               ; 213 break; }
3310   14C1 C3 CB 15      jmp l249
3311   14C4             l251:
3312   14C4               ; 216 packName(forMask, getname(sourceFile));
3313   14C4 21 E2 2C      lxi h, cmd_copymove1_forMask
3314   14C7 22 2E 2B      shld packName_1
3315   14CA 21 D7 2B      lxi h, cmd_copymove1_sourceFile
3316   14CD CD 0B 0A      call getName
3317   14D0 CD 5A 07      call packName
3318   14D3               ; 217 if(mask[0]) applyMask(forMask, mask);convertToConfition
3319   14D3 3A D7 2C      lda (cmd_copymove1_mask)+(0)
3320   14D6 B7            ora a
3321   14D7 CA E6 14      jz l252
3322   14DA               ; 217 applyMask(forMask, mask);
3323   14DA 21 E2 2C      lxi h, cmd_copymove1_forMask
3324   14DD 22 CC 2B      shld applyMask_1
3325   14E0 21 D7 2C      lxi h, cmd_copymove1_mask
3326   14E3 CD AD 13      call applyMask
3327   14E6             l252:
3328   14E6               ; 218 if(catPathAndUnpack(cmdline, forMask)) return ERR_RECV_STRING;
3329   14E6 21 30 29      lxi h, cmdline
3330   14E9 22 7A 2A      shld catPathAndUnpack_1
3331   14EC 21 E2 2C      lxi h, cmd_copymove1_forMask
3332   14EF CD 88 04      call catPathAndUnpack
3333   14F2               ; convertToConfition
3334   14F2 B7            ora a
3335   14F3 CA F9 14      jz l253
3336   14F6               ; 218 return ERR_RECV_STRING;
3337   14F6 3E 0B         mvi a, 11
3338   14F8 C9            ret
3339   14F9             l253:
3340   14F9               ; 221 if(0!=strcmp(sourceFile, cmdline)) {
3341   14F9 21 D7 2B      lxi h, cmd_copymove1_sourceFile
3342   14FC 22 BF 2D      shld strcmp_1
3343   14FF 21 30 29      lxi h, cmdline
3344   1502 CD 2C 23      call strcmp
3345   1505 B7            ora a
3346   1506 CA A8 15      jz l254
3347   1509               ; 223 if(copymode) {convertToConfition
3348   1509 3A D0 2B      lda cmd_copymove1_1
3349   150C B7            ora a
3350   150D CA 3C 15      jz l255
3351   1510               ; 224 if(type==2) {
3352   1510 3A ED 2C      lda cmd_copymove1_type
3353   1513 FE 02         cpi 2
3354   1515 C2 2A 15      jnz l256
3355   1518               ; 225 e = cmd_copyFolder(sourceFile, cmdline);
3356   1518 21 D7 2B      lxi h, cmd_copymove1_sourceFile
3357   151B 22 B2 2B      shld cmd_copyFolder_1
3358   151E 21 30 29      lxi h, cmdline
3359   1521 CD 5C 12      call cmd_copyFolder
3360   1524 32 D4 2B      sta cmd_copymove1_e
3361   1527 C3 39 15      jmp l257
3362   152A             l256:
3363   152A               ; 227 e = cmd_copyFile(sourceFile, cmdline);
3364   152A 21 D7 2B      lxi h, cmd_copymove1_sourceFile
3365   152D 22 8B 2B      shld cmd_copyFile_1
3366   1530 21 30 29      lxi h, cmdline
3367   1533 CD 3D 10      call cmd_copyFile
3368   1536 32 D4 2B      sta cmd_copymove1_e
3369   1539             l257:
3370   1539 C3 A1 15      jmp l258
3371   153C             l255:
3372   153C               ; 231 drawWindow(" pereimenowanie/pereme}enie ");
3373   153C 21 75 2E      lxi h, string24
3374   153F CD 11 1F      call drawWindow
3375   1542               ; 232 drawWindowText(0, 1, "iz:");
3376   1542 AF            xra a
3377   1543 32 65 2D      sta drawWindowText_1
3378   1546 3C            inr a
3379   1547 32 66 2D      sta drawWindowText_2
3380   154A 21 E1 2F      lxi h, string17
3381   154D CD 8D 1F      call drawWindowText
3382   1550               ; 233 drawWindowText(4, 1, sourceFile);
3383   1550 3E 04         mvi a, 4
3384   1552 32 65 2D      sta drawWindowText_1
3385   1555 3E 01         mvi a, 1
3386   1557 32 66 2D      sta drawWindowText_2
3387   155A 21 D7 2B      lxi h, cmd_copymove1_sourceFile
3388   155D CD 8D 1F      call drawWindowText
3389   1560               ; 234 drawWindowText(0, 2, "w:");
3390   1560 AF            xra a
3391   1561 32 65 2D      sta drawWindowText_1
3392   1564 3E 02         mvi a, 2
3393   1566 32 66 2D      sta drawWindowText_2
3394   1569 21 0A 31      lxi h, string18
3395   156C CD 8D 1F      call drawWindowText
3396   156F               ; 235 drawWindowText(4, 2, cmdline);
3397   156F 3E 04         mvi a, 4
3398   1571 32 65 2D      sta drawWindowText_1
3399   1574 3E 02         mvi a, 2
3400   1576 32 66 2D      sta drawWindowText_2
3401   1579 21 30 29      lxi h, cmdline
3402   157C CD 8D 1F      call drawWindowText
3403   157F               ; 236 drawAnyKeyButton();
3404   157F CD 6D 1F      call drawAnyKeyButton
3405   1582               ; 239 if(bioskey1() == KEY_ESC) { e = ERR_USER; break; }
3406   1582 CD C7 20      call bioskey1
3407   1585 FE 1B         cpi 27
3408   1587 C2 92 15      jnz l259
3409   158A               ; 239 e = ERR_USER; break; }
3410   158A 3E 80         mvi a, 128
3411   158C 32 D4 2B      sta cmd_copymove1_e
3412   158F               ; 239 break; }
3413   158F C3 CB 15      jmp l249
3414   1592             l259:
3415   1592               ; 241 e = fs_move(sourceFile, cmdline);    
3416   1592 21 D7 2B      lxi h, cmd_copymove1_sourceFile
3417   1595 22 FA 2D      shld fs_move_1
3418   1598 21 30 29      lxi h, cmdline
3419   159B CD FD 24      call fs_move
3420   159E 32 D4 2B      sta cmd_copymove1_e
3421   15A1             l258:
3422   15A1               ; 244 if(e) break;convertToConfition
3423   15A1 3A D4 2B      lda cmd_copymove1_e
3424   15A4 B7            ora a
3425   15A5 C2 CB 15      jnz l249
3426   15A8             l254:
3427   15A8               ; 248 dropPathInt(cmdLine, 0);
3428   15A8 21 30 29      lxi h, cmdline
3429   15AB 22 5E 2B      shld dropPathInt_1
3430   15AE 21 00 00      lxi h, 0
3431   15B1 CD 34 0A      call dropPathInt
3432   15B4               ; 251 type = getNextSelected(sourceFile);
3433   15B4 21 D7 2B      lxi h, cmd_copymove1_sourceFile
3434   15B7 CD 13 05      call getNextSelected
3435   15BA 32 ED 2C      sta cmd_copymove1_type
3436   15BD               ; 252 if(type == 0) { e=0; break; }
3437   15BD B7            ora a
3438   15BE C2 C8 15      jnz l261
3439   15C1               ; 252 e=0; break; }
3440   15C1 AF            xra a
3441   15C2 32 D4 2B      sta cmd_copymove1_e
3442   15C5               ; 252 break; }
3443   15C5 C3 CB 15      jmp l249
3444   15C8             l261:
3445   15C8             l250:
3446   15C8 C3 B2 14      jmp l248
3447   15CB             l249:
3448   15CB               ; 257 getFiles();
3449   15CB CD BB 07      call getFiles
3450   15CE               ; 258 dupFiles(1);
3451   15CE 3E 01         mvi a, 1
3452   15D0 CD 3B 0C      call dupFiles
3453   15D3               ; 260 return e;
3454   15D3 3A D4 2B      lda cmd_copymove1_e
3455   15D6 C9            ret
3456   15D7               ; --- cmd_copymove -----------------------------------------------------------------
3457   15D7             cmd_copymove:
3458   15D7 32 F1 2C      sta cmd_copymove_2
3459   15DA               ; 266 drawError(copymode ? "o{ibka kopirowaniq" : "o{ibka pereme}eniq", cmd_copymove1(copymode, shiftPressed));
3460   15DA 3A F0 2C      lda cmd_copymove_1
3461   15DD B7            ora a
3462   15DE CA E7 15      jz l262
3463   15E1 21 12 30      lxi h, string25
3464   15E4 C3 EA 15      jmp l263
3465   15E7             l262:
3466   15E7 21 37 30      lxi h, string26
3467   15EA             l263:
3468   15EA 22 69 2A      shld drawError_1
3469   15ED 3A F0 2C      lda cmd_copymove_1
3470   15F0 32 D0 2B      sta cmd_copymove1_1
3471   15F3 3A F1 2C      lda cmd_copymove_2
3472   15F6 CD DA 13      call cmd_copymove1
3473   15F9 CD 9B 02      call drawError
3474   15FC               ; 267 drawScreen();
3475   15FC C3 46 02      jmp drawScreen
3476   15FF             cmd_new1:
3477   15FF 32 F2 2C      sta cmd_new1_1
3478   1602               ; 8 cmdLine[0] = 0;
3479   1602 AF            xra a
3480   1603 32 30 29      sta (cmdline)+(0)
3481   1606               ; 11 if(!inputBox(dir ? " sozdatx papku " : " sozdatx fajl ") && cmdline[0]!=0) return 0;
3482   1606 3A F2 2C      lda cmd_new1_1
3483   1609 B7            ora a
3484   160A CA 13 16      jz l265
3485   160D 21 CE 2E      lxi h, string27
3486   1610 C3 16 16      jmp l266
3487   1613             l265:
3488   1613 21 BF 2E      lxi h, string28
3489   1616             l266:
3490   1616 CD 7B 03      call inputBox
3491   1619               ; convertToConfition
3492   1619 B7            ora a
3493   161A C2 26 16      jnz l264
3494   161D 3A 30 29      lda (cmdline)+(0)
3495   1620 B7            ora a
3496   1621 CA 26 16      jz l264
3497   1624               ; 11 return 0;
3498   1624 AF            xra a
3499   1625 C9            ret
3500   1626             l264:
3501   1626               ; 13 if(!absolutePath(cmdline)) return ERR_RECV_STRING;
3502   1626 21 30 29      lxi h, cmdline
3503   1629 CD 8C 09      call absolutePath
3504   162C               ; convertToConfition
3505   162C B7            ora a
3506   162D C2 33 16      jnz l267
3507   1630               ; 13 return ERR_RECV_STRING;
3508   1630 3E 0B         mvi a, 11
3509   1632 C9            ret
3510   1633             l267:
3511   1633               ; 16 if(!dir) {convertToConfition
3512   1633 3A F2 2C      lda cmd_new1_1
3513   1636 B7            ora a
3514   1637 C2 6F 16      jnz l268
3515   163A               ; 17 if(strlen(cmdline) >= 255) return ERR_RECV_STRING;
3516   163A 21 30 29      lxi h, cmdline
3517   163D CD 08 22      call strlen
3518   1640               ; Сложение
3519   1640 11 01 FF      lxi d, 65281
3520   1643 19            dad d
3521   1644 D2 4A 16      jnc l269
3522   1647               ; 17 return ERR_RECV_STRING;
3523   1647 3E 0B         mvi a, 11
3524   1649 C9            ret
3525   164A             l269:
3526   164A               ; 20 memcpy_back(cmdline+1, cmdline, 255);
3527   164A 21 31 29      lxi h, (cmdline)+(1)
3528   164D 22 B6 2D      shld memcpy_back_1
3529   1650 21 30 29      lxi h, cmdline
3530   1653 22 B8 2D      shld memcpy_back_2
3531   1656 21 FF 00      lxi h, 255
3532   1659 CD F4 22      call memcpy_back
3533   165C               ; 21 cmdline[0] = '*';
3534   165C 3E 2A         mvi a, 42
3535   165E 32 30 29      sta (cmdline)+(0)
3536   1661               ; 24 run(editorApp, cmdLine);
3537   1661 21 02 27      lxi h, editorApp
3538   1664 22 74 2B      shld run_1
3539   1667 21 30 29      lxi h, cmdline
3540   166A CD 49 0D      call run
3541   166D               ; 25 return 0;
3542   166D AF            xra a
3543   166E C9            ret
3544   166F             l268:
3545   166F               ; 29 dir = fs_mkdir(cmdline);
3546   166F 21 30 29      lxi h, cmdline
3547   1672 CD F1 24      call fs_mkdir
3548   1675 32 F2 2C      sta cmd_new1_1
3549   1678               ; 32 if(!dir) {convertToConfition
3550   1678 B7            ora a
3551   1679 C2 83 16      jnz l270
3552   167C               ; 33 getFiles();
3553   167C CD BB 07      call getFiles
3554   167F               ; 34 dupFiles(0);
3555   167F AF            xra a
3556   1680 CD 3B 0C      call dupFiles
3557   1683             l270:
3558   1683               ; 37 return dir;
3559   1683 3A F2 2C      lda cmd_new1_1
3560   1686 C9            ret
3561   1687               ; --- cmd_new -----------------------------------------------------------------
3562   1687             cmd_new:
3563   1687 32 F3 2C      sta cmd_new_1
3564   168A               ; 41 drawError("o{ibka sozdaniq papki", cmd_new1(dir));
3565   168A 21 4A 30      lxi h, string29
3566   168D 22 69 2A      shld drawError_1
3567   1690 CD FF 15      call cmd_new1
3568   1693 CD 9B 02      call drawError
3569   1696               ; 43 drawScreen();
3570   1696 C3 46 02      jmp drawScreen
3571   1699             cmd_freespace_1:
3572   1699 22 F5 2C      shld cmd_freespace_1_2
3573   169C               ; 10 i2s32(buf, (ulong*)&fs_low, 10, ' ');
3574   169C 21 F7 2C      lxi h, cmd_freespace_1_buf
3575   169F 22 81 2D      shld i2s32_1
3576   16A2 21 DB 2D      lxi h, fs_low
3577   16A5 22 83 2D      shld i2s32_2
3578   16A8 21 0A 00      lxi h, 10
3579   16AB 22 85 2D      shld i2s32_3
3580   16AE 3E 20         mvi a, 32
3581   16B0 CD 07 21      call i2s32
3582   16B3               ; 13 memcpy_back(buf+10, buf+7, 3); buf[9]  = ' ';
3583   16B3 21 01 2D      lxi h, (cmd_freespace_1_buf)+(10)
3584   16B6 22 B6 2D      shld memcpy_back_1
3585   16B9 21 FE 2C      lxi h, (cmd_freespace_1_buf)+(7)
3586   16BC 22 B8 2D      shld memcpy_back_2
3587   16BF 21 03 00      lxi h, 3
3588   16C2 CD F4 22      call memcpy_back
3589   16C5               ; 13 buf[9]  = ' ';
3590   16C5 3E 20         mvi a, 32
3591   16C7 32 00 2D      sta (cmd_freespace_1_buf)+(9)
3592   16CA               ; 14 memcpy_back(buf+6,  buf+4, 3); buf[5]  = ' ';
3593   16CA 21 FD 2C      lxi h, (cmd_freespace_1_buf)+(6)
3594   16CD 22 B6 2D      shld memcpy_back_1
3595   16D0 21 FB 2C      lxi h, (cmd_freespace_1_buf)+(4)
3596   16D3 22 B8 2D      shld memcpy_back_2
3597   16D6 21 03 00      lxi h, 3
3598   16D9 CD F4 22      call memcpy_back
3599   16DC               ; 14 buf[5]  = ' ';
3600   16DC 3E 20         mvi a, 32
3601   16DE 32 FC 2C      sta (cmd_freespace_1_buf)+(5)
3602   16E1               ; 15 memcpy_back(buf+2,  buf+1, 3); buf[1]  = ' ';
3603   16E1 21 F9 2C      lxi h, (cmd_freespace_1_buf)+(2)
3604   16E4 22 B6 2D      shld memcpy_back_1
3605   16E7 21 F8 2C      lxi h, (cmd_freespace_1_buf)+(1)
3606   16EA 22 B8 2D      shld memcpy_back_2
3607   16ED 21 03 00      lxi h, 3
3608   16F0 CD F4 22      call memcpy_back
3609   16F3               ; 15 buf[1]  = ' ';
3610   16F3 3E 20         mvi a, 32
3611   16F5 32 F8 2C      sta (cmd_freespace_1_buf)+(1)
3612   16F8               ; 16 strcpy(buf+13, " mb");
3613   16F8 21 04 2D      lxi h, (cmd_freespace_1_buf)+(13)
3614   16FB 22 B2 2D      shld strcpy_1
3615   16FE 21 5B 2E      lxi h, string30
3616   1701 CD E3 22      call strcpy
3617   1704               ; 19 drawWindowText(6, y, text);
3618   1704 3E 06         mvi a, 6
3619   1706 32 65 2D      sta drawWindowText_1
3620   1709 3A F4 2C      lda cmd_freespace_1_1
3621   170C 32 66 2D      sta drawWindowText_2
3622   170F 2A F5 2C      lhld cmd_freespace_1_2
3623   1712 CD 8D 1F      call drawWindowText
3624   1715               ; 20 drawWindowText(16, y, buf);
3625   1715 3E 10         mvi a, 16
3626   1717 32 65 2D      sta drawWindowText_1
3627   171A 3A F4 2C      lda cmd_freespace_1_1
3628   171D 32 66 2D      sta drawWindowText_2
3629   1720 21 F7 2C      lxi h, cmd_freespace_1_buf
3630   1723 C3 8D 1F      jmp drawWindowText
3631   1726             cmd_freespace:
3632   1726 21 5F 2E      lxi h, string31
3633   1729 CD 11 1F      call drawWindow
3634   172C               ; 30 drawWindowText(6, 2, "prowerka...");  
3635   172C 3E 06         mvi a, 6
3636   172E 32 65 2D      sta drawWindowText_1
3637   1731 3E 02         mvi a, 2
3638   1733 32 66 2D      sta drawWindowText_2
3639   1736 21 A4 30      lxi h, string32
3640   1739 CD 8D 1F      call drawWindowText
3641   173C               ; 33 if(e = fs_getfree()) { 
3642   173C CD 0C 25      call fs_getfree
3643   173F 32 08 2D      sta cmd_freespace_e
3644   1742               ; convertToConfition
3645   1742 B7            ora a
3646   1743 CA 55 17      jz l271
3647   1746               ; 34 drawError("o{ibka ~teniq", e);
3648   1746 21 70 30      lxi h, string33
3649   1749 22 69 2A      shld drawError_1
3650   174C 3A 08 2D      lda cmd_freespace_e
3651   174F CD 9B 02      call drawError
3652   1752 C3 78 17      jmp l272
3653   1755             l271:
3654   1755               ; 37 cmd_freespace_1(2, "swobodno: ");
3655   1755 3E 02         mvi a, 2
3656   1757 32 F4 2C      sta cmd_freespace_1_1
3657   175A 21 FF 30      lxi h, string34
3658   175D CD 99 16      call cmd_freespace_1
3659   1760               ; 40 if(!fs_gettotal()) cmd_freespace_1(1, "wsego:");
3660   1760 CD 1B 25      call fs_gettotal
3661   1763               ; convertToConfition
3662   1763 B7            ora a
3663   1764 C2 72 17      jnz l273
3664   1767               ; 40 cmd_freespace_1(1, "wsego:");
3665   1767 3E 01         mvi a, 1
3666   1769 32 F4 2C      sta cmd_freespace_1_1
3667   176C 21 0D 31      lxi h, string35
3668   176F CD 99 16      call cmd_freespace_1
3669   1772             l273:
3670   1772               ; 43 drawAnyKeyButton();
3671   1772 CD 6D 1F      call drawAnyKeyButton
3672   1775               ; 44 getch1();
3673   1775 CD C3 20      call getch1
3674   1778             l272:
3675   1778               ; 47 drawScreen();
3676   1778 C3 46 02      jmp drawScreen
3677   177B             cmd_deleteFile:
3678   177B 21 DE 2E      lxi h, string36
3679   177E CD 11 1F      call drawWindow
3680   1781               ; 9 drawWindowText(0, 1, cmdline);
3681   1781 AF            xra a
3682   1782 32 65 2D      sta drawWindowText_1
3683   1785 3C            inr a
3684   1786 32 66 2D      sta drawWindowText_2
3685   1789 21 30 29      lxi h, cmdline
3686   178C CD 8D 1F      call drawWindowText
3687   178F               ; 10 drawEscButton();
3688   178F CD 7D 1F      call drawEscButton
3689   1792               ; 13 if(bioskey1() == KEY_ESC) return ERR_USER;
3690   1792 CD C7 20      call bioskey1
3691   1795 FE 1B         cpi 27
3692   1797 C2 9D 17      jnz l274
3693   179A               ; 13 return ERR_USER;
3694   179A 3E 80         mvi a, 128
3695   179C C9            ret
3696   179D             l274:
3697   179D               ; 16 return fs_delete(cmdline);
3698   179D 21 30 29      lxi h, cmdline
3699   17A0 C3 E5 24      jmp fs_delete
3700   17A3 C9            ret
3701   17A4               ; --- cmd_deleteFolder -----------------------------------------------------------------
3702   17A4             cmd_deleteFolder:
3703   17A4 AF            xra a
3704   17A5 32 09 2D      sta cmd_deleteFolder_level
3705   17A8               ; 29 while(1) {
3706   17A8             l275:
3707   17A8               ; 31 e = fs_findfirst(cmdline, panelB.files1, maxFiles);  
3708   17A8 21 30 29      lxi h, cmdline
3709   17AB 22 AC 2D      shld fs_findfirst_1
3710   17AE 2A 26 28      lhld panelB
3711   17B1 22 AE 2D      shld fs_findfirst_2
3712   17B4 2A 30 2A      lhld maxFiles
3713   17B7 CD B5 22      call fs_findfirst
3714   17BA 32 0A 2D      sta cmd_deleteFolder_e
3715   17BD               ; 32 if(e != 0 && e != ERR_MAX_FILES) return e;
3716   17BD B7            ora a
3717   17BE CA CA 17      jz l277
3718   17C1 3A 0A 2D      lda cmd_deleteFolder_e
3719   17C4 FE 0A         cpi 10
3720   17C6 CA CA 17      jz l277
3721   17C9               ; 32 return e;
3722   17C9 C9            ret
3723   17CA             l277:
3724   17CA               ; 33 panelB.cnt = fs_low;
3725   17CA 2A DB 2D      lhld fs_low
3726   17CD 22 2C 29      shld (panelB)+(262)
3727   17D0               ; 36 e = 0;
3728   17D0 AF            xra a
3729   17D1 32 0A 2D      sta cmd_deleteFolder_e
3730   17D4               ; 37 for(p=panelB.files1, i=panelB.cnt; i; --i, ++p) {
3731   17D4 2A 26 28      lhld panelB
3732   17D7 22 0B 2D      shld cmd_deleteFolder_p
3733   17DA 2A 2C 29      lhld (panelB)+(262)
3734   17DD 22 0D 2D      shld cmd_deleteFolder_i
3735   17E0             l278:
3736   17E0               ; convertToConfition
3737   17E0 2A 0D 2D      lhld cmd_deleteFolder_i
3738   17E3 7D            mov a, l
3739   17E4 B4            ora h
3740   17E5 CA 31 18      jz l279
3741   17E8               ; 38 if(catPathAndUnpack(cmdLine, p->fname)) return ERR_RECV_STRING;
3742   17E8 21 30 29      lxi h, cmdline
3743   17EB 22 7A 2A      shld catPathAndUnpack_1
3744   17EE 2A 0B 2D      lhld cmd_deleteFolder_p
3745   17F1 CD 88 04      call catPathAndUnpack
3746   17F4               ; convertToConfition
3747   17F4 B7            ora a
3748   17F5 CA FB 17      jz l281
3749   17F8               ; 38 return ERR_RECV_STRING;
3750   17F8 3E 0B         mvi a, 11
3751   17FA C9            ret
3752   17FB             l281:
3753   17FB               ; 39 e = cmd_deleteFile();
3754   17FB CD 7B 17      call cmd_deleteFile
3755   17FE 32 0A 2D      sta cmd_deleteFolder_e
3756   1801               ; 40 if(e == ERR_DIR_NOT_EMPTY) break;
3757   1801 FE 07         cpi 7
3758   1803 CA 31 18      jz l279
3759   1806 21 30 29      lxi h, cmdline
3760   1809 22 5E 2B      shld dropPathInt_1
3761   180C 21 00 00      lxi h, 0
3762   180F CD 34 0A      call dropPathInt
3763   1812               ; 43 if(e) return e;convertToConfition
3764   1812 3A 0A 2D      lda cmd_deleteFolder_e
3765   1815 B7            ora a
3766   1816 CA 1D 18      jz l283
3767   1819               ; 43 return e;
3768   1819 3A 0A 2D      lda cmd_deleteFolder_e
3769   181C C9            ret
3770   181D             l283:
3771   181D             l280:
3772   181D 2A 0D 2D      lhld cmd_deleteFolder_i
3773   1820 2B            dcx h
3774   1821 22 0D 2D      shld cmd_deleteFolder_i
3775   1824 2A 0B 2D      lhld cmd_deleteFolder_p
3776   1827 11 14 00      lxi d, 20
3777   182A 19            dad d
3778   182B 22 0B 2D      shld cmd_deleteFolder_p
3779   182E C3 E0 17      jmp l278
3780   1831             l279:
3781   1831               ; 47 if(e == ERR_DIR_NOT_EMPTY) { 
3782   1831 3A 0A 2D      lda cmd_deleteFolder_e
3783   1834 FE 07         cpi 7
3784   1836 C2 40 18      jnz l284
3785   1839               ; 48 ++level;
3786   1839 21 09 2D      lxi h, cmd_deleteFolder_level
3787   183C 34            inr m
3788   183D               ; 49 continue;
3789   183D C3 A8 17      jmp l275
3790   1840             l284:
3791   1840               ; 53 if(panelB.cnt == maxFiles) continue;
3792   1840 2A 2C 29      lhld (panelB)+(262)
3793   1843 EB            xchg
3794   1844 2A 30 2A      lhld maxFiles
3795   1847 CD 01 21      call op_cmp16
3796   184A CA A8 17      jz l275
3797   184D CD 7B 17      call cmd_deleteFile
3798   1850 32 0A 2D      sta cmd_deleteFolder_e
3799   1853               ; 57 if(e) return e;convertToConfition
3800   1853 B7            ora a
3801   1854 CA 5B 18      jz l286
3802   1857               ; 57 return e;
3803   1857 3A 0A 2D      lda cmd_deleteFolder_e
3804   185A C9            ret
3805   185B             l286:
3806   185B               ; 60 if(level == 0) return 0;
3807   185B 3A 09 2D      lda cmd_deleteFolder_level
3808   185E B7            ora a
3809   185F C2 64 18      jnz l287
3810   1862               ; 60 return 0;
3811   1862 AF            xra a
3812   1863 C9            ret
3813   1864             l287:
3814   1864               ; 61 --level;
3815   1864 21 09 2D      lxi h, cmd_deleteFolder_level
3816   1867 35            dcr m
3817   1868               ; 62 dropPathInt(cmdLine, 0);
3818   1868 21 30 29      lxi h, cmdline
3819   186B 22 5E 2B      shld dropPathInt_1
3820   186E 21 00 00      lxi h, 0
3821   1871 CD 34 0A      call dropPathInt
3822   1874 C3 A8 17      jmp l275
3823   1877             l276:
3824   1877 C9            ret
3825   1878               ; --- cmd_delete -----------------------------------------------------------------
3826   1878             cmd_delete:
3827   1878 21 E9 2E      lxi h, string37
3828   187B 22 72 2A      shld confirm_1
3829   187E 21 14 31      lxi h, string38
3830   1881 CD F3 03      call confirm
3831   1884               ; convertToConfition
3832   1884 B7            ora a
3833   1885 CA E4 18      jz l288
3834   1888               ; 73 needRefresh2 = 0;
3835   1888 AF            xra a
3836   1889 32 10 2D      sta cmd_delete_needRefresh2
3837   188C               ; 76 if(getFirstSelected(cmdLine)) {
3838   188C 21 30 29      lxi h, cmdline
3839   188F CD C7 04      call getFirstSelected
3840   1892               ; convertToConfition
3841   1892 B7            ora a
3842   1893 CA E4 18      jz l289
3843   1896               ; 77 for(;;) {
3844   1896             l290:
3845   1896               ; 78 if(!absolutePath(cmdline)) { e = ERR_RECV_STRING; break; }
3846   1896 21 30 29      lxi h, cmdline
3847   1899 CD 8C 09      call absolutePath
3848   189C               ; convertToConfition
3849   189C B7            ora a
3850   189D C2 A8 18      jnz l293
3851   18A0               ; 78 e = ERR_RECV_STRING; break; }
3852   18A0 3E 0B         mvi a, 11
3853   18A2 32 0F 2D      sta cmd_delete_e
3854   18A5               ; 78 break; }
3855   18A5 C3 CF 18      jmp l291
3856   18A8             l293:
3857   18A8               ; 81 e = cmd_deleteFile();
3858   18A8 CD 7B 17      call cmd_deleteFile
3859   18AB 32 0F 2D      sta cmd_delete_e
3860   18AE               ; 84 if(e == ERR_DIR_NOT_EMPTY) {
3861   18AE FE 07         cpi 7
3862   18B0 C2 BE 18      jnz l294
3863   18B3               ; 85 needRefresh2 = 1; // Џа ў п Ї ­Ґ«м Ўг¤Ґв ЁбЇ®азҐ­ 
3864   18B3 3E 01         mvi a, 1
3865   18B5 32 10 2D      sta cmd_delete_needRefresh2
3866   18B8               ; 86 e = cmd_deleteFolder();
3867   18B8 CD A4 17      call cmd_deleteFolder
3868   18BB 32 0F 2D      sta cmd_delete_e
3869   18BE             l294:
3870   18BE               ; 88 if(e) break;convertToConfition
3871   18BE B7            ora a
3872   18BF C2 CF 18      jnz l291
3873   18C2 21 30 29      lxi h, cmdline
3874   18C5 CD 13 05      call getNextSelected
3875   18C8               ; convertToConfition
3876   18C8 B7            ora a
3877   18C9 CA CF 18      jz l291
3878   18CC             l292:
3879   18CC C3 96 18      jmp l290
3880   18CF             l291:
3881   18CF               ; 95 drawError("o{ibka udaleniq", e);
3882   18CF 21 60 30      lxi h, string39
3883   18D2 22 69 2A      shld drawError_1
3884   18D5 3A 0F 2D      lda cmd_delete_e
3885   18D8 CD 9B 02      call drawError
3886   18DB               ; 98 getFiles();
3887   18DB CD BB 07      call getFiles
3888   18DE               ; 99 dupFiles(needRefresh2);
3889   18DE 3A 10 2D      lda cmd_delete_needRefresh2
3890   18E1 CD 3B 0C      call dupFiles
3891   18E4             l289:
3892   18E4             l288:
3893   18E4               ; 103 drawScreen();
3894   18E4 C3 46 02      jmp drawScreen
3895   18E7             compareMask1:
3896   18E7 C5            push b
3897   18E8 32 15 2D      sta compareMask1_3
3898   18EB               ; 8 for(;;) {
3899   18EB             l297:
3900   18EB               ; 9 m = *mask;
3901   18EB 2A 13 2D      lhld compareMask1_2
3902   18EE 46            mov b, m
3903   18EF               ; 10 if(m == '*') return 1;
3904   18EF 3E 2A         mvi a, 42
3905   18F1 B8            cmp b
3906   18F2 C2 F9 18      jnz l300
3907   18F5               ; 10 return 1;
3908   18F5 3E 01         mvi a, 1
3909   18F7 C1            pop b
3910   18F8 C9            ret
3911   18F9             l300:
3912   18F9               ; 11 if(m != '?' && m != *fileName) return 0;  
3913   18F9 3E 3F         mvi a, 63
3914   18FB B8            cmp b
3915   18FC CA 0A 19      jz l301
3916   18FF 2A 11 2D      lhld compareMask1_1
3917   1902 7E            mov a, m
3918   1903 B8            cmp b
3919   1904 CA 0A 19      jz l301
3920   1907               ; 11 return 0;  
3921   1907 AF            xra a
3922   1908 C1            pop b
3923   1909 C9            ret
3924   190A             l301:
3925   190A               ; 12 --i;
3926   190A 21 15 2D      lxi h, compareMask1_3
3927   190D 35            dcr m
3928   190E               ; 13 if(i==0) return 1;
3929   190E 3A 15 2D      lda compareMask1_3
3930   1911 B7            ora a
3931   1912 C2 19 19      jnz l302
3932   1915               ; 13 return 1;
3933   1915 3E 01         mvi a, 1
3934   1917 C1            pop b
3935   1918 C9            ret
3936   1919             l302:
3937   1919               ; 14 ++mask, ++fileName;
3938   1919 2A 13 2D      lhld compareMask1_2
3939   191C 23            inx h
3940   191D 22 13 2D      shld compareMask1_2
3941   1920 2A 11 2D      lhld compareMask1_1
3942   1923 23            inx h
3943   1924 22 11 2D      shld compareMask1_1
3944   1927             l299:
3945   1927 C3 EB 18      jmp l297
3946   192A             l298:
3947   192A C1            pop b
3948   192B C9            ret
3949   192C               ; --- compareMask -----------------------------------------------------------------
3950   192C             compareMask:
3951   192C 22 18 2D      shld compareMask_2
3952   192F               ; 21 if(!compareMask1(fileName, mask, 8)) return 0;
3953   192F 2A 16 2D      lhld compareMask_1
3954   1932 22 11 2D      shld compareMask1_1
3955   1935 2A 18 2D      lhld compareMask_2
3956   1938 22 13 2D      shld compareMask1_2
3957   193B 3E 08         mvi a, 8
3958   193D CD E7 18      call compareMask1
3959   1940               ; convertToConfition
3960   1940 B7            ora a
3961   1941 C2 46 19      jnz l303
3962   1944               ; 21 return 0;
3963   1944 AF            xra a
3964   1945 C9            ret
3965   1946             l303:
3966   1946               ; 22 return compareMask1(fileName+8, mask+8, 3);Сложение
3967   1946 2A 16 2D      lhld compareMask_1
3968   1949 11 08 00      lxi d, 8
3969   194C 19            dad d
3970   194D 22 11 2D      shld compareMask1_1
3971   1950               ; Сложение
3972   1950 2A 18 2D      lhld compareMask_2
3973   1953 11 08 00      lxi d, 8
3974   1956 19            dad d
3975   1957 22 13 2D      shld compareMask1_2
3976   195A 3E 03         mvi a, 3
3977   195C C3 E7 18      jmp compareMask1
3978   195F C9            ret
3979   1960               ; --- cmd_sel -----------------------------------------------------------------
3980   1960             cmd_sel:
3981   1960 32 1A 2D      sta cmd_sel_1
3982   1963               ; 33 strcpy(cmdLine, "*.*");
3983   1963 21 30 29      lxi h, cmdline
3984   1966 22 B2 2D      shld strcpy_1
3985   1969 21 F3 2E      lxi h, string40
3986   196C CD E3 22      call strcpy
3987   196F               ; 34 if(inputBox(" pometitx fajly ")) {
3988   196F 21 AE 2E      lxi h, string41
3989   1972 CD 7B 03      call inputBox
3990   1975               ; convertToConfition
3991   1975 B7            ora a
3992   1976 CA F8 19      jz l304
3993   1979               ; 35 packName(buf, cmdLine);
3994   1979 21 1F 2D      lxi h, cmd_sel_buf
3995   197C 22 2E 2B      shld packName_1
3996   197F 21 30 29      lxi h, cmdline
3997   1982 CD 5A 07      call packName
3998   1985               ; 37 for(i=panelA.cnt, f=panelA.files1; i; --i, ++f) {
3999   1985 2A 22 28      lhld (panelA)+(262)
4000   1988 22 1D 2D      shld cmd_sel_i
4001   198B 2A 1C 27      lhld panelA
4002   198E 22 1B 2D      shld cmd_sel_f
4003   1991             l305:
4004   1991               ; convertToConfition
4005   1991 2A 1D 2D      lhld cmd_sel_i
4006   1994 7D            mov a, l
4007   1995 B4            ora h
4008   1996 CA F8 19      jz l306
4009   1999               ; 38 if(f->fattrib & 0x10) {Сложение
4010   1999 2A 1B 2D      lhld cmd_sel_f
4011   199C 11 0B 00      lxi d, 11
4012   199F 19            dad d
4013   19A0 7E            mov a, m
4014   19A1 E6 10         ani 16
4015   19A3               ; convertToConfition
4016   19A3 CA B4 19      jz l308
4017   19A6               ; 39 f->fattrib &= 0x7F;Сложение
4018   19A6 2A 1B 2D      lhld cmd_sel_f
4019   19A9 11 0B 00      lxi d, 11
4020   19AC 19            dad d
4021   19AD 7E            mov a, m
4022   19AE E6 7F         ani 127
4023   19B0 77            mov m, a
4024   19B1 C3 E4 19      jmp l309
4025   19B4             l308:
4026   19B4               ; 41 if(compareMask(f->fname, buf)) {
4027   19B4 2A 1B 2D      lhld cmd_sel_f
4028   19B7 22 16 2D      shld compareMask_1
4029   19BA 21 1F 2D      lxi h, cmd_sel_buf
4030   19BD CD 2C 19      call compareMask
4031   19C0               ; convertToConfition
4032   19C0 B7            ora a
4033   19C1 CA E4 19      jz l310
4034   19C4               ; 42 if(add) {convertToConfition
4035   19C4 3A 1A 2D      lda cmd_sel_1
4036   19C7 B7            ora a
4037   19C8 CA D9 19      jz l311
4038   19CB               ; 43 f->fattrib |= 0x80;Сложение
4039   19CB 2A 1B 2D      lhld cmd_sel_f
4040   19CE 11 0B 00      lxi d, 11
4041   19D1 19            dad d
4042   19D2 7E            mov a, m
4043   19D3 F6 80         ori 128
4044   19D5 77            mov m, a
4045   19D6 C3 E4 19      jmp l312
4046   19D9             l311:
4047   19D9               ; 45 f->fattrib &= 0x7F;Сложение
4048   19D9 2A 1B 2D      lhld cmd_sel_f
4049   19DC 11 0B 00      lxi d, 11
4050   19DF 19            dad d
4051   19E0 7E            mov a, m
4052   19E1 E6 7F         ani 127
4053   19E3 77            mov m, a
4054   19E4             l312:
4055   19E4             l310:
4056   19E4             l309:
4057   19E4             l307:
4058   19E4 2A 1D 2D      lhld cmd_sel_i
4059   19E7 2B            dcx h
4060   19E8 22 1D 2D      shld cmd_sel_i
4061   19EB 2A 1B 2D      lhld cmd_sel_f
4062   19EE 11 14 00      lxi d, 20
4063   19F1 19            dad d
4064   19F2 22 1B 2D      shld cmd_sel_f
4065   19F5 C3 91 19      jmp l305
4066   19F8             l306:
4067   19F8             l304:
4068   19F8               ; 52 drawScreen();
4069   19F8 C3 46 02      jmp drawScreen
4070   19FB             drawInit:
4071   19FB CD 2A 25      call apogeyScreen2a
4072   19FE               ; 16 maxFiles = getMemTop() - START_FILE_BUFFER;
4073   19FE CD 30 F8      call 63536
4074   1A01               ; Сложение
4075   1A01 11 00 CC      lxi d, 52224
4076   1A04 19            dad d
4077   1A05 22 30 2A      shld maxFiles
4078   1A08               ; 17 maxFiles /= sizeof(FileInfo)*2;
4079   1A08 11 28 00      lxi d, 40
4080   1A0B CD 3C 22      call op_div16
4081   1A0E 22 30 2A      shld maxFiles
4082   1A11               ; 18 activePanel = 0;
4083   1A11 AF            xra a
4084   1A12 32 2A 2D      sta activePanel
4085   1A15               ; 19 fileCursorAddr = 0;  
4086   1A15 21 00 00      lxi h, 0
4087   1A18 22 2B 2D      shld fileCursorAddr
4088   1A1B C9            ret
4089   1A1C               ; --- showTextCursor -----------------------------------------------------------------
4090   1A1C             showTextCursor:
4091   1A1C 32 2F 2D      sta showTextCursor_2
4092   1A1F               ; 1 directCursor(x+1 ? 8+x : 255, 3+y);
4093   1A1F 3A 2E 2D      lda showTextCursor_1
4094   1A22 3C            inr a
4095   1A23 CA 2E 1A      jz l313
4096   1A26 3A 2E 2D      lda showTextCursor_1
4097   1A29 C6 08         adi 8
4098   1A2B C3 30 1A      jmp l314
4099   1A2E             l313:
4100   1A2E 3E FF         mvi a, 255
4101   1A30             l314:
4102   1A30 32 FF 2D      sta directCursor_1
4103   1A33 3A 2F 2D      lda showTextCursor_2
4104   1A36 C6 03         adi 3
4105   1A38 C3 C0 25      jmp directCursor
4106   1A3B             hideTextCursor:
4107   1A3B 3E FF         mvi a, 255
4108   1A3D 32 2E 2D      sta showTextCursor_1
4109   1A40 C3 1C 1A      jmp showTextCursor
4110   1A43             drawSwapPanels:
4111   1A43 21 2A 2D      lxi h, activePanel
4112   1A46 3E 20         mvi a, 32
4113   1A48 96            sub m
4114   1A49 32 2A 2D      sta activePanel
4115   1A4C C9            ret
4116   1A4D               ; --- hideFileCursor -----------------------------------------------------------------
4117   1A4D             hideFileCursor:
4118   1A4D 2A 2B 2D      lhld fileCursorAddr
4119   1A50 7D            mov a, l
4120   1A51 B4            ora h
4121   1A52 C2 56 1A      jnz l315
4122   1A55               ; 44 return;
4123   1A55 C9            ret
4124   1A56             l315:
4125   1A56               ; 45 fileCursorAddr[0] = ' ';Сложение с константой 0
4126   1A56 36 20         mvi m, 32
4127   1A58               ; 46 fileCursorAddr[13] = ' ';Сложение
4128   1A58 11 0D 00      lxi d, 13
4129   1A5B 19            dad d
4130   1A5C 36 20         mvi m, 32
4131   1A5E               ; 47 fileCursorAddr = 0;
4132   1A5E 21 00 00      lxi h, 0
4133   1A61 22 2B 2D      shld fileCursorAddr
4134   1A64 C9            ret
4135   1A65               ; --- showFileCursor -----------------------------------------------------------------
4136   1A65             showFileCursor:
4137   1A65 CD 4D 1A      call hideFileCursor
4138   1A68               ; 57 fileCursorAddr = charAddr(panelA.cursorX*15 + 2 + activePanel, 2 + panelA.cursorY);
4139   1A68 16 0F         mvi d, 15
4140   1A6A 3A 1E 28      lda (panelA)+(258)
4141   1A6D CD ED 20      call op_mul
4142   1A70               ; Сложение с константой 2
4143   1A70 23            inx h
4144   1A71 23            inx h
4145   1A72               ; Сложение
4146   1A72 EB            xchg
4147   1A73 2A 2A 2D      lhld activePanel
4148   1A76 26 00         mvi h, 0
4149   1A78 19            dad d
4150   1A79 7D            mov a, l
4151   1A7A 32 01 2E      sta charAddr_1
4152   1A7D 3A 1F 28      lda (panelA)+(259)
4153   1A80 C6 02         adi 2
4154   1A82 CD D5 25      call charAddr
4155   1A85 22 2B 2D      shld fileCursorAddr
4156   1A88               ; 58 fileCursorAddr[0]  = '[';Сложение с константой 0
4157   1A88 36 5B         mvi m, 91
4158   1A8A               ; 59 fileCursorAddr[13] = ']';Сложение
4159   1A8A 11 0D 00      lxi d, 13
4160   1A8D 19            dad d
4161   1A8E 36 5D         mvi m, 93
4162   1A90 C9            ret
4163   1A91               ; --- vLine -----------------------------------------------------------------
4164   1A91             vLine:
4165   1A91 32 33 2D      sta vLine_3
4166   1A94               ; 65 asm {
4167   1A94 C5              push b
4168   1A95 57              mov d, a
4169   1A96 3A 09 2E        lda apogeyVideoBpl
4170   1A99 4F              mov c, a
4171   1A9A 06 00           mvi b, 0
4172   1A9C 3A 32 2D        lda vLine_2
4173   1A9F 5F              mov e, a
4174   1AA0 2A 30 2D        lhld vLine_1
4175   1AA3             vLine_l0:
4176   1AA3 72              mov m, d
4177   1AA4 09              dad b
4178   1AA5 1D              dcr e 
4179   1AA6 C2 A3 1A        jnz vLine_l0
4180   1AA9 C1              pop b
4181   1AAA               
4182   1AAA C9            ret
4183   1AAB               ; --- drawRect -----------------------------------------------------------------
4184   1AAB             drawRect:
4185   1AAB 32 37 2D      sta drawRect_3
4186   1AAE               ; 87 a[0] = 0x04; memset(a+1, 0x1C, w); a[w] = 0x10; a += VIDEO_BPL;Сложение с константой 0
4187   1AAE 2A 34 2D      lhld drawRect_1
4188   1AB1 36 04         mvi m, 4
4189   1AB3               ; 87 memset(a+1, 0x1C, w); a[w] = 0x10; a += VIDEO_BPL;Сложение с константой 1
4190   1AB3 23            inx h
4191   1AB4 22 A1 2D      shld memset_1
4192   1AB7 3E 1C         mvi a, 28
4193   1AB9 32 A3 2D      sta memset_2
4194   1ABC 2A 36 2D      lhld drawRect_2
4195   1ABF 26 00         mvi h, 0
4196   1AC1 CD 77 22      call memset
4197   1AC4               ; 87 a[w] = 0x10; a += VIDEO_BPL;Сложение
4198   1AC4 2A 34 2D      lhld drawRect_1
4199   1AC7 EB            xchg
4200   1AC8 2A 36 2D      lhld drawRect_2
4201   1ACB 26 00         mvi h, 0
4202   1ACD 19            dad d
4203   1ACE 36 10         mvi m, 16
4204   1AD0               ; 87 a += VIDEO_BPL;Сложение
4205   1AD0 11 4B 00      lxi d, 75
4206   1AD3 2A 34 2D      lhld drawRect_1
4207   1AD6 19            dad d
4208   1AD7 22 34 2D      shld drawRect_1
4209   1ADA               ; 88 for(i=h; i; --i) {
4210   1ADA 3A 37 2D      lda drawRect_3
4211   1ADD 32 38 2D      sta drawRect_i
4212   1AE0             l316:
4213   1AE0               ; convertToConfition
4214   1AE0 3A 38 2D      lda drawRect_i
4215   1AE3 B7            ora a
4216   1AE4 CA 06 1B      jz l317
4217   1AE7               ; 89 a[0] = 0x06; a[w] = 0x11; a += VIDEO_BPL;Сложение с константой 0
4218   1AE7 2A 34 2D      lhld drawRect_1
4219   1AEA 36 06         mvi m, 6
4220   1AEC               ; 89 a[w] = 0x11; a += VIDEO_BPL;Сложение
4221   1AEC EB            xchg
4222   1AED 2A 36 2D      lhld drawRect_2
4223   1AF0 26 00         mvi h, 0
4224   1AF2 19            dad d
4225   1AF3 36 11         mvi m, 17
4226   1AF5               ; 89 a += VIDEO_BPL;Сложение
4227   1AF5 11 4B 00      lxi d, 75
4228   1AF8 2A 34 2D      lhld drawRect_1
4229   1AFB 19            dad d
4230   1AFC 22 34 2D      shld drawRect_1
4231   1AFF             l318:
4232   1AFF 21 38 2D      lxi h, drawRect_i
4233   1B02 35            dcr m
4234   1B03 C3 E0 1A      jmp l316
4235   1B06             l317:
4236   1B06               ; 91 a[0] = 0x02; memset(a+1, 0x1C, w); a[w] = 0x01;Сложение с константой 0
4237   1B06 2A 34 2D      lhld drawRect_1
4238   1B09 36 02         mvi m, 2
4239   1B0B               ; 91 memset(a+1, 0x1C, w); a[w] = 0x01;Сложение с константой 1
4240   1B0B 23            inx h
4241   1B0C 22 A1 2D      shld memset_1
4242   1B0F 3E 1C         mvi a, 28
4243   1B11 32 A3 2D      sta memset_2
4244   1B14 2A 36 2D      lhld drawRect_2
4245   1B17 26 00         mvi h, 0
4246   1B19 CD 77 22      call memset
4247   1B1C               ; 91 a[w] = 0x01;Сложение
4248   1B1C 2A 34 2D      lhld drawRect_1
4249   1B1F EB            xchg
4250   1B20 2A 36 2D      lhld drawRect_2
4251   1B23 26 00         mvi h, 0
4252   1B25 19            dad d
4253   1B26 36 01         mvi m, 1
4254   1B28 C9            ret
4255   1B29               ; --- fillRect -----------------------------------------------------------------
4256   1B29             fillRect:
4257   1B29 32 3D 2D      sta fillRect_4
4258   1B2C               ; 97 asm {
4259   1B2C C5              push b
4260   1B2D 3A 09 2E        lda apogeyVideoBpl
4261   1B30 4F              mov c, a
4262   1B31 06 00           mvi b, 0
4263   1B33 2A 39 2D        lhld fillRect_1
4264   1B36 3A 3C 2D        lda fillRect_3
4265   1B39 57              mov d, a
4266   1B3A 3A 3D 2D        lda fillRect_4
4267   1B3D 5F              mov e, a
4268   1B3E             fillRect_l1:  
4269   1B3E 3A 3B 2D        lda fillRect_2
4270   1B41 E5              push h
4271   1B42             fillRect_l0:
4272   1B42 73              mov m, e
4273   1B43 23              inx h
4274   1B44 3D              dcr a
4275   1B45 C2 42 1B        jnz fillRect_l0
4276   1B48 E1              pop h
4277   1B49 09              dad b    
4278   1B4A 15              dcr d
4279   1B4B C2 3E 1B        jnz fillRect_l1
4280   1B4E C1              pop b
4281   1B4F               
4282   1B4F C9            ret
4283   1B50               ; --- drawFilesCountInt -----------------------------------------------------------------
4284   1B50             drawFilesCountInt:
4285   1B50 22 40 2D      shld drawFilesCountInt_2
4286   1B53               ; 128 a = charAddr(2+activePanel, 4+ROWS_CNT);
4287   1B53 3A 2A 2D      lda activePanel
4288   1B56 C6 02         adi 2
4289   1B58 32 01 2E      sta charAddr_1
4290   1B5B 3E 1A         mvi a, 26
4291   1B5D CD D5 25      call charAddr
4292   1B60 22 43 2D      shld drawFilesCountInt_a
4293   1B63               ; 129 i2s32((char*)a, total, 10, ' ');
4294   1B63 22 81 2D      shld i2s32_1
4295   1B66 2A 3E 2D      lhld drawFilesCountInt_1
4296   1B69 22 83 2D      shld i2s32_2
4297   1B6C 21 0A 00      lxi h, 10
4298   1B6F 22 85 2D      shld i2s32_3
4299   1B72 3E 20         mvi a, 32
4300   1B74 CD 07 21      call i2s32
4301   1B77               ; 130 print2(a+11, "bajt w    ");Сложение
4302   1B77 2A 43 2D      lhld drawFilesCountInt_a
4303   1B7A 11 0B 00      lxi d, 11
4304   1B7D 19            dad d
4305   1B7E 22 03 2E      shld print2_1
4306   1B81 21 91 2F      lxi h, string42
4307   1B84 CD EC 25      call print2
4308   1B87               ; 131 if(filesCnt < 1000) i2s((char*)a+18, filesCnt, 3, ' ');Сложение
4309   1B87 2A 40 2D      lhld drawFilesCountInt_2
4310   1B8A 11 17 FC      lxi d, 64535
4311   1B8D 19            dad d
4312   1B8E DA AC 1B      jc l319
4313   1B91               ; 131 i2s((char*)a+18, filesCnt, 3, ' ');Сложение
4314   1B91 2A 43 2D      lhld drawFilesCountInt_a
4315   1B94 11 12 00      lxi d, 18
4316   1B97 19            dad d
4317   1B98 22 8C 2D      shld i2s_1
4318   1B9B 2A 40 2D      lhld drawFilesCountInt_2
4319   1B9E 22 8E 2D      shld i2s_2
4320   1BA1 21 03 00      lxi h, 3
4321   1BA4 22 90 2D      shld i2s_3
4322   1BA7 3E 20         mvi a, 32
4323   1BA9 CD 7D 21      call i2s
4324   1BAC             l319:
4325   1BAC               ; 132 v = filesCnt % 100;
4326   1BAC 11 64 00      lxi d, 100
4327   1BAF 2A 40 2D      lhld drawFilesCountInt_2
4328   1BB2 CD DC 22      call op_mod16
4329   1BB5 7D            mov a, l
4330   1BB6 32 42 2D      sta drawFilesCountInt_v
4331   1BB9               ; 133 print2(a+22, (!(v >= 10 && v < 20) && v % 10 == 1) ? "fajle " : "fajlah ");Сложение
4332   1BB9 2A 43 2D      lhld drawFilesCountInt_a
4333   1BBC 11 16 00      lxi d, 22
4334   1BBF 19            dad d
4335   1BC0 22 03 2E      shld print2_1
4336   1BC3 FE 0A         cpi 10
4337   1BC5 DA D2 1B      jc l320
4338   1BC8 FE 14         cpi 20
4339   1BCA D2 D2 1B      jnc l320
4340   1BCD 3E 01         mvi a, 1
4341   1BCF C3 D3 1B      jmp l321
4342   1BD2             l320:
4343   1BD2 AF            xra a
4344   1BD3             l321:
4345   1BD3               ; convertToConfition
4346   1BD3 B7            ora a
4347   1BD4 C2 E9 1B      jnz l322
4348   1BD7 16 0A         mvi d, 10
4349   1BD9 3A 42 2D      lda drawFilesCountInt_v
4350   1BDC CD FF 25      call op_mod
4351   1BDF FE 01         cpi 1
4352   1BE1 C2 E9 1B      jnz l322
4353   1BE4 3E 01         mvi a, 1
4354   1BE6 C3 EA 1B      jmp l323
4355   1BE9             l322:
4356   1BE9 AF            xra a
4357   1BEA             l323:
4358   1BEA B7            ora a
4359   1BEB CA F4 1B      jz l324
4360   1BEE 21 D1 2F      lxi h, string43
4361   1BF1 C3 F7 1B      jmp l325
4362   1BF4             l324:
4363   1BF4 21 C9 2F      lxi h, string44
4364   1BF7             l325:
4365   1BF7 C3 EC 25      jmp print2
4366   1BFA             drawPanel:
4367   1BFA 22 45 2D      shld drawPanel_1
4368   1BFD               ; 139 drawRect(a, 30, ROWS_CNT + 4);
4369   1BFD 22 34 2D      shld drawRect_1
4370   1C00 3E 1E         mvi a, 30
4371   1C02 32 36 2D      sta drawRect_2
4372   1C05 3E 1A         mvi a, 26
4373   1C07 CD AB 1A      call drawRect
4374   1C0A               ; 140 memset(a + (VIDEO_BPL * (2 + ROWS_CNT) + 1), 0x1C, 29); // hLineСложение
4375   1C0A 2A 45 2D      lhld drawPanel_1
4376   1C0D 11 09 07      lxi d, 1801
4377   1C10 19            dad d
4378   1C11 22 A1 2D      shld memset_1
4379   1C14 3E 1C         mvi a, 28
4380   1C16 32 A3 2D      sta memset_2
4381   1C19 21 1D 00      lxi h, 29
4382   1C1C CD 77 22      call memset
4383   1C1F               ; 141 vLine(a + (VIDEO_BPL + 15), ROWS_CNT+1, 0x1B);Сложение
4384   1C1F 2A 45 2D      lhld drawPanel_1
4385   1C22 11 5A 00      lxi d, 90
4386   1C25 19            dad d
4387   1C26 22 30 2D      shld vLine_1
4388   1C29 3E 17         mvi a, 23
4389   1C2B 32 32 2D      sta vLine_2
4390   1C2E 3E 1B         mvi a, 27
4391   1C30 CD 91 1A      call vLine
4392   1C33               ; 142 print2(a + (VIDEO_BPL + 6 ), "imq");Сложение
4393   1C33 2A 45 2D      lhld drawPanel_1
4394   1C36 11 51 00      lxi d, 81
4395   1C39 19            dad d
4396   1C3A 22 03 2E      shld print2_1
4397   1C3D 21 D8 2F      lxi h, string45
4398   1C40 CD EC 25      call print2
4399   1C43               ; 143 print2(a + (VIDEO_BPL + 21), "imq");  Сложение
4400   1C43 2A 45 2D      lhld drawPanel_1
4401   1C46 11 60 00      lxi d, 96
4402   1C49 19            dad d
4403   1C4A 22 03 2E      shld print2_1
4404   1C4D 21 D8 2F      lxi h, string45
4405   1C50 C3 EC 25      jmp print2
4406   1C53             drawScreenInt:
4407   1C53 2A 07 2E      lhld apogeyVideoMem
4408   1C56 22 39 2D      shld fillRect_1
4409   1C59 3E 40         mvi a, 64
4410   1C5B 32 3B 2D      sta fillRect_2
4411   1C5E 3E 1E         mvi a, 30
4412   1C60 32 3C 2D      sta fillRect_3
4413   1C63 3E 20         mvi a, 32
4414   1C65 CD 29 1B      call fillRect
4415   1C68               ; 154 print(1, ROWS_CNT+7, "F1 FREE F2 NEW  F3 VIEW  F4 EDIT F5 COPY F6 REN  F7 DIR  F8 DEL"); 
4416   1C68 3E 01         mvi a, 1
4417   1C6A 32 0A 2E      sta print_1
4418   1C6D 3E 1D         mvi a, 29
4419   1C6F 32 0B 2E      sta print_2
4420   1C72 21 14 2F      lxi h, string46
4421   1C75 CD 1C 26      call print
4422   1C78               ; 157 drawPanel(apogeyVideoMem + 1);Сложение с константой 1
4423   1C78 2A 07 2E      lhld apogeyVideoMem
4424   1C7B 23            inx h
4425   1C7C CD FA 1B      call drawPanel
4426   1C7F               ; 158 drawPanel(apogeyVideoMem + 33);Сложение
4427   1C7F 2A 07 2E      lhld apogeyVideoMem
4428   1C82 11 21 00      lxi d, 33
4429   1C85 19            dad d
4430   1C86 CD FA 1B      call drawPanel
4431   1C89               ; 161 drawPanelTitle(1);
4432   1C89 3E 01         mvi a, 1
4433   1C8B CD 9F 1C      call drawPanelTitle
4434   1C8E               ; 162 swapPanels();
4435   1C8E CD 0F 00      call swapPanels
4436   1C91               ; 163 drawPanelTitle(0);
4437   1C91 AF            xra a
4438   1C92 CD 9F 1C      call drawPanelTitle
4439   1C95               ; 164 swapPanels();
4440   1C95 CD 0F 00      call swapPanels
4441   1C98               ; 167 fileCursorAddr = 0;
4442   1C98 21 00 00      lxi h, 0
4443   1C9B 22 2B 2D      shld fileCursorAddr
4444   1C9E C9            ret
4445   1C9F               ; --- drawPanelTitle -----------------------------------------------------------------
4446   1C9F             drawPanelTitle:
4447   1C9F 32 47 2D      sta drawPanelTitle_1
4448   1CA2               ; 179 memset((char*)charAddr(activePanel + 2, 0), 0x1C, 29);
4449   1CA2 3A 2A 2D      lda activePanel
4450   1CA5 C6 02         adi 2
4451   1CA7 32 01 2E      sta charAddr_1
4452   1CAA AF            xra a
4453   1CAB CD D5 25      call charAddr
4454   1CAE 22 A1 2D      shld memset_1
4455   1CB1 3E 1C         mvi a, 28
4456   1CB3 32 A3 2D      sta memset_2
4457   1CB6 21 1D 00      lxi h, 29
4458   1CB9 CD 77 22      call memset
4459   1CBC               ; 182 p = panelA.path1;
4460   1CBC 21 1E 27      lxi h, (panelA)+(2)
4461   1CBF 22 48 2D      shld drawPanelTitle_p
4462   1CC2               ; 183 if(p[0]==0) p = "/";Сложение с константой 0
4463   1CC2 7E            mov a, m
4464   1CC3 B7            ora a
4465   1CC4 C2 CD 1C      jnz l326
4466   1CC7               ; 183 p = "/";
4467   1CC7 21 FF 2E      lxi h, string21
4468   1CCA 22 48 2D      shld drawPanelTitle_p
4469   1CCD             l326:
4470   1CCD               ; 184 l = strlen(p);
4471   1CCD CD 08 22      call strlen
4472   1CD0 22 4A 2D      shld drawPanelTitle_l
4473   1CD3               ; 185 if(l>=27) p=p+(l-27), l=27;Сложение
4474   1CD3 11 E5 FF      lxi d, 65509
4475   1CD6 19            dad d
4476   1CD7 D2 EF 1C      jnc l327
4477   1CDA               ; 185 p=p+(l-27), l=27;Сложение
4478   1CDA 2A 4A 2D      lhld drawPanelTitle_l
4479   1CDD 11 E5 FF      lxi d, 65509
4480   1CE0 19            dad d
4481   1CE1               ; Сложение
4482   1CE1 EB            xchg
4483   1CE2 2A 48 2D      lhld drawPanelTitle_p
4484   1CE5 19            dad d
4485   1CE6 22 48 2D      shld drawPanelTitle_p
4486   1CE9 21 1B 00      lxi h, 27
4487   1CEC 22 4A 2D      shld drawPanelTitle_l
4488   1CEF             l327:
4489   1CEF               ; 186 x = 2 + (30 - l) / 2 + activePanel;16 битная арифметическая операция с константой
4490   1CEF 2A 4A 2D      lhld drawPanelTitle_l
4491   1CF2 3E 1E         mvi a, 30
4492   1CF4 95            sub l
4493   1CF5 6F            mov l, a
4494   1CF6 3E 00         mvi a, 0
4495   1CF8 9C            sbb h
4496   1CF9 67            mov h, a
4497   1CFA 11 02 00      lxi d, 2
4498   1CFD CD 3C 22      call op_div16
4499   1D00               ; Сложение с константой 2
4500   1D00 23            inx h
4501   1D01 23            inx h
4502   1D02               ; Сложение
4503   1D02 EB            xchg
4504   1D03 2A 2A 2D      lhld activePanel
4505   1D06 26 00         mvi h, 0
4506   1D08 19            dad d
4507   1D09 7D            mov a, l
4508   1D0A 32 4C 2D      sta drawPanelTitle_x
4509   1D0D               ; 187 printn(x, 0, l, p);
4510   1D0D 32 0E 2E      sta printn_1
4511   1D10 AF            xra a
4512   1D11 32 0F 2E      sta printn_2
4513   1D14 3A 4A 2D      lda drawPanelTitle_l
4514   1D17 32 10 2E      sta printn_3
4515   1D1A 2A 48 2D      lhld drawPanelTitle_p
4516   1D1D CD 34 26      call printn
4517   1D20               ; 188 if(!active) return;convertToConfition
4518   1D20 3A 47 2D      lda drawPanelTitle_1
4519   1D23 B7            ora a
4520   1D24 C2 28 1D      jnz l328
4521   1D27               ; 188 return;
4522   1D27 C9            ret
4523   1D28             l328:
4524   1D28               ; 189 print(x-1, 0, "[");
4525   1D28 3A 4C 2D      lda drawPanelTitle_x
4526   1D2B 3D            dcr a
4527   1D2C 32 0A 2E      sta print_1
4528   1D2F AF            xra a
4529   1D30 32 0B 2E      sta print_2
4530   1D33 21 54 2F      lxi h, string47
4531   1D36 CD 1C 26      call print
4532   1D39               ; 190 print(x+l, 0, "]");Сложение
4533   1D39 2A 4C 2D      lhld drawPanelTitle_x
4534   1D3C 26 00         mvi h, 0
4535   1D3E EB            xchg
4536   1D3F 2A 4A 2D      lhld drawPanelTitle_l
4537   1D42 19            dad d
4538   1D43 7D            mov a, l
4539   1D44 32 0A 2E      sta print_1
4540   1D47 AF            xra a
4541   1D48 32 0B 2E      sta print_2
4542   1D4B 21 8F 2F      lxi h, string48
4543   1D4E C3 1C 26      jmp print
4544   1D51             drawFile2:
4545   1D51 22 4F 2D      shld drawFile2_2
4546   1D54               ; 196 print2n(a, 8, f->fname); 
4547   1D54 2A 4D 2D      lhld drawFile2_1
4548   1D57 22 13 2E      shld print2n_1
4549   1D5A 3E 08         mvi a, 8
4550   1D5C 32 15 2E      sta print2n_2
4551   1D5F 2A 4F 2D      lhld drawFile2_2
4552   1D62 CD 52 26      call print2n
4553   1D65               ; 197 a[8] = (f->fattrib&0x80) ? '*' : ((f->fattrib & 0x06) ? 0x7F : ' ');Сложение
4554   1D65 2A 4D 2D      lhld drawFile2_1
4555   1D68 11 08 00      lxi d, 8
4556   1D6B 19            dad d
4557   1D6C               ; Сложение
4558   1D6C E5            push h
4559   1D6D 2A 4F 2D      lhld drawFile2_2
4560   1D70 11 0B 00      lxi d, 11
4561   1D73 19            dad d
4562   1D74 7E            mov a, m
4563   1D75 E6 80         ani 128
4564   1D77 CA 7F 1D      jz l329
4565   1D7A 3E 2A         mvi a, 42
4566   1D7C C3 93 1D      jmp l330
4567   1D7F             l329:
4568   1D7F               ; Сложение
4569   1D7F 2A 4F 2D      lhld drawFile2_2
4570   1D82 11 0B 00      lxi d, 11
4571   1D85 19            dad d
4572   1D86 7E            mov a, m
4573   1D87 E6 06         ani 6
4574   1D89 CA 91 1D      jz l331
4575   1D8C 3E 7F         mvi a, 127
4576   1D8E C3 93 1D      jmp l332
4577   1D91             l331:
4578   1D91 3E 20         mvi a, 32
4579   1D93             l332:
4580   1D93             l330:
4581   1D93 E1            pop h
4582   1D94 77            mov m, a
4583   1D95               ; 198 print2n(a + 9, 3, f->fname + 8); Сложение
4584   1D95 2A 4D 2D      lhld drawFile2_1
4585   1D98 11 09 00      lxi d, 9
4586   1D9B 19            dad d
4587   1D9C 22 13 2E      shld print2n_1
4588   1D9F 3E 03         mvi a, 3
4589   1DA1 32 15 2E      sta print2n_2
4590   1DA4               ; Сложение
4591   1DA4 2A 4F 2D      lhld drawFile2_2
4592   1DA7 11 08 00      lxi d, 8
4593   1DAA 19            dad d
4594   1DAB C3 52 26      jmp print2n
4595   1DAE             drawColumn:
4596   1DAE C5            push b
4597   1DAF 32 51 2D      sta drawColumn_1
4598   1DB2               ; 206 panelA.offset+i*ROWS_CNT;<n>
4599   1DB2 16 16         mvi d, 22
4600   1DB4 CD ED 20      call op_mul
4601   1DB7               ; Сложение
4602   1DB7 EB            xchg
4603   1DB8 2A 20 28      lhld (panelA)+(260)
4604   1DBB 19            dad d
4605   1DBC 44            mov b, h
4606   1DBD 4D            mov c, l
4607   1DBE               ; 207 panelA.files1 + n;  <f>
4608   1DBE 54            mov d, h
4609   1DBF 5D            mov e, l
4610   1DC0 29            dad h
4611   1DC1 29            dad h
4612   1DC2 19            dad d
4613   1DC3 29            dad h
4614   1DC4 29            dad h
4615   1DC5               ; Сложение
4616   1DC5 EB            xchg
4617   1DC6 2A 1C 27      lhld panelA
4618   1DC9 19            dad d
4619   1DCA 22 55 2D      shld drawColumn_f
4620   1DCD               ; 209 a = charAddr(i*15+3+activePanel,2);
4621   1DCD 16 0F         mvi d, 15
4622   1DCF 3A 51 2D      lda drawColumn_1
4623   1DD2 CD ED 20      call op_mul
4624   1DD5               ; Сложение с константой 3
4625   1DD5 23            inx h
4626   1DD6 23            inx h
4627   1DD7 23            inx h
4628   1DD8               ; Сложение
4629   1DD8 EB            xchg
4630   1DD9 2A 2A 2D      lhld activePanel
4631   1DDC 26 00         mvi h, 0
4632   1DDE 19            dad d
4633   1DDF 7D            mov a, l
4634   1DE0 32 01 2E      sta charAddr_1
4635   1DE3 3E 02         mvi a, 2
4636   1DE5 CD D5 25      call charAddr
4637   1DE8 22 52 2D      shld drawColumn_a
4638   1DEB               ; 210 for(y=ROWS_CNT; y; --y, a+=VIDEO_BPL) {
4639   1DEB 3E 16         mvi a, 22
4640   1DED 32 54 2D      sta drawColumn_y
4641   1DF0             l333:
4642   1DF0               ; convertToConfition
4643   1DF0 3A 54 2D      lda drawColumn_y
4644   1DF3 B7            ora a
4645   1DF4 CA 40 1E      jz l334
4646   1DF7               ; 211 if(n>=panelA.cnt) {
4647   1DF7 2A 22 28      lhld (panelA)+(262)
4648   1DFA 50            mov d, b
4649   1DFB 59            mov e, c
4650   1DFC CD 01 21      call op_cmp16
4651   1DFF CA 05 1E      jz l337
4652   1E02 D2 18 1E      jnc l336
4653   1E05             l337:
4654   1E05               ; 212 print2cn(a, 12, ' ');
4655   1E05 2A 52 2D      lhld drawColumn_a
4656   1E08 22 18 2E      shld print2cn_1
4657   1E0B 3E 0C         mvi a, 12
4658   1E0D 32 1A 2E      sta print2cn_2
4659   1E10 3E 20         mvi a, 32
4660   1E12 CD 6E 26      call print2cn
4661   1E15               ; 213 continue;
4662   1E15 C3 2F 1E      jmp l335
4663   1E18             l336:
4664   1E18               ; 215 drawFile2(a, f);
4665   1E18 2A 52 2D      lhld drawColumn_a
4666   1E1B 22 4D 2D      shld drawFile2_1
4667   1E1E 2A 55 2D      lhld drawColumn_f
4668   1E21 CD 51 1D      call drawFile2
4669   1E24               ; 216 ++f; ++n; 
4670   1E24 2A 55 2D      lhld drawColumn_f
4671   1E27 11 14 00      lxi d, 20
4672   1E2A 19            dad d
4673   1E2B 22 55 2D      shld drawColumn_f
4674   1E2E               ; 216 ++n; 
4675   1E2E 03            inx b
4676   1E2F             l335:
4677   1E2F 21 54 2D      lxi h, drawColumn_y
4678   1E32 35            dcr m
4679   1E33               ; Сложение
4680   1E33 11 4B 00      lxi d, 75
4681   1E36 2A 52 2D      lhld drawColumn_a
4682   1E39 19            dad d
4683   1E3A 22 52 2D      shld drawColumn_a
4684   1E3D C3 F0 1D      jmp l333
4685   1E40             l334:
4686   1E40 C1            pop b
4687   1E41 C9            ret
4688   1E42               ; --- drawFile -----------------------------------------------------------------
4689   1E42             drawFile:
4690   1E42 22 59 2D      shld drawFile_3
4691   1E45               ; 223 drawFile2(charAddr(x*15+3+activePanel, 2+y), f);
4692   1E45 16 0F         mvi d, 15
4693   1E47 3A 57 2D      lda drawFile_1
4694   1E4A CD ED 20      call op_mul
4695   1E4D               ; Сложение с константой 3
4696   1E4D 23            inx h
4697   1E4E 23            inx h
4698   1E4F 23            inx h
4699   1E50               ; Сложение
4700   1E50 EB            xchg
4701   1E51 2A 2A 2D      lhld activePanel
4702   1E54 26 00         mvi h, 0
4703   1E56 19            dad d
4704   1E57 7D            mov a, l
4705   1E58 32 01 2E      sta charAddr_1
4706   1E5B 3A 58 2D      lda drawFile_2
4707   1E5E C6 02         adi 2
4708   1E60 CD D5 25      call charAddr
4709   1E63 22 4D 2D      shld drawFile2_1
4710   1E66 2A 59 2D      lhld drawFile_3
4711   1E69 C3 51 1D      jmp drawFile2
4712   1E6C             drawFileInfo1:
4713   1E6C 22 5B 2D      shld drawFileInfo1_1
4714   1E6F               ; 230 printm(3+activePanel, ROWS_CNT+3, 10, buf);
4715   1E6F 3A 2A 2D      lda activePanel
4716   1E72 C6 03         adi 3
4717   1E74 32 1C 2E      sta printm_1
4718   1E77 3E 19         mvi a, 25
4719   1E79 32 1D 2E      sta printm_2
4720   1E7C 3E 0A         mvi a, 10
4721   1E7E 32 1E 2E      sta printm_3
4722   1E81 C3 81 26      jmp printm
4723   1E84             drawFileInfoDir:
4724   1E84 21 35 2E      lxi h, string49
4725   1E87 C3 6C 1E      jmp drawFileInfo1
4726   1E8A             drawFileInfo2:
4727   1E8A 22 5D 2D      shld drawFileInfo2_1
4728   1E8D               ; 243 printm(14+activePanel, ROWS_CNT+3, 16, buf);
4729   1E8D 3A 2A 2D      lda activePanel
4730   1E90 C6 0E         adi 14
4731   1E92 32 1C 2E      sta printm_1
4732   1E95 3E 19         mvi a, 25
4733   1E97 32 1D 2E      sta printm_2
4734   1E9A 3E 10         mvi a, 16
4735   1E9C 32 1E 2E      sta printm_3
4736   1E9F C3 81 26      jmp printm
4737   1EA2             drawCmdLineWithPath:
4738   1EA2 C5            push b
4739   1EA3               ; 253 print(1, ROWS_CNT+6, "/");
4740   1EA3 3E 01         mvi a, 1
4741   1EA5 32 0A 2E      sta print_1
4742   1EA8 3E 1C         mvi a, 28
4743   1EAA 32 0B 2E      sta print_2
4744   1EAD 21 FF 2E      lxi h, string21
4745   1EB0 CD 1C 26      call print
4746   1EB3               ; 254 l = strlen(panelA.path1);
4747   1EB3 21 1E 27      lxi h, (panelA)+(2)
4748   1EB6 CD 08 22      call strlen
4749   1EB9 22 5F 2D      shld drawCmdLineWithPath_l
4750   1EBC               ; 255 if(l>=30) o=l-30, l=30; else o=0;Сложение
4751   1EBC 11 E2 FF      lxi d, 65506
4752   1EBF 19            dad d
4753   1EC0 D2 D5 1E      jnc l338
4754   1EC3               ; 255 o=l-30, l=30; else o=0;Сложение
4755   1EC3 2A 5F 2D      lhld drawCmdLineWithPath_l
4756   1EC6 11 E2 FF      lxi d, 65506
4757   1EC9 19            dad d
4758   1ECA 44            mov b, h
4759   1ECB 4D            mov c, l
4760   1ECC 21 1E 00      lxi h, 30
4761   1ECF 22 5F 2D      shld drawCmdLineWithPath_l
4762   1ED2 C3 D8 1E      jmp l339
4763   1ED5             l338:
4764   1ED5               ; 255 o=0;
4765   1ED5 01 00 00      lxi b, 0
4766   1ED8             l339:
4767   1ED8               ; 256 printn(2, ROWS_CNT+6, l, panelA.path1+o);
4768   1ED8 3E 02         mvi a, 2
4769   1EDA 32 0E 2E      sta printn_1
4770   1EDD 3E 1C         mvi a, 28
4771   1EDF 32 0F 2E      sta printn_2
4772   1EE2 3A 5F 2D      lda drawCmdLineWithPath_l
4773   1EE5 32 10 2E      sta printn_3
4774   1EE8               ; Сложение с BC
4775   1EE8 21 1E 27      lxi h, (panelA)+(2)
4776   1EEB 09            dad b
4777   1EEC CD 34 26      call printn
4778   1EEF               ; 257 print(l+2, ROWS_CNT+6, ">");Сложение с константой 2
4779   1EEF 2A 5F 2D      lhld drawCmdLineWithPath_l
4780   1EF2 23            inx h
4781   1EF3 23            inx h
4782   1EF4 7D            mov a, l
4783   1EF5 32 0A 2E      sta print_1
4784   1EF8 3E 1C         mvi a, 28
4785   1EFA 32 0B 2E      sta print_2
4786   1EFD 21 12 2F      lxi h, string50
4787   1F00 CD 1C 26      call print
4788   1F03               ; 260 panelA.cmdLineOff = l+3;Сложение с константой 3
4789   1F03 2A 5F 2D      lhld drawCmdLineWithPath_l
4790   1F06 23            inx h
4791   1F07 23            inx h
4792   1F08 23            inx h
4793   1F09 22 24 28      shld (panelA)+(264)
4794   1F0C               ; 263 drawCmdLine();
4795   1F0C CD D6 1F      call drawCmdLine
4796   1F0F C1            pop b
4797   1F10 C9            ret
4798   1F11               ; --- drawWindow -----------------------------------------------------------------
4799   1F11             drawWindow:
4800   1F11 C5            push b
4801   1F12 22 63 2D      shld drawWindow_1
4802   1F15               ; 272 hideTextCursor();
4803   1F15 CD 3B 1A      call hideTextCursor
4804   1F18               ; 274 fillRect(charAddr(WINDOW_X-5,WINDOW_Y-3), 49, 11, ' ');
4805   1F18 3E 08         mvi a, 8
4806   1F1A 32 01 2E      sta charAddr_1
4807   1F1D CD D5 25      call charAddr
4808   1F20 22 39 2D      shld fillRect_1
4809   1F23 3E 31         mvi a, 49
4810   1F25 32 3B 2D      sta fillRect_2
4811   1F28 3E 0B         mvi a, 11
4812   1F2A 32 3C 2D      sta fillRect_3
4813   1F2D 3E 20         mvi a, 32
4814   1F2F CD 29 1B      call fillRect
4815   1F32               ; 275 drawRect(charAddr(WINDOW_X-4,WINDOW_Y-2), 46, 7);
4816   1F32 3E 09         mvi a, 9
4817   1F34 32 01 2E      sta charAddr_1
4818   1F37 CD D5 25      call charAddr
4819   1F3A 22 34 2D      shld drawRect_1
4820   1F3D 3E 2E         mvi a, 46
4821   1F3F 32 36 2D      sta drawRect_2
4822   1F42 3E 07         mvi a, 7
4823   1F44 CD AB 1A      call drawRect
4824   1F47               ; 277 print((64-strlen(title)) >> 1, WINDOW_Y-2, title);
4825   1F47 2A 63 2D      lhld drawWindow_1
4826   1F4A CD 08 22      call strlen
4827   1F4D               ; 16 битная арифметическая операция с константой
4828   1F4D 3E 40         mvi a, 64
4829   1F4F 95            sub l
4830   1F50 6F            mov l, a
4831   1F51 3E 00         mvi a, 0
4832   1F53 9C            sbb h
4833   1F54 67            mov h, a
4834   1F55               ; Сдвиг на 1 вправо
4835   1F55 7C            mov a, h
4836   1F56 BF            cmp a
4837   1F57 1F            rar
4838   1F58 67            mov h, a
4839   1F59 7D            mov a, l
4840   1F5A 1F            rar
4841   1F5B 6F            mov l, a
4842   1F5C 7D            mov a, l
4843   1F5D 32 0A 2E      sta print_1
4844   1F60 3E 09         mvi a, 9
4845   1F62 32 0B 2E      sta print_2
4846   1F65 2A 63 2D      lhld drawWindow_1
4847   1F68 CD 1C 26      call print
4848   1F6B C1            pop b
4849   1F6C C9            ret
4850   1F6D               ; --- drawAnyKeyButton -----------------------------------------------------------------
4851   1F6D             drawAnyKeyButton:
4852   1F6D 3E 1B         mvi a, 27
4853   1F6F 32 0A 2E      sta print_1
4854   1F72 3E 0F         mvi a, 15
4855   1F74 32 0B 2E      sta print_2
4856   1F77 21 56 2F      lxi h, string51
4857   1F7A C3 1C 26      jmp print
4858   1F7D             drawEscButton:
4859   1F7D 3E 19         mvi a, 25
4860   1F7F 32 0A 2E      sta print_1
4861   1F82 3E 0F         mvi a, 15
4862   1F84 32 0B 2E      sta print_2
4863   1F87 21 62 2F      lxi h, string52
4864   1F8A C3 1C 26      jmp print
4865   1F8D             drawWindowText:
4866   1F8D 22 67 2D      shld drawWindowText_3
4867   1F90               ; 297 printn(WINDOW_X+ox, WINDOW_Y+oy, 40-ox, text);
4868   1F90 3A 65 2D      lda drawWindowText_1
4869   1F93 C6 0D         adi 13
4870   1F95 32 0E 2E      sta printn_1
4871   1F98 3A 66 2D      lda drawWindowText_2
4872   1F9B C6 0B         adi 11
4873   1F9D 32 0F 2E      sta printn_2
4874   1FA0               ; Арифметика 3/4
4875   1FA0 21 65 2D      lxi h, drawWindowText_1
4876   1FA3 3E 28         mvi a, 40
4877   1FA5 96            sub m
4878   1FA6 32 10 2E      sta printn_3
4879   1FA9 2A 67 2D      lhld drawWindowText_3
4880   1FAC C3 34 26      jmp printn
4881   1FAF             drawWindowProgress:
4882   1FAF 32 6C 2D      sta drawWindowProgress_4
4883   1FB2               ; 304 if(n==0) return;
4884   1FB2 3A 6B 2D      lda drawWindowProgress_3
4885   1FB5 B7            ora a
4886   1FB6 C2 BA 1F      jnz l340
4887   1FB9               ; 304 return;
4888   1FB9 C9            ret
4889   1FBA             l340:
4890   1FBA               ; 305 printcn(WINDOW_X+ox, WINDOW_Y+oy, n, chr);
4891   1FBA 3A 69 2D      lda drawWindowProgress_1
4892   1FBD C6 0D         adi 13
4893   1FBF 32 21 2E      sta printcn_1
4894   1FC2 3A 6A 2D      lda drawWindowProgress_2
4895   1FC5 C6 0B         adi 11
4896   1FC7 32 22 2E      sta printcn_2
4897   1FCA 3A 6B 2D      lda drawWindowProgress_3
4898   1FCD 32 23 2E      sta printcn_3
4899   1FD0 3A 6C 2D      lda drawWindowProgress_4
4900   1FD3 C3 9F 26      jmp printcn
4901   1FD6             drawCmdLine:
4902   1FD6 3A 24 28      lda (panelA)+(264)
4903   1FD9 32 6D 2D      sta drawInput_1
4904   1FDC 3E 1C         mvi a, 28
4905   1FDE 32 6E 2D      sta drawInput_2
4906   1FE1               ; 16 битная арифметическая операция с константой
4907   1FE1 2A 24 28      lhld (panelA)+(264)
4908   1FE4 3E 3E         mvi a, 62
4909   1FE6 95            sub l
4910   1FE7 6F            mov l, a
4911   1FE8 3E 00         mvi a, 0
4912   1FEA 9C            sbb h
4913   1FEB 67            mov h, a
4914   1FEC 7D            mov a, l
4915   1FED C3 F0 1F      jmp drawInput
4916   1FF0             drawInput:
4917   1FF0 C5            push b
4918   1FF1 32 6F 2D      sta drawInput_3
4919   1FF4               ; 322 cmdline_pos = strlen(cmdline);
4920   1FF4 21 30 29      lxi h, cmdline
4921   1FF7 CD 08 22      call strlen
4922   1FFA 22 76 2D      shld drawInput_cmdline_pos
4923   1FFD               ; 323 --max;
4924   1FFD 21 6F 2D      lxi h, drawInput_3
4925   2000 35            dcr m
4926   2001               ; 324 if(cmdline_pos < max) cmdline_offset = 0; else cmdline_offset = cmdline_pos-max;
4927   2001 2A 76 2D      lhld drawInput_cmdline_pos
4928   2004 EB            xchg
4929   2005 2A 6F 2D      lhld drawInput_3
4930   2008 26 00         mvi h, 0
4931   200A CD 01 21      call op_cmp16
4932   200D DA 1C 20      jc l341
4933   2010 CA 1C 20      jz l341
4934   2013               ; 324 cmdline_offset = 0; else cmdline_offset = cmdline_pos-max;
4935   2013 21 00 00      lxi h, 0
4936   2016 22 74 2D      shld drawInput_cmdline_offset
4937   2019 C3 2E 20      jmp l342
4938   201C             l341:
4939   201C               ; 324 cmdline_offset = cmdline_pos-max;16 битная арифметическая операция с константой
4940   201C 2A 6F 2D      lhld drawInput_3
4941   201F 26 00         mvi h, 0
4942   2021 EB            xchg
4943   2022 2A 76 2D      lhld drawInput_cmdline_pos
4944   2025 7D            mov a, l
4945   2026 93            sub e
4946   2027 6F            mov l, a
4947   2028 7C            mov a, h
4948   2029 9A            sbb d
4949   202A 67            mov h, a
4950   202B 22 74 2D      shld drawInput_cmdline_offset
4951   202E             l342:
4952   202E               ; 325 c1 = cmdline_pos - cmdline_offset;16 битная арифметическая операция с константой
4953   202E 2A 74 2D      lhld drawInput_cmdline_offset
4954   2031 EB            xchg
4955   2032 2A 76 2D      lhld drawInput_cmdline_pos
4956   2035 7D            mov a, l
4957   2036 93            sub e
4958   2037 6F            mov l, a
4959   2038 7C            mov a, h
4960   2039 9A            sbb d
4961   203A 67            mov h, a
4962   203B 22 70 2D      shld drawInput_c1
4963   203E               ; 326 cmdline[cmdline_pos] = 0;Сложение
4964   203E 2A 76 2D      lhld drawInput_cmdline_pos
4965   2041 11 30 29      lxi d, cmdline
4966   2044 19            dad d
4967   2045 36 00         mvi m, 0
4968   2047               ; 327 ++c1;
4969   2047 2A 70 2D      lhld drawInput_c1
4970   204A 23            inx h
4971   204B 22 70 2D      shld drawInput_c1
4972   204E               ; 328 if(c1 > max) c1 = max;
4973   204E EB            xchg
4974   204F 2A 6F 2D      lhld drawInput_3
4975   2052 26 00         mvi h, 0
4976   2054 CD 01 21      call op_cmp16
4977   2057 D2 62 20      jnc l343
4978   205A               ; 328 c1 = max;
4979   205A 2A 6F 2D      lhld drawInput_3
4980   205D 26 00         mvi h, 0
4981   205F 22 70 2D      shld drawInput_c1
4982   2062             l343:
4983   2062               ; 329 ++c1;
4984   2062 2A 70 2D      lhld drawInput_c1
4985   2065 23            inx h
4986   2066 22 70 2D      shld drawInput_c1
4987   2069               ; 330 ++max;
4988   2069 21 6F 2D      lxi h, drawInput_3
4989   206C 34            inr m
4990   206D               ; 331 printm(x, y, max, cmdline + cmdline_offset);
4991   206D 3A 6D 2D      lda drawInput_1
4992   2070 32 1C 2E      sta printm_1
4993   2073 3A 6E 2D      lda drawInput_2
4994   2076 32 1D 2E      sta printm_2
4995   2079 3A 6F 2D      lda drawInput_3
4996   207C 32 1E 2E      sta printm_3
4997   207F               ; Сложение
4998   207F 2A 74 2D      lhld drawInput_cmdline_offset
4999   2082 11 30 29      lxi d, cmdline
5000   2085 19            dad d
5001   2086 CD 81 26      call printm
5002   2089               ; 334 showTextCursor(x+cmdline_pos-cmdline_offset, y);Сложение
5003   2089 2A 6D 2D      lhld drawInput_1
5004   208C 26 00         mvi h, 0
5005   208E EB            xchg
5006   208F 2A 76 2D      lhld drawInput_cmdline_pos
5007   2092 19            dad d
5008   2093               ; 16 битная арифметическая операция с константой
5009   2093 EB            xchg
5010   2094 2A 74 2D      lhld drawInput_cmdline_offset
5011   2097 EB            xchg
5012   2098 7D            mov a, l
5013   2099 93            sub e
5014   209A 6F            mov l, a
5015   209B 7C            mov a, h
5016   209C 9A            sbb d
5017   209D 67            mov h, a
5018   209E 7D            mov a, l
5019   209F 32 2E 2D      sta showTextCursor_1
5020   20A2 3A 6E 2D      lda drawInput_2
5021   20A5 CD 1C 1A      call showTextCursor
5022   20A8 C1            pop b
5023   20A9 C9            ret
5024   20AA               ; --- drawWindowInput -----------------------------------------------------------------
5025   20AA             drawWindowInput:
5026   20AA 32 7A 2D      sta drawWindowInput_3
5027   20AD               ; 340 drawInput(WINDOW_X+x, WINDOW_Y+y, max);
5028   20AD 3A 78 2D      lda drawWindowInput_1
5029   20B0 C6 0D         adi 13
5030   20B2 32 6D 2D      sta drawInput_1
5031   20B5 3A 79 2D      lda drawWindowInput_2
5032   20B8 C6 0B         adi 11
5033   20BA 32 6E 2D      sta drawInput_2
5034   20BD 3A 7A 2D      lda drawWindowInput_3
5035   20C0 C3 F0 1F      jmp drawInput
5036   20C3             getch1:
5037   20C3 C3 03 F8      jmp 63491
5038   20C6 C9            ret
5039   20C7               ; --- bioskey1 -----------------------------------------------------------------
5040   20C7             bioskey1:
5041   20C7 C3 1B F8      jmp 63515
5042   20CA C9            ret
5043   20CB               ; --- memswap -----------------------------------------------------------------
5044   20CB             memswap:
5045   20CB 22 7F 2D      shld memswap_3
5046   20CE               ; 2 asm {
5047   20CE C5              push b
5048   20CF                 ; de = count
5049   20CF EB              xchg
5050   20D0                 ; bc = from
5051   20D0 2A 7D 2D        lhld memswap_2
5052   20D3 4D              mov c, l
5053   20D4 44              mov b, h
5054   20D5                 ; hl = to
5055   20D5 2A 7B 2D        lhld memswap_1
5056   20D8             memswap_l1:
5057   20D8                 ; if(cnt==0) return
5058   20D8 7A              mov a, d
5059   20D9 B3              ora e
5060   20DA CA EB 20        jz memswap_l2
5061   20DD                 ; *dest = *src
5062   20DD 0A              ldax b
5063   20DE 32 E4 20        sta memswap_v1
5064   20E1 7E              mov a, m
5065   20E2 02              stax b
5066   20E3 36              .db 36h ; mvi m, 0
5067   20E4             memswap_v1:
5068   20E4 00              .db 0    
5069   20E5                 ; dest++, src++, cnt--
5070   20E5 23              inx h
5071   20E6 03              inx b
5072   20E7 1B              dcx d
5073   20E8                 ; loop
5074   20E8 C3 D8 20        jmp memswap_l1
5075   20EB             memswap_l2:
5076   20EB C1              pop b
5077   20EC               
5078   20EC C9            ret
5079   20ED               ; --- op_mul -----------------------------------------------------------------
5080   20ED             op_mul:
5081   20ED C5            push b
5082   20EE 21 00 00      lxi h, 0
5083   20F1 5A            mov e, d  ; de=d
5084   20F2 55            mov d, l  
5085   20F3 0E 08         mvi c, 8
5086   20F5             op_mul1:
5087   20F5 29            dad h
5088   20F6 87            add a
5089   20F7 D2 FB 20      jnc op_mul2
5090   20FA 19              dad d
5091   20FB             op_mul2:
5092   20FB 0D            dcr c
5093   20FC C2 F5 20      jnz op_mul1
5094   20FF             pop_bc_ret:
5095   20FF C1            pop b
5096   2100             
5097   2100 C9            ret
5098   2101               ; --- op_cmp16 -----------------------------------------------------------------
5099   2101             op_cmp16:
5100   2101 7C              mov a, h
5101   2102 BA              cmp d
5102   2103 C0              rnz
5103   2104 7D              mov a, l
5104   2105 BB              cmp e
5105   2106               
5106   2106 C9            ret
5107   2107               ; --- i2s32 -----------------------------------------------------------------
5108   2107             i2s32:
5109   2107 32 87 2D      sta i2s32_4
5110   210A               ; 7 set32(&v, src);
5111   210A 21 88 2D      lxi h, i2s32_v
5112   210D 22 E0 2D      shld set32_1
5113   2110 2A 83 2D      lhld i2s32_2
5114   2113 CD FF 23      call set32
5115   2116               ; 9 buf += n;  Сложение
5116   2116 2A 85 2D      lhld i2s32_3
5117   2119 EB            xchg
5118   211A 2A 81 2D      lhld i2s32_1
5119   211D 19            dad d
5120   211E 22 81 2D      shld i2s32_1
5121   2121               ; 10 *buf = 0;
5122   2121 36 00         mvi m, 0
5123   2123               ; 12 while(1) {
5124   2123             l344:
5125   2123               ; 13 div32_16(&v, 10);
5126   2123 21 88 2D      lxi h, i2s32_v
5127   2126 22 E4 2D      shld div32_16_1
5128   2129 21 0A 00      lxi h, 10
5129   212C CD 15 24      call div32_16
5130   212F               ; 14 --buf;
5131   212F 2A 81 2D      lhld i2s32_1
5132   2132 2B            dcx h
5133   2133 22 81 2D      shld i2s32_1
5134   2136               ; 15 *buf = "0123456789ABCDEF"[op_div16_mod];Сложение
5135   2136 2A 9F 2D      lhld op_div16_mod
5136   2139 11 01 2F      lxi d, string53
5137   213C 19            dad d
5138   213D 7E            mov a, m
5139   213E 2A 81 2D      lhld i2s32_1
5140   2141 77            mov m, a
5141   2142               ; 16 if(--n == 0) return;
5142   2142 2A 85 2D      lhld i2s32_3
5143   2145 2B            dcx h
5144   2146 22 85 2D      shld i2s32_3
5145   2149               ; Сложение с константой 0
5146   2149 7D            mov a, l
5147   214A B4            ora h
5148   214B C2 4F 21      jnz l346
5149   214E               ; 16 return;
5150   214E C9            ret
5151   214F             l346:
5152   214F               ; 17 if(((ushort*)&v)[0] == 0 && ((ushort*)&v)[1] == 0) break;Сложение с константой 0
5153   214F 2A 88 2D      lhld (i2s32_v)+(0)
5154   2152 7D            mov a, l
5155   2153 B4            ora h
5156   2154 C2 5F 21      jnz l347
5157   2157               ; Сложение с константой 0
5158   2157 2A 8A 2D      lhld (i2s32_v)+(2)
5159   215A 7D            mov a, l
5160   215B B4            ora h
5161   215C CA 62 21      jz l345
5162   215F             l347:
5163   215F C3 23 21      jmp l344
5164   2162             l345:
5165   2162               ; 20 while(1) {
5166   2162             l348:
5167   2162               ; 21 --buf;
5168   2162 2A 81 2D      lhld i2s32_1
5169   2165 2B            dcx h
5170   2166 22 81 2D      shld i2s32_1
5171   2169               ; 22 *buf = spc;
5172   2169 3A 87 2D      lda i2s32_4
5173   216C 77            mov m, a
5174   216D               ; 23 if(--n == 0) break;
5175   216D 2A 85 2D      lhld i2s32_3
5176   2170 2B            dcx h
5177   2171 22 85 2D      shld i2s32_3
5178   2174               ; Сложение с константой 0
5179   2174 7D            mov a, l
5180   2175 B4            ora h
5181   2176 CA 7C 21      jz l349
5182   2179 C3 62 21      jmp l348
5183   217C             l349:
5184   217C C9            ret
5185   217D               ; --- i2s -----------------------------------------------------------------
5186   217D             i2s:
5187   217D 32 92 2D      sta i2s_4
5188   2180               ; 4 buf += n;  Сложение
5189   2180 2A 90 2D      lhld i2s_3
5190   2183 EB            xchg
5191   2184 2A 8C 2D      lhld i2s_1
5192   2187 19            dad d
5193   2188 22 8C 2D      shld i2s_1
5194   218B               ; 5 *buf = 0;
5195   218B 36 00         mvi m, 0
5196   218D               ; 6 while(1) {
5197   218D             l351:
5198   218D               ; 7 v /= 10;
5199   218D 11 0A 00      lxi d, 10
5200   2190 2A 8E 2D      lhld i2s_2
5201   2193 CD 3C 22      call op_div16
5202   2196 22 8E 2D      shld i2s_2
5203   2199               ; 8 --buf;
5204   2199 2A 8C 2D      lhld i2s_1
5205   219C 2B            dcx h
5206   219D 22 8C 2D      shld i2s_1
5207   21A0               ; 9 *buf = "0123456789ABCDEF"[op_div16_mod];Сложение
5208   21A0 2A 9F 2D      lhld op_div16_mod
5209   21A3 11 01 2F      lxi d, string53
5210   21A6 19            dad d
5211   21A7 7E            mov a, m
5212   21A8 2A 8C 2D      lhld i2s_1
5213   21AB 77            mov m, a
5214   21AC               ; 10 --n;
5215   21AC 2A 90 2D      lhld i2s_3
5216   21AF 2B            dcx h
5217   21B0 22 90 2D      shld i2s_3
5218   21B3               ; 11 if(n == 0) return;Сложение с константой 0
5219   21B3 7D            mov a, l
5220   21B4 B4            ora h
5221   21B5 C2 B9 21      jnz l353
5222   21B8               ; 11 return;
5223   21B8 C9            ret
5224   21B9             l353:
5225   21B9               ; 12 if(v == 0) break;Сложение с константой 0
5226   21B9 2A 8E 2D      lhld i2s_2
5227   21BC 7D            mov a, l
5228   21BD B4            ora h
5229   21BE CA C4 21      jz l352
5230   21C1 C3 8D 21      jmp l351
5231   21C4             l352:
5232   21C4               ; 14 while(1) {
5233   21C4             l355:
5234   21C4               ; 15 --buf;
5235   21C4 2A 8C 2D      lhld i2s_1
5236   21C7 2B            dcx h
5237   21C8 22 8C 2D      shld i2s_1
5238   21CB               ; 16 *buf = spc;
5239   21CB 3A 92 2D      lda i2s_4
5240   21CE 77            mov m, a
5241   21CF               ; 17 if(--n == 0) break;
5242   21CF 2A 90 2D      lhld i2s_3
5243   21D2 2B            dcx h
5244   21D3 22 90 2D      shld i2s_3
5245   21D6               ; Сложение с константой 0
5246   21D6 7D            mov a, l
5247   21D7 B4            ora h
5248   21D8 CA DE 21      jz l356
5249   21DB C3 C4 21      jmp l355
5250   21DE             l356:
5251   21DE C9            ret
5252   21DF               ; --- op_shr16 -----------------------------------------------------------------
5253   21DF             op_shr16:
5254   21DF 1C            inr e
5255   21E0             op_shr16_l:
5256   21E0 1D            dcr e
5257   21E1 C8            rz
5258   21E2 97            sub a
5259   21E3 B4            ora h 
5260   21E4 1F            rar
5261   21E5 67            mov h, a
5262   21E6 7D            mov a, l
5263   21E7 1F            rar
5264   21E8 6F            mov l, a
5265   21E9 C3 E0 21      jmp op_shr16_l
5266   21EC             
5267   21EC C9            ret
5268   21ED               ; --- add32_32 -----------------------------------------------------------------
5269   21ED             add32_32:
5270   21ED 22 95 2D      shld add32_32_2
5271   21F0               ; 4 asm {   
5272   21F0                
5273   21F0                 ; hl = add32_32_2   
5274   21F0 EB              xchg
5275   21F1 2A 93 2D        lhld add32_32_1
5276   21F4 EB              xchg
5277   21F5             
5278   21F5 1A              ldax d
5279   21F6 86              add  m
5280   21F7 12              stax d
5281   21F8 23              inx  h
5282   21F9 13              inx  d
5283   21FA 1A              ldax d
5284   21FB 8E              adc  m
5285   21FC 12              stax d
5286   21FD 23              inx  h
5287   21FE 13              inx  d
5288   21FF 1A              ldax d
5289   2200 8E              adc  m
5290   2201 12              stax d
5291   2202 23              inx  h
5292   2203 13              inx  d
5293   2204 1A              ldax d
5294   2205 8E              adc  m
5295   2206 12              stax d
5296   2207               
5297   2207 C9            ret
5298   2208               ; --- strlen -----------------------------------------------------------------
5299   2208             strlen:
5300   2208 22 97 2D      shld strlen_1
5301   220B               ; 2 asm { 
5302   220B              
5303   220B 11 FF FF        lxi d, -1
5304   220E             strlen_l1:
5305   220E AF              xra a
5306   220F B6              ora m
5307   2210 13              inx d
5308   2211 23              inx h
5309   2212 C2 0E 22        jnz strlen_l1
5310   2215 EB              xchg
5311   2216               
5312   2216 C9            ret
5313   2217               ; --- memcmp -----------------------------------------------------------------
5314   2217             memcmp:
5315   2217 22 9D 2D      shld memcmp_3
5316   221A               ; 2 asm {
5317   221A                 ; if(len==0) return 0;
5318   221A 7D              mov a, l
5319   221B B4              ora h
5320   221C C8              rz
5321   221D C5              push b
5322   221E                 ; de = len
5323   221E EB              xchg
5324   221F                 ; bc = d
5325   221F 2A 99 2D        lhld memcmp_1
5326   2222 44              mov b, h
5327   2223 4D              mov c, l
5328   2224                 ; hl = s
5329   2224 2A 9B 2D        lhld memcmp_2
5330   2227                 ; loop
5331   2227             memcmp_l1:
5332   2227 0A                ldax b
5333   2228 BE                cmp m
5334   2229 C2 36 22          jnz memcmp_stop
5335   222C 23                inx h
5336   222D 03                inx b
5337   222E 1B                dcx d
5338   222F 7A                mov a, d
5339   2230 B3                ora e
5340   2231 C2 27 22        jnz memcmp_l1
5341   2234 C1              pop b
5342   2235                 ; a=0
5343   2235 C9              ret
5344   2236             memcmp_stop:
5345   2236 C1              pop b
5346   2237 9F              sbb a
5347   2238 D8              rc
5348   2239 3C              inr a
5349   223A C9              ret
5350   223B               
5351   223B C9            ret
5352   223C               ; --- op_div16 -----------------------------------------------------------------
5353   223C             op_div16:
5354   223C C5                  PUSH B
5355   223D EB                  XCHG
5356   223E CD 48 22            CALL _DIV0
5357   2241 EB                  XCHG
5358   2242 22 9F 2D            SHLD op_div16_mod
5359   2245 EB                  XCHG
5360   2246 C1                  POP B
5361   2247 C9                  RET
5362   2248             
5363   2248             _DIV0:
5364   2248 7C          _DIV:	MOV A,H
5365   2249 B5          	ORA L
5366   224A C8          	RZ
5367   224B 01 00 00    	LXI B,0000
5368   224E C5          	PUSH B
5369   224F 7B          _DIV1:	MOV A,E
5370   2250 95          	SUB L
5371   2251 7A          	MOV A,D
5372   2252 9C          	SBB H
5373   2253 DA 5B 22    	JC _DIV2
5374   2256 E5          	PUSH H
5375   2257 29          	DAD H
5376   2258 D2 4F 22    	JNC _DIV1
5377   225B 21 00 00    _DIV2:	LXI H,0000
5378   225E C1          _DIV3:	POP B
5379   225F 78          	MOV A,B
5380   2260 B1          	ORA C
5381   2261 C8          	RZ
5382   2262 29          	DAD H
5383   2263 D5          	PUSH D
5384   2264 7B          	MOV A,E
5385   2265 91          	SUB C
5386   2266 5F          	MOV E,A
5387   2267 7A          	MOV A,D
5388   2268 98          	SBB B
5389   2269 57          	MOV D,A
5390   226A DA 72 22    	JC _DIV4
5391   226D 23          	INX H
5392   226E C1          	POP B
5393   226F C3 5E 22    	JMP _DIV3
5394   2272 D1          _DIV4:	POP D
5395   2273 C3 5E 22    	JMP _DIV3  
5396   2276               
5397   2276 C9            ret
5398   2277               ; --- memset -----------------------------------------------------------------
5399   2277             memset:
5400   2277 22 A4 2D      shld memset_3
5401   227A               ; 2 asm {
5402   227A C5              push b
5403   227B 3A A3 2D        lda memset_2
5404   227E EB              xchg
5405   227F 2A A1 2D        lhld memset_1
5406   2282 EB              xchg
5407   2283 01 FF FF        lxi b, -1    
5408   2286             memset_l1:
5409   2286 09              dad b
5410   2287 D2 8F 22        jnc memset_l2
5411   228A 12              stax d
5412   228B 13              inx d
5413   228C C3 86 22        jmp memset_l1
5414   228F             memset_l2:
5415   228F C1              pop b
5416   2290               
5417   2290 C9            ret
5418   2291               ; --- memcpy -----------------------------------------------------------------
5419   2291             memcpy:
5420   2291 22 AA 2D      shld memcpy_3
5421   2294               ; 2 asm {
5422   2294                 ; if(cnt==0) return
5423   2294 7C              mov a, h
5424   2295 B5              ora l
5425   2296 C8              rz
5426   2297                 ; start
5427   2297 C5              push b
5428   2298                 ; de = count
5429   2298 EB              xchg
5430   2299                 ; bc = from
5431   2299 2A A8 2D        lhld memcpy_2
5432   229C 4D              mov c, l
5433   229D 44              mov b, h
5434   229E                 ; hl = to
5435   229E 2A A6 2D        lhld memcpy_1
5436   22A1                 ; enter loop
5437   22A1 14              inr d
5438   22A2 AF              xra a
5439   22A3 B3              ora e
5440   22A4 CA AF 22        jz memcpy_l2
5441   22A7             memcpy_l1:
5442   22A7                 ; *dest = *src
5443   22A7 0A              ldax b
5444   22A8 77              mov m, a
5445   22A9                 ; dest++, src++
5446   22A9 23              inx h
5447   22AA 03              inx b
5448   22AB                 ; while(--cnt)
5449   22AB 1D              dcr e
5450   22AC C2 A7 22        jnz memcpy_l1
5451   22AF             memcpy_l2:
5452   22AF 15              dcr d
5453   22B0 C2 A7 22        jnz memcpy_l1
5454   22B3 C1              pop b
5455   22B4               
5456   22B4 C9            ret
5457   22B5               ; --- fs_findfirst -----------------------------------------------------------------
5458   22B5             fs_findfirst:
5459   22B5 22 B0 2D      shld fs_findfirst_3
5460   22B8               ; 4 if(path[0] == '/') path++;Сложение с константой 0
5461   22B8 2A AC 2D      lhld fs_findfirst_1
5462   22BB 7E            mov a, m
5463   22BC FE 2F         cpi 47
5464   22BE C2 C8 22      jnz l358
5465   22C1               ; 4 path++;
5466   22C1 54            mov d, h
5467   22C2 5D            mov e, l
5468   22C3 23            inx h
5469   22C4 22 AC 2D      shld fs_findfirst_1
5470   22C7 EB            xchg
5471   22C8             l358:
5472   22C8               ; 5 asm {
5473   22C8 C5              PUSH B
5474   22C9                 ; hl = fs_findfirst_3
5475   22C9 EB              XCHG
5476   22CA 2A AE 2D        LHLD fs_findfirst_2
5477   22CD 44              MOV  B, H  
5478   22CE 4D              MOV  C, L
5479   22CF 2A AC 2D        LHLD fs_findfirst_1 
5480   22D2 3E 01           MVI  A, 1
5481   22D4 CD EC 23        CALL fs_entry
5482   22D7 22 DB 2D        SHLD fs_low
5483   22DA C1              POP  B
5484   22DB               
5485   22DB C9            ret
5486   22DC               ; --- op_mod16 -----------------------------------------------------------------
5487   22DC             op_mod16:
5488   22DC CD 3C 22      call op_div16
5489   22DF               ; 5 asm {
5490   22DF 2A 9F 2D        lhld op_div16_mod;
5491   22E2               
5492   22E2 C9            ret
5493   22E3               ; --- strcpy -----------------------------------------------------------------
5494   22E3             strcpy:
5495   22E3 22 B4 2D      shld strcpy_2
5496   22E6               ; 2 asm {
5497   22E6                 ; de = src
5498   22E6 EB              xchg
5499   22E7                 ; hl = to
5500   22E7 2A B2 2D        lhld strcpy_1
5501   22EA             strcpy_l1:
5502   22EA                 ; *dest = *src
5503   22EA 1A              ldax d
5504   22EB 77              mov m, a
5505   22EC B7              ora a
5506   22ED 23              inx h
5507   22EE 13              inx d
5508   22EF C2 EA 22        jnz strcpy_l1
5509   22F2 2B              dcx h
5510   22F3               
5511   22F3 C9            ret
5512   22F4               ; --- memcpy_back -----------------------------------------------------------------
5513   22F4             memcpy_back:
5514   22F4 22 BA 2D      shld memcpy_back_3
5515   22F7               ; 2 asm {
5516   22F7                 ; if(cnt==0) return
5517   22F7 7C              mov a, h
5518   22F8 B5              ora l
5519   22F9 C8              rz
5520   22FA                 ; start
5521   22FA C5              push b
5522   22FB                 ; de = count
5523   22FB EB              xchg
5524   22FC                 ; bc = from
5525   22FC 2A B8 2D        lhld memcpy_back_2
5526   22FF 19              dad d
5527   2300 4D              mov c, l
5528   2301 44              mov b, h
5529   2302                 ; hl = to
5530   2302 2A B6 2D        lhld memcpy_back_1
5531   2305 19              dad d
5532   2306                 ; enter loop
5533   2306 14              inr d
5534   2307 AF              xra a
5535   2308 B3              ora e
5536   2309 CA 14 23        jz memcpy_back_l2
5537   230C             memcpy_back_l1:
5538   230C                 ; dest--, src--
5539   230C 2B              dcx h
5540   230D 0B              dcx b
5541   230E                 ; *dest = *src
5542   230E 0A              ldax b
5543   230F 77              mov m, a
5544   2310                 ; while(cnt)
5545   2310 1D              dcr e
5546   2311 C2 0C 23        jnz memcpy_back_l1
5547   2314             memcpy_back_l2:
5548   2314 15              dcr d
5549   2315 C2 0C 23        jnz memcpy_back_l1
5550   2318 C1              pop b
5551   2319               
5552   2319 C9            ret
5553   231A               ; --- strchr -----------------------------------------------------------------
5554   231A             strchr:
5555   231A 32 BE 2D      sta strchr_2
5556   231D               ; 2 asm {
5557   231D 57              mov d, a
5558   231E 2A BC 2D        lhld strchr_1
5559   2321             strchr_l1:
5560   2321                 ; *dest = *src    
5561   2321 7E              mov a, m
5562   2322 BA              cmp d
5563   2323 C8              rz
5564   2324 23              inx h
5565   2325 B7              ora a
5566   2326 C2 21 23        jnz strchr_l1
5567   2329 67              mov h, a
5568   232A 6F              mov l, a
5569   232B               
5570   232B C9            ret
5571   232C               ; --- strcmp -----------------------------------------------------------------
5572   232C             strcmp:
5573   232C 22 C1 2D      shld strcmp_2
5574   232F               ; 3 while(1) {
5575   232F             l359:
5576   232F               ; 4 a=*d, b=*s;
5577   232F 2A BF 2D      lhld strcmp_1
5578   2332 7E            mov a, m
5579   2333 32 C3 2D      sta strcmp_a
5580   2336 2A C1 2D      lhld strcmp_2
5581   2339 7E            mov a, m
5582   233A 32 C4 2D      sta strcmp_b
5583   233D               ; 5 if(a < b) return 255;
5584   233D 21 C4 2D      lxi h, strcmp_b
5585   2340 3A C3 2D      lda strcmp_a
5586   2343 BE            cmp m
5587   2344 D2 4A 23      jnc l361
5588   2347               ; 5 return 255;
5589   2347 3E FF         mvi a, 255
5590   2349 C9            ret
5591   234A             l361:
5592   234A               ; 6 if(b < a) return 1;
5593   234A 21 C3 2D      lxi h, strcmp_a
5594   234D 3A C4 2D      lda strcmp_b
5595   2350 BE            cmp m
5596   2351 D2 57 23      jnc l362
5597   2354               ; 6 return 1;
5598   2354 3E 01         mvi a, 1
5599   2356 C9            ret
5600   2357             l362:
5601   2357               ; 7 if(*d==0) return 0;
5602   2357 2A BF 2D      lhld strcmp_1
5603   235A 7E            mov a, m
5604   235B B7            ora a
5605   235C C2 61 23      jnz l363
5606   235F               ; 7 return 0;
5607   235F AF            xra a
5608   2360 C9            ret
5609   2361             l363:
5610   2361               ; 8 ++d, ++s;
5611   2361 23            inx h
5612   2362 22 BF 2D      shld strcmp_1
5613   2365 2A C1 2D      lhld strcmp_2
5614   2368 23            inx h
5615   2369 22 C1 2D      shld strcmp_2
5616   236C C3 2F 23      jmp l359
5617   236F             l360:
5618   236F C9            ret
5619   2370               ; --- op_mul16 -----------------------------------------------------------------
5620   2370             op_mul16:
5621   2370 C5            push b
5622   2371 44            mov b, h
5623   2372 4D            mov c, l
5624   2373 21 00 00      lxi h, 0
5625   2376 3E 11         mvi a, 17
5626   2378             op_mul16_1:
5627   2378 3D            dcr a
5628   2379 CA FF 20      jz pop_bc_ret
5629   237C 29            dad h
5630   237D EB            xchg
5631   237E D2 86 23      jnc op_mul16_2
5632   2381 29            dad h
5633   2382 23            inx h
5634   2383 C3 87 23      jmp op_mul16_3
5635   2386             op_mul16_2:
5636   2386 29            dad h
5637   2387             op_mul16_3:
5638   2387 EB            xchg
5639   2388 D2 78 23      jnc op_mul16_1
5640   238B 09            dad b
5641   238C D2 78 23      jnc op_mul16_1
5642   238F 13            inx d
5643   2390 C3 78 23      jmp op_mul16_1
5644   2393             
5645   2393 C9            ret
5646   2394               ; --- fs_open -----------------------------------------------------------------
5647   2394             fs_open:
5648   2394 22 C5 2D      shld fs_open_1
5649   2397               ; 5 return fs_open0(name, O_OPEN);
5650   2397 22 25 2E      shld fs_open0_1
5651   239A AF            xra a
5652   239B C3 BD 26      jmp fs_open0
5653   239E C9            ret
5654   239F               ; --- fs_read -----------------------------------------------------------------
5655   239F             fs_read:
5656   239F 22 C9 2D      shld fs_read_2
5657   23A2               ; 4 asm {
5658   23A2 C5              PUSH B
5659   23A3                 ; hl = fs_read_2
5660   23A3 EB              XCHG
5661   23A4 2A C7 2D        LHLD fs_read_1
5662   23A7 EB              XCHG
5663   23A8 3E 04           MVI  A, 4
5664   23AA CD EC 23        CALL fs_entry ; HL-размер, DE-адрес / HL-сколько загрузили, A-код ошибки
5665   23AD 22 DB 2D        SHLD fs_low
5666   23B0 C1              POP  B    
5667   23B1               
5668   23B1 C9            ret
5669   23B2               ; --- fs_create -----------------------------------------------------------------
5670   23B2             fs_create:
5671   23B2 22 CB 2D      shld fs_create_1
5672   23B5               ; 5 return fs_open0(name, O_CREATE);
5673   23B5 22 25 2E      shld fs_open0_1
5674   23B8 3E 01         mvi a, 1
5675   23BA C3 BD 26      jmp fs_open0
5676   23BD C9            ret
5677   23BE               ; --- fs_write -----------------------------------------------------------------
5678   23BE             fs_write:
5679   23BE 22 CF 2D      shld fs_write_2
5680   23C1               ; 4 asm {
5681   23C1 C5              PUSH B
5682   23C2                 ; hl = fs_write_2
5683   23C2 EB              XCHG
5684   23C3 2A CD 2D        LHLD fs_write_1
5685   23C6 EB              XCHG
5686   23C7 3A DF 2D        LDA  fs_addr
5687   23CA 3E 05           MVI  A, 5
5688   23CC CD EC 23        CALL fs_entry ; HL-размер, DE-адрес / A-код ошибки
5689   23CF C1              POP  B    
5690   23D0               
5691   23D0 C9            ret
5692   23D1               ; --- fs_exec -----------------------------------------------------------------
5693   23D1             fs_exec:
5694   23D1 22 D3 2D      shld fs_exec_2
5695   23D4               ; 4 asm {    
5696   23D4                 
5697   23D4 C5              PUSH B
5698   23D5 EB              XCHG
5699   23D6 2A D1 2D        LHLD fs_exec_1
5700   23D9 AF              XRA  A
5701   23DA CD EC 23        CALL fs_entry
5702   23DD C1              POP  B
5703   23DE               
5704   23DE C9            ret
5705   23DF               ; --- fs_init -----------------------------------------------------------------
5706   23DF             fs_init:
5707   23DF 22 D5 2D        SHLD fs_cmdLine
5708   23E2 EB              XCHG
5709   23E3 22 D8 2D        SHLD fs_selfName
5710   23E6 60              MOV H, B
5711   23E7 69              MOV L, C
5712   23E8 22 ED 23        SHLD fs_entry_n+1
5713   23EB               
5714   23EB C9            ret
5715   23EC               ; --- fs_entry -----------------------------------------------------------------
5716   23EC             fs_entry:
5717   23EC             fs_entry_n:
5718   23EC C3 00 00        JMP 0000h
5719   23EF               
5720   23EF C9            ret
5721   23F0               ; --- fs_getsize -----------------------------------------------------------------
5722   23F0             fs_getsize:
5723   23F0 21 00 00      lxi h, 0
5724   23F3 22 28 2E      shld fs_seek_1
5725   23F6 22 2A 2E      shld fs_seek_2
5726   23F9 3E 64         mvi a, 100
5727   23FB C3 CC 26      jmp fs_seek
5728   23FE C9            ret
5729   23FF               ; --- set32 -----------------------------------------------------------------
5730   23FF             set32:
5731   23FF 22 E2 2D      shld set32_2
5732   2402               ; 4 asm {
5733   2402 EB              xchg ; de = set32_2
5734   2403 2A E0 2D        lhld set32_1
5735   2406 1A              ldax d
5736   2407 77              mov m, a
5737   2408 23              inx h
5738   2409 13              inx d
5739   240A 1A              ldax d
5740   240B 77              mov m, a
5741   240C 23              inx h
5742   240D 13              inx d
5743   240E 1A              ldax d
5744   240F 77              mov m, a
5745   2410 23              inx h
5746   2411 13              inx d
5747   2412 1A              ldax d
5748   2413 77              mov m, a
5749   2414               
5750   2414 C9            ret
5751   2415               ; --- div32_16 -----------------------------------------------------------------
5752   2415             div32_16:
5753   2415 22 E6 2D      shld div32_16_2
5754   2418               ; 9 ((ushort*)a)[1] = ((ushort*)a)[1] / b;Сложение с константой 2
5755   2418 2A E4 2D      lhld div32_16_1
5756   241B 23            inx h
5757   241C 23            inx h
5758   241D               ; Сложение с константой 2
5759   241D E5            push h
5760   241E 2A E4 2D      lhld div32_16_1
5761   2421 23            inx h
5762   2422 23            inx h
5763   2423 EB            xchg
5764   2424 2A E6 2D      lhld div32_16_2
5765   2427 EB            xchg
5766   2428 7E            mov a, m
5767   2429 23            inx h
5768   242A 66            mov h, m
5769   242B 6F            mov l, a
5770   242C CD 3C 22      call op_div16
5771   242F D1            pop d
5772   2430 EB            xchg
5773   2431 73            mov m, e
5774   2432 23            inx h
5775   2433 72            mov m, d
5776   2434 2B            dcx h
5777   2435               ; 11 ((uchar*)&tmp)[1] = op_div16_mod;
5778   2435 3A 9F 2D      lda op_div16_mod
5779   2438 32 E9 2D      sta (div32_16_tmp)+(1)
5780   243B               ; 12 ((uchar*)&tmp)[0] = ((uchar*)a)[1];Сложение с константой 1
5781   243B 2A E4 2D      lhld div32_16_1
5782   243E 23            inx h
5783   243F 7E            mov a, m
5784   2440 32 E8 2D      sta (div32_16_tmp)+(0)
5785   2443               ; 13 ((uchar*)a)[1] = tmp / b;Сложение с константой 1
5786   2443 2A E4 2D      lhld div32_16_1
5787   2446 23            inx h
5788   2447 EB            xchg
5789   2448 2A E6 2D      lhld div32_16_2
5790   244B EB            xchg
5791   244C E5            push h
5792   244D 2A E8 2D      lhld div32_16_tmp
5793   2450 CD 3C 22      call op_div16
5794   2453 7D            mov a, l
5795   2454 E1            pop h
5796   2455 77            mov m, a
5797   2456               ; 15 ((uchar*)&tmp)[1] = op_div16_mod;
5798   2456 3A 9F 2D      lda op_div16_mod
5799   2459 32 E9 2D      sta (div32_16_tmp)+(1)
5800   245C               ; 16 ((uchar*)&tmp)[0] = ((uchar*)a)[0];Сложение с константой 0
5801   245C 2A E4 2D      lhld div32_16_1
5802   245F 7E            mov a, m
5803   2460 32 E8 2D      sta (div32_16_tmp)+(0)
5804   2463               ; 17 ((uchar*)a)[0] = tmp / b;Сложение с константой 0
5805   2463 EB            xchg
5806   2464 2A E6 2D      lhld div32_16_2
5807   2467 EB            xchg
5808   2468 E5            push h
5809   2469 2A E8 2D      lhld div32_16_tmp
5810   246C CD 3C 22      call op_div16
5811   246F 7D            mov a, l
5812   2470 E1            pop h
5813   2471 77            mov m, a
5814   2472 C9            ret
5815   2473               ; --- fs_swap -----------------------------------------------------------------
5816   2473             fs_swap:
5817   2473 21 32 2E      lxi h, string13
5818   2476 22 25 2E      shld fs_open0_1
5819   2479 3E 65         mvi a, 101
5820   247B C3 BD 26      jmp fs_open0
5821   247E C9            ret
5822   247F               ; --- add32_16 -----------------------------------------------------------------
5823   247F             add32_16:
5824   247F 22 EC 2D      shld add32_16_2
5825   2482               ; 4 asm {
5826   2482                 ; de = *to
5827   2482 2A EA 2D        lhld add32_16_1
5828   2485 5E              mov e, m
5829   2486 23              inx h
5830   2487 56              mov d, m
5831   2488             
5832   2488                 ; hl = de + from
5833   2488 2A EC 2D        lhld add32_16_2
5834   248B 19              dad d
5835   248C             
5836   248C                 ; *hl = de
5837   248C EB              xchg
5838   248D 2A EA 2D        lhld add32_16_1
5839   2490 73              mov m, e
5840   2491 23              inx h
5841   2492 72              mov m, d     
5842   2493             
5843   2493                 ; …б«Ё ЇҐаҐЇ®«­Ґ­ЁҐ, в® гўҐ«ЁзЁў Ґ¬ ўҐае­Ё© а §ап¤
5844   2493 D0              rnc
5845   2494 23              inx h
5846   2495 34              inr m    
5847   2496             
5848   2496                 ; …б«Ё ЇҐаҐЇ®«­Ґ­ЁҐ, в® гўҐ«ЁзЁў Ґ¬ ўҐае­Ё© а §ап¤
5849   2496 C0              rnz
5850   2497 23              inx h
5851   2498 34              inr m
5852   2499               
5853   2499 C9            ret
5854   249A               ; --- cmp32_32 -----------------------------------------------------------------
5855   249A             cmp32_32:
5856   249A 22 F0 2D      shld cmp32_32_2
5857   249D               ; 4 asm {
5858   249D 2A EE 2D        lhld cmp32_32_1
5859   24A0 23              inx h
5860   24A1 23              inx h
5861   24A2 23              inx h
5862   24A3 EB              xchg
5863   24A4             
5864   24A4 2A F0 2D        lhld cmp32_32_2
5865   24A7 23              inx h
5866   24A8 23              inx h
5867   24A9 23              inx h
5868   24AA               
5869   24AA 1A              ldax d
5870   24AB BE              cmp m
5871   24AC C2 C2 24        jnz cmp32_32_l0
5872   24AF                
5873   24AF 2B              dcx h
5874   24B0 1B              dcx d
5875   24B1 1A              ldax d
5876   24B2 BE              cmp m
5877   24B3 C2 C2 24        jnz cmp32_32_l0
5878   24B6                 
5879   24B6 2B              dcx h
5880   24B7 1B              dcx d
5881   24B8 1A              ldax d
5882   24B9 BE              cmp m
5883   24BA C2 C2 24        jnz cmp32_32_l0
5884   24BD             
5885   24BD 2B              dcx h
5886   24BE 1B              dcx d
5887   24BF 1A              ldax d
5888   24C0 BE              cmp m
5889   24C1 C8              rz
5890   24C2             
5891   24C2             cmp32_32_l0:   
5892   24C2 3F              cmc
5893   24C3 9F              sbb a
5894   24C4 F6 01           ori 1
5895   24C6 C9              ret
5896   24C7               
5897   24C7 C9            ret
5898   24C8               ; --- sub32_32 -----------------------------------------------------------------
5899   24C8             sub32_32:
5900   24C8 22 F4 2D      shld sub32_32_2
5901   24CB               ; 4 asm {
5902   24CB 2A F2 2D        lhld sub32_32_1
5903   24CE EB              xchg
5904   24CF 2A F4 2D        lhld sub32_32_2
5905   24D2               
5906   24D2 1A              ldax d
5907   24D3 96              sub m
5908   24D4 12              stax d
5909   24D5                
5910   24D5 23              inx h
5911   24D6 13              inx d
5912   24D7 1A              ldax d
5913   24D8 9E              sbb m
5914   24D9 12              stax d
5915   24DA                 
5916   24DA 23              inx h
5917   24DB 13              inx d
5918   24DC 1A              ldax d
5919   24DD 9E              sbb m
5920   24DE 12              stax d
5921   24DF             
5922   24DF 23              inx h
5923   24E0 13              inx d
5924   24E1 1A              ldax d
5925   24E2 9E              sbb m
5926   24E3 12              stax d
5927   24E4               
5928   24E4 C9            ret
5929   24E5               ; --- fs_delete -----------------------------------------------------------------
5930   24E5             fs_delete:
5931   24E5 22 F6 2D      shld fs_delete_1
5932   24E8               ; 5 return fs_open0(name, O_DELETE);
5933   24E8 22 25 2E      shld fs_open0_1
5934   24EB 3E 64         mvi a, 100
5935   24ED C3 BD 26      jmp fs_open0
5936   24F0 C9            ret
5937   24F1               ; --- fs_mkdir -----------------------------------------------------------------
5938   24F1             fs_mkdir:
5939   24F1 22 F8 2D      shld fs_mkdir_1
5940   24F4               ; 5 return fs_open0(name, O_MKDIR);
5941   24F4 22 25 2E      shld fs_open0_1
5942   24F7 3E 02         mvi a, 2
5943   24F9 C3 BD 26      jmp fs_open0
5944   24FC C9            ret
5945   24FD               ; --- fs_move -----------------------------------------------------------------
5946   24FD             fs_move:
5947   24FD 22 FC 2D      shld fs_move_2
5948   2500               ; 4 asm {
5949   2500 C5              PUSH B
5950   2501 EB              XCHG
5951   2502 2A FA 2D        LHLD fs_move_1
5952   2505 3E 06           MVI  A, 6
5953   2507 CD EC 23        CALL fs_entry ; HL-из, DE-в / A-код ошибки
5954   250A C1              POP  B
5955   250B               
5956   250B C9            ret
5957   250C               ; --- fs_getfree -----------------------------------------------------------------
5958   250C             fs_getfree:
5959   250C 21 00 00      lxi h, 0
5960   250F 22 28 2E      shld fs_seek_1
5961   2512 22 2A 2E      shld fs_seek_2
5962   2515 3E 66         mvi a, 102
5963   2517 C3 CC 26      jmp fs_seek
5964   251A C9            ret
5965   251B               ; --- fs_gettotal -----------------------------------------------------------------
5966   251B             fs_gettotal:
5967   251B 21 00 00      lxi h, 0
5968   251E 22 28 2E      shld fs_seek_1
5969   2521 22 2A 2E      shld fs_seek_2
5970   2524 3E 65         mvi a, 101
5971   2526 C3 CC 26      jmp fs_seek
5972   2529 C9            ret
5973   252A               ; --- apogeyScreen2a -----------------------------------------------------------------
5974   252A             apogeyScreen2a:
5975   252A C5            push b
5976   252B               ; 3 memset((uchar*)MEM_ADDR, 0, (HEIGHT)*(BPL)+(TOP_INVISIBLE)*2+2); 
5977   252B 21 D0 E1      lxi h, 57808
5978   252E 22 A1 2D      shld memset_1
5979   2531 AF            xra a
5980   2532 32 A3 2D      sta memset_2
5981   2535 21 1D 09      lxi h, 2333
5982   2538 CD 77 22      call memset
5983   253B               ; 4 for(v=(uchar*)(MEM_ADDR)-1, i=TOP_INVISIBLE; i; --i) 
5984   253B 01 CF E1      lxi b, 57807
5985   253E 3E 03         mvi a, 3
5986   2540 32 FE 2D      sta apogeyScreen2a_i
5987   2543             l364:
5988   2543               ; convertToConfition
5989   2543 3A FE 2D      lda apogeyScreen2a_i
5990   2546 B7            ora a
5991   2547 CA 56 25      jz l365
5992   254A               ; 5 v+=2, *v = 0xF1; Сложение BC с константой 2
5993   254A 03            inx b
5994   254B 03            inx b
5995   254C 3E F1         mvi a, 241
5996   254E 02            stax b
5997   254F             l366:
5998   254F 21 FE 2D      lxi h, apogeyScreen2a_i
5999   2552 35            dcr m
6000   2553 C3 43 25      jmp l364
6001   2556             l365:
6002   2556               ; 6 if(FILL_EOL) 7 for(i = HEIGHT; i; --i) 
6003   2556 3E 1F         mvi a, 31
6004   2558 32 FE 2D      sta apogeyScreen2a_i
6005   255B             l368:
6006   255B               ; convertToConfition
6007   255B 3A FE 2D      lda apogeyScreen2a_i
6008   255E B7            ora a
6009   255F CA 72 25      jz l369
6010   2562               ; 8 v += (BPL), *v = 0xF1; Сложение с BC
6011   2562 21 4B 00      lxi h, 75
6012   2565 09            dad b
6013   2566 44            mov b, h
6014   2567 4D            mov c, l
6015   2568 3E F1         mvi a, 241
6016   256A 02            stax b
6017   256B             l370:
6018   256B 21 FE 2D      lxi h, apogeyScreen2a_i
6019   256E 35            dcr m
6020   256F C3 5B 25      jmp l368
6021   2572             l369:
6022   2572               ; 9 ((uchar*)MEM_ADDR)[(HEIGHT)*(BPL)+(TOP_INVISIBLE)*2+1] = 0xFF; 
6023   2572 21 EC EA      lxi h, 60140
6024   2575 36 FF         mvi m, 255
6025   2577               ; 10 apogeyVideoMem = (uchar*)(MEM_ADDR) + (TOP_INVISIBLE)*2 + 9; 
6026   2577 21 DF E1      lxi h, 57823
6027   257A 22 07 2E      shld apogeyVideoMem
6028   257D               ; 11 apogeyVideoBpl = (BPL); 
6029   257D 3E 4B         mvi a, 75
6030   257F 32 09 2E      sta apogeyVideoBpl
6031   2582               ; 1 ((uchar*)0xEF00)
6032   2582 21 01 EF      lxi h, 61185
6033   2585 36 00         mvi m, 0
6034   2587               ; 1 ((uchar*)0xEF00)
6035   2587 2D            dcr l
6036   2588 36 4D         mvi m, 77
6037   258A               ; 1 ((uchar*)0xEF00)
6038   258A 36 64         mvi m, 100
6039   258C               ; 1 ((uchar*)0xEF00)
6040   258C 36 77         mvi m, 119
6041   258E               ; 1 ((uchar*)0xEF00)
6042   258E 36 53         mvi m, 83
6043   2590               ; 1 ((uchar*)0xEF00)
6044   2590 2C            inr l
6045   2591 36 23         mvi m, 35
6046   2593               ; 7 while((VG75[1] & 0x20) == 0); 
6047   2593             l377:
6048   2593 3A 01 EF      lda 61185
6049   2596 E6 20         ani 32
6050   2598 C2 9E 25      jnz l378
6051   259B C3 93 25      jmp l377
6052   259E             l378:
6053   259E               ; 8 while((VG75[1] & 0x20) == 0); 
6054   259E             l379:
6055   259E 3A 01 EF      lda 61185
6056   25A1 E6 20         ani 32
6057   25A3 C2 A9 25      jnz l380
6058   25A6 C3 9E 25      jmp l379
6059   25A9             l380:
6060   25A9               ; 1 ((uchar*)0xF000)
6061   25A9 21 08 F0      lxi h, 61448
6062   25AC 36 80         mvi m, 128
6063   25AE               ; 1 ((uchar*)0xF000)
6064   25AE 2E 04         mvi l, 4
6065   25B0 36 D0         mvi m, 208
6066   25B2               ; 1 ((uchar*)0xF000)
6067   25B2 36 E1         mvi m, 225
6068   25B4               ; 1 ((uchar*)0xF000)
6069   25B4 2C            inr l
6070   25B5 36 1C         mvi m, 28
6071   25B7               ; 1 ((uchar*)0xF000)
6072   25B7 36 49         mvi m, 73
6073   25B9               ; 1 ((uchar*)0xF000)
6074   25B9 2E 08         mvi l, 8
6075   25BB 36 A4         mvi m, 164
6076   25BD               ; 15 if(CHAR_GEN) asm { ei } else asm { di } 15 asm { ei } else asm { di } 15 asm { di } 
6077   25BD F3           di 
6078   25BE C1            pop b
6079   25BF C9            ret
6080   25C0               ; --- directCursor -----------------------------------------------------------------
6081   25C0             directCursor:
6082   25C0 32 00 2E      sta directCursor_2
6083   25C3               ; 1 ((uchar*)0xEF00)
6084   25C3 21 01 EF      lxi h, 61185
6085   25C6 36 80         mvi m, 128
6086   25C8               ; 1 ((uchar*)0xEF00)
6087   25C8 3A FF 2D      lda directCursor_1
6088   25CB 32 00 EF      sta 61184
6089   25CE               ; 1 ((uchar*)0xEF00)
6090   25CE 3A 00 2E      lda directCursor_2
6091   25D1 32 00 EF      sta 61184
6092   25D4 C9            ret
6093   25D5               ; --- charAddr -----------------------------------------------------------------
6094   25D5             charAddr:
6095   25D5 32 02 2E      sta charAddr_2
6096   25D8               ; 4 return apogeyVideoMem + y * apogeyVideoBpl + x;
6097   25D8 21 09 2E      lxi h, apogeyVideoBpl
6098   25DB 56            mov d, m
6099   25DC CD ED 20      call op_mul
6100   25DF               ; Сложение
6101   25DF EB            xchg
6102   25E0 2A 07 2E      lhld apogeyVideoMem
6103   25E3 19            dad d
6104   25E4               ; Сложение
6105   25E4 EB            xchg
6106   25E5 2A 01 2E      lhld charAddr_1
6107   25E8 26 00         mvi h, 0
6108   25EA 19            dad d
6109   25EB C9            ret
6110   25EC               ; --- print2 -----------------------------------------------------------------
6111   25EC             print2:
6112   25EC 22 05 2E      shld print2_2
6113   25EF               ; 4 asm {
6114   25EF EB              xchg
6115   25F0 2A 03 2E        lhld print2_1
6116   25F3             print2_loop:
6117   25F3 1A              ldax d
6118   25F4 B7              ora  a
6119   25F5 C8              rz
6120   25F6 E6 7F           ani  07Fh
6121   25F8 77              mov  m, a
6122   25F9 23              inx  h
6123   25FA 13              inx  d
6124   25FB C3 F3 25        jmp  print2_loop
6125   25FE               
6126   25FE C9            ret
6127   25FF               ; --- op_mod -----------------------------------------------------------------
6128   25FF             op_mod:
6129   25FF C5              PUSH B
6130   2600 5F              MOV E, A
6131   2601 21 08 00        LXI H, 8
6132   2604 0E 00           MVI C, 0
6133   2606             op_mod_1:
6134   2606 7B              MOV A,E
6135   2607 17              RAL
6136   2608 5F              MOV E,A
6137   2609 79              MOV A,C
6138   260A 17              RAL
6139   260B 92              SUB D
6140   260C D2 10 26        JNC op_mod_2
6141   260F 82              ADD D
6142   2610             op_mod_2:
6143   2610 4F              MOV C,A ; Остаток в С
6144   2611 3F              CMC
6145   2612 7C              MOV A,H
6146   2613 17              RAL
6147   2614 67              MOV H,A ; Частное в Н
6148   2615 2D              DCR L
6149   2616 C2 06 26        JNZ op_mod_1
6150   2619 79              MOV A, C
6151   261A C1              POP B
6152   261B               
6153   261B C9            ret
6154   261C               ; --- print -----------------------------------------------------------------
6155   261C             print:
6156   261C 22 0C 2E      shld print_3
6157   261F               ; 4 print2(charAddr(x, y), text);
6158   261F 3A 0A 2E      lda print_1
6159   2622 32 01 2E      sta charAddr_1
6160   2625 3A 0B 2E      lda print_2
6161   2628 CD D5 25      call charAddr
6162   262B 22 03 2E      shld print2_1
6163   262E 2A 0C 2E      lhld print_3
6164   2631 C3 EC 25      jmp print2
6165   2634             printn:
6166   2634 22 11 2E      shld printn_4
6167   2637               ; 4 print2n(charAddr(x, y), len, text);
6168   2637 3A 0E 2E      lda printn_1
6169   263A 32 01 2E      sta charAddr_1
6170   263D 3A 0F 2E      lda printn_2
6171   2640 CD D5 25      call charAddr
6172   2643 22 13 2E      shld print2n_1
6173   2646 3A 10 2E      lda printn_3
6174   2649 32 15 2E      sta print2n_2
6175   264C 2A 11 2E      lhld printn_4
6176   264F C3 52 26      jmp print2n
6177   2652             print2n:
6178   2652 22 16 2E      shld print2n_3
6179   2655               ; 4 asm {
6180   2655 C5              push b
6181   2656 EB              xchg
6182   2657 2A 13 2E        lhld print2n_1
6183   265A 3A 15 2E        lda print2n_2
6184   265D 47              mov b, a
6185   265E             print2n_loop:
6186   265E 1A              ldax d
6187   265F B7              ora  a
6188   2660 CA 6C 26        jz   print2n_ret
6189   2663 E6 7F           ani  07Fh
6190   2665 77              mov  m, a
6191   2666 23              inx  h
6192   2667 13              inx  d
6193   2668 05              dcr b
6194   2669 C2 5E 26        jnz  print2n_loop 
6195   266C             print2n_ret:
6196   266C C1              pop b
6197   266D               
6198   266D C9            ret
6199   266E               ; --- print2cn -----------------------------------------------------------------
6200   266E             print2cn:
6201   266E 32 1B 2E      sta print2cn_3
6202   2671               ; 4 asm {
6203   2671 E6 7F           ani  07Fh
6204   2673 57              mov  d, a
6205   2674 3A 1A 2E        lda  print2cn_2    
6206   2677 2A 18 2E        lhld print2cn_1
6207   267A             print2cn_loop:
6208   267A 72              mov  m, d
6209   267B 23              inx  h
6210   267C 3D              dcr  a
6211   267D C2 7A 26        jnz  print2cn_loop
6212   2680               
6213   2680 C9            ret
6214   2681               ; --- printm -----------------------------------------------------------------
6215   2681             printm:
6216   2681 22 1F 2E      shld printm_4
6217   2684               ; 4 print2m(charAddr(x, y), len, text);
6218   2684 3A 1C 2E      lda printm_1
6219   2687 32 01 2E      sta charAddr_1
6220   268A 3A 1D 2E      lda printm_2
6221   268D CD D5 25      call charAddr
6222   2690 22 2D 2E      shld print2m_1
6223   2693 3A 1E 2E      lda printm_3
6224   2696 32 2F 2E      sta print2m_2
6225   2699 2A 1F 2E      lhld printm_4
6226   269C C3 E6 26      jmp print2m
6227   269F             printcn:
6228   269F 32 24 2E      sta printcn_4
6229   26A2               ; 4 print2cn(charAddr(x, y),len, c);
6230   26A2 3A 21 2E      lda printcn_1
6231   26A5 32 01 2E      sta charAddr_1
6232   26A8 3A 22 2E      lda printcn_2
6233   26AB CD D5 25      call charAddr
6234   26AE 22 18 2E      shld print2cn_1
6235   26B1 3A 23 2E      lda printcn_3
6236   26B4 32 1A 2E      sta print2cn_2
6237   26B7 3A 24 2E      lda printcn_4
6238   26BA C3 6E 26      jmp print2cn
6239   26BD             fs_open0:
6240   26BD 32 27 2E      sta fs_open0_2
6241   26C0               ; 5 asm {      
6242   26C0                   
6243   26C0 C5              PUSH B
6244   26C1                 ; a = fs_open0_2
6245   26C1 57              MOV  D, A 
6246   26C2 2A 25 2E        LHLD fs_open0_1
6247   26C5 3E 02           MVI  A, 2
6248   26C7 CD EC 23        CALL fs_entry
6249   26CA C1              POP  B
6250   26CB               
6251   26CB C9            ret
6252   26CC               ; --- fs_seek -----------------------------------------------------------------
6253   26CC             fs_seek:
6254   26CC 32 2C 2E      sta fs_seek_3
6255   26CF               ; 4 asm {
6256   26CF C5              PUSH B
6257   26D0                 ; a = fs_seek_3
6258   26D0 47              MOV  B, A
6259   26D1 2A 2A 2E        LHLD fs_seek_2
6260   26D4 EB              XCHG
6261   26D5 2A 28 2E        LHLD fs_seek_1
6262   26D8 3E 03           MVI  A, 3
6263   26DA CD EC 23        CALL fs_entry ; B-режим, DE:HL-имя файла / A-код ошибки, DE:HL-позиция
6264   26DD 22 DB 2D        SHLD fs_low
6265   26E0 EB              XCHG
6266   26E1 22 DD 2D        SHLD fs_high
6267   26E4 C1              POP  B
6268   26E5               
6269   26E5 C9            ret
6270   26E6               ; --- print2m -----------------------------------------------------------------
6271   26E6             print2m:
6272   26E6 22 30 2E      shld print2m_3
6273   26E9               ; 4 asm {
6274   26E9 C5              push b
6275   26EA EB              xchg
6276   26EB 2A 2D 2E        lhld print2m_1
6277   26EE 3A 2F 2E        lda print2m_2
6278   26F1 47              mov b, a
6279   26F2             print2m_loop:
6280   26F2 1A              ldax d
6281   26F3 B7              ora  a
6282   26F4 CA F8 26        jz   print2m_ret
6283   26F7 13              inx  d
6284   26F8             print2m_ret:
6285   26F8 E6 7F           ani  07Fh
6286   26FA 77              mov  m, a
6287   26FB 23              inx  h
6288   26FC 05              dcr b
6289   26FD C2 F2 26        jnz  print2m_loop 
6290   2700 C1              pop b
6291   2701               
6292   2701 C9            ret
6293   2702             editorApp:
6294   2702 42 4F 4F 54   .db 66,79,79,84,47,69,68,73,84,46,82,75
6294   2706 2F 45 44 49 
6294   270A 54 2E 52 4B 
6295   270E 00            .db 0
6296   270F             
6297   270F             viewerApp:
6298   270F 42 4F 4F 54   .db 66,79,79,84,47,86,73,69,87,46,82,75
6298   2713 2F 56 49 45 
6298   2717 57 2E 52 4B 
6299   271B 00            .db 0
6300   271C             
6301   271C             panelA:
6302   271C              .ds 266
6303   2826             panelB:
6304   2826              .ds 266
6305   2930             cmdline:
6306   2930              .ds 256
6307   2A30             maxFiles:
6308   2A30              .ds 2
6309   2A32             parentDir:
6310   2A32 2E           .db 46
6311   2A33 2E           .db 46
6312   2A34 20           .db 32
6313   2A35 20           .db 32
6314   2A36 20           .db 32
6315   2A37 20           .db 32
6316   2A38 20           .db 32
6317   2A39 20           .db 32
6318   2A3A 20           .db 32
6319   2A3B 20           .db 32
6320   2A3C 20           .db 32
6321   2A3D 10           .db 16
6322   2A3E 00           .db 0
6323   2A3F 00           .db 0
6324   2A40 00           .db 0
6325   2A41 00           .db 0
6326   2A42 00           .db 0
6327   2A43 00           .db 0
6328   2A44 00           .db 0
6329   2A45 00           .db 0
6330   2A46             
6331   2A46             getSel_n:
6332   2A46              .ds 2
6333   2A48             getSelNoBack_f:
6334   2A48              .ds 2
6335   2A4A             drawFileInfo_f:
6336   2A4A              .ds 2
6337   2A4C             drawFileInfo_buf:
6338   2A4C              .ds 18
6339   2A5E             drawFilesCount_total:
6340   2A5E              .ds 4
6341   2A62             drawFilesCount_i:
6342   2A62              .ds 2
6343   2A64             drawFilesCount_filesCnt:
6344   2A64              .ds 2
6345   2A66             drawFilesCount_p:
6346   2A66              .ds 2
6347   2A68             processInput_1:
6348   2A68              .ds 1
6349   2A69             drawError_1:
6350   2A69              .ds 2
6351   2A6B             drawError_2:
6352   2A6B              .ds 1
6353   2A6C             drawError_buf:
6354   2A6C              .ds 4
6355   2A70             inputBox_1:
6356   2A70              .ds 2
6357   2A72             confirm_1:
6358   2A72              .ds 2
6359   2A74             confirm_2:
6360   2A74              .ds 2
6361   2A76             unpackName_1:
6362   2A76              .ds 2
6363   2A78             unpackName_2:
6364   2A78              .ds 2
6365   2A7A             catPathAndUnpack_1:
6366   2A7A              .ds 2
6367   2A7C             catPathAndUnpack_2:
6368   2A7C              .ds 2
6369   2A7E             catPathAndUnpack_len:
6370   2A7E              .ds 2
6371   2A80             nextSelectedCnt:
6372   2A80              .ds 2
6373   2A82             nextSelectedFile:
6374   2A82 84 2A        .dw $+2
6375   2A84              .ds 20
6376   2A98             getFirstSelected_1:
6377   2A98              .ds 2
6378   2A9A             getFirstSelected_type:
6379   2A9A              .ds 1
6380   2A9B             getNextSelected_1:
6381   2A9B              .ds 2
6382   2A9D             cmpFileInfo_1:
6383   2A9D              .ds 2
6384   2A9F             cmpFileInfo_2:
6385   2A9F              .ds 2
6386   2AA1             sort_1:
6387   2AA1              .ds 2
6388   2AA3             sort_2:
6389   2AA3              .ds 2
6390   2AA5             sort_i:
6391   2AA5              .ds 2
6392   2AA7             sort_j:
6393   2AA7              .ds 2
6394   2AA9             sort_x:
6395   2AA9              .ds 2
6396   2AAB             sort_st_:
6397   2AAB              .ds 128
6398   2B2B             sort_st:
6399   2B2B              .ds 2
6400   2B2D             sort_stc:
6401   2B2D              .ds 1
6402   2B2E             packName_1:
6403   2B2E              .ds 2
6404   2B30             packName_2:
6405   2B30              .ds 2
6406   2B32             packName_i:
6407   2B32              .ds 1
6408   2B33             getFiles_f:
6409   2B33              .ds 2
6410   2B35             getFiles_st:
6411   2B35              .ds 2
6412   2B37             getFiles_n:
6413   2B37              .ds 2
6414   2B39             getFiles_i:
6415   2B39              .ds 1
6416   2B3A             getFiles_j:
6417   2B3A              .ds 2
6418   2B3C             getFiles_dir:
6419   2B3C              .ds 20
6420   2B50             selectFile_1:
6421   2B50              .ds 2
6422   2B52             selectFile_f:
6423   2B52              .ds 2
6424   2B54             reloadFiles_1:
6425   2B54              .ds 2
6426   2B56             absolutePath_1:
6427   2B56              .ds 2
6428   2B58             absolutePath_l:
6429   2B58              .ds 2
6430   2B5A             getName_1:
6431   2B5A              .ds 2
6432   2B5C             getName_p:
6433   2B5C              .ds 2
6434   2B5E             dropPathInt_1:
6435   2B5E              .ds 2
6436   2B60             dropPathInt_2:
6437   2B60              .ds 2
6438   2B62             dropPathInt_p:
6439   2B62              .ds 2
6440   2B64             dropPath_buf:
6441   2B64              .ds 11
6442   2B6F             cursor_right_w:
6443   2B6F              .ds 2
6444   2B71             dupFiles_1:
6445   2B71              .ds 1
6446   2B72             loadState_i:
6447   2B72              .ds 2
6448   2B74             run_1:
6449   2B74              .ds 2
6450   2B76             run_2:
6451   2B76              .ds 2
6452   2B78             cmd_editview_1:
6453   2B78              .ds 2
6454   2B7A             cmd_editview_f:
6455   2B7A              .ds 2
6456   2B7C             cmd_enter_d:
6457   2B7C              .ds 2
6458   2B7E             cmd_enter_i:
6459   2B7E              .ds 1
6460   2B7F             cmd_enter_f:
6461   2B7F              .ds 2
6462   2B81             cmd_enter_l:
6463   2B81              .ds 2
6464   2B83             cmd_enter_o:
6465   2B83              .ds 2
6466   2B85             cmd_inverseOne_f:
6467   2B85              .ds 2
6468   2B87             cmd_inverseAll_f:
6469   2B87              .ds 2
6470   2B89             cmd_inverseAll_i:
6471   2B89              .ds 2
6472   2B8B             cmd_copyFile_1:
6473   2B8B              .ds 2
6474   2B8D             cmd_copyFile_2:
6475   2B8D              .ds 2
6476   2B8F             cmd_copyFile_buf:
6477   2B8F              .ds 16
6478   2B9F             cmd_copyFile_e:
6479   2B9F              .ds 1
6480   2BA0             cmd_copyFile_progress_i:
6481   2BA0              .ds 1
6482   2BA1             cmd_copyFile_progress:
6483   2BA1              .ds 4
6484   2BA5             cmd_copyFile_progress_x:
6485   2BA5              .ds 4
6486   2BA9             cmd_copyFile_progress_step:
6487   2BA9              .ds 4
6488   2BAD             applyMask1_1:
6489   2BAD              .ds 2
6490   2BAF             applyMask1_2:
6491   2BAF              .ds 2
6492   2BB1             applyMask1_3:
6493   2BB1              .ds 1
6494   2BB2             cmd_copyFolder_1:
6495   2BB2              .ds 2
6496   2BB4             cmd_copyFolder_2:
6497   2BB4              .ds 2
6498   2BB6             cmd_copyFolder_e:
6499   2BB6              .ds 1
6500   2BB7             cmd_copyFolder_i:
6501   2BB7              .ds 2
6502   2BB9             cmd_copyFolder_level:
6503   2BB9              .ds 1
6504   2BBA             cmd_copyFolder_stack:
6505   2BBA              .ds 16
6506   2BCA             cmd_copyFolder_f:
6507   2BCA              .ds 2
6508   2BCC             applyMask_1:
6509   2BCC              .ds 2
6510   2BCE             applyMask_2:
6511   2BCE              .ds 2
6512   2BD0             cmd_copymove1_1:
6513   2BD0              .ds 1
6514   2BD1             cmd_copymove1_2:
6515   2BD1              .ds 1
6516   2BD2             cmd_copymove1_name:
6517   2BD2              .ds 2
6518   2BD4             cmd_copymove1_e:
6519   2BD4              .ds 1
6520   2BD5             cmd_copymove1_f:
6521   2BD5              .ds 2
6522   2BD7             cmd_copymove1_sourceFile:
6523   2BD7              .ds 256
6524   2CD7             cmd_copymove1_mask:
6525   2CD7              .ds 11
6526   2CE2             cmd_copymove1_forMask:
6527   2CE2              .ds 11
6528   2CED             cmd_copymove1_type:
6529   2CED              .ds 1
6530   2CEE             cmd_copymove1_i:
6531   2CEE              .ds 2
6532   2CF0             cmd_copymove_1:
6533   2CF0              .ds 1
6534   2CF1             cmd_copymove_2:
6535   2CF1              .ds 1
6536   2CF2             cmd_new1_1:
6537   2CF2              .ds 1
6538   2CF3             cmd_new_1:
6539   2CF3              .ds 1
6540   2CF4             cmd_freespace_1_1:
6541   2CF4              .ds 1
6542   2CF5             cmd_freespace_1_2:
6543   2CF5              .ds 2
6544   2CF7             cmd_freespace_1_buf:
6545   2CF7              .ds 17
6546   2D08             cmd_freespace_e:
6547   2D08              .ds 1
6548   2D09             cmd_deleteFolder_level:
6549   2D09              .ds 1
6550   2D0A             cmd_deleteFolder_e:
6551   2D0A              .ds 1
6552   2D0B             cmd_deleteFolder_p:
6553   2D0B              .ds 2
6554   2D0D             cmd_deleteFolder_i:
6555   2D0D              .ds 2
6556   2D0F             cmd_delete_e:
6557   2D0F              .ds 1
6558   2D10             cmd_delete_needRefresh2:
6559   2D10              .ds 1
6560   2D11             compareMask1_1:
6561   2D11              .ds 2
6562   2D13             compareMask1_2:
6563   2D13              .ds 2
6564   2D15             compareMask1_3:
6565   2D15              .ds 1
6566   2D16             compareMask_1:
6567   2D16              .ds 2
6568   2D18             compareMask_2:
6569   2D18              .ds 2
6570   2D1A             cmd_sel_1:
6571   2D1A              .ds 1
6572   2D1B             cmd_sel_f:
6573   2D1B              .ds 2
6574   2D1D             cmd_sel_i:
6575   2D1D              .ds 2
6576   2D1F             cmd_sel_buf:
6577   2D1F              .ds 11
6578   2D2A             activePanel:
6579   2D2A              .ds 1
6580   2D2B             fileCursorAddr:
6581   2D2B 2D 2D        .dw $+2
6582   2D2D              .ds 1
6583   2D2E             showTextCursor_1:
6584   2D2E              .ds 1
6585   2D2F             showTextCursor_2:
6586   2D2F              .ds 1
6587   2D30             vLine_1:
6588   2D30              .ds 2
6589   2D32             vLine_2:
6590   2D32              .ds 1
6591   2D33             vLine_3:
6592   2D33              .ds 1
6593   2D34             drawRect_1:
6594   2D34              .ds 2
6595   2D36             drawRect_2:
6596   2D36              .ds 1
6597   2D37             drawRect_3:
6598   2D37              .ds 1
6599   2D38             drawRect_i:
6600   2D38              .ds 1
6601   2D39             fillRect_1:
6602   2D39              .ds 2
6603   2D3B             fillRect_2:
6604   2D3B              .ds 1
6605   2D3C             fillRect_3:
6606   2D3C              .ds 1
6607   2D3D             fillRect_4:
6608   2D3D              .ds 1
6609   2D3E             drawFilesCountInt_1:
6610   2D3E              .ds 2
6611   2D40             drawFilesCountInt_2:
6612   2D40              .ds 2
6613   2D42             drawFilesCountInt_v:
6614   2D42              .ds 1
6615   2D43             drawFilesCountInt_a:
6616   2D43              .ds 2
6617   2D45             drawPanel_1:
6618   2D45              .ds 2
6619   2D47             drawPanelTitle_1:
6620   2D47              .ds 1
6621   2D48             drawPanelTitle_p:
6622   2D48              .ds 2
6623   2D4A             drawPanelTitle_l:
6624   2D4A              .ds 2
6625   2D4C             drawPanelTitle_x:
6626   2D4C              .ds 1
6627   2D4D             drawFile2_1:
6628   2D4D              .ds 2
6629   2D4F             drawFile2_2:
6630   2D4F              .ds 2
6631   2D51             drawColumn_1:
6632   2D51              .ds 1
6633   2D52             drawColumn_a:
6634   2D52              .ds 2
6635   2D54             drawColumn_y:
6636   2D54              .ds 1
6637   2D55             drawColumn_f:
6638   2D55              .ds 2
6639   2D57             drawFile_1:
6640   2D57              .ds 1
6641   2D58             drawFile_2:
6642   2D58              .ds 1
6643   2D59             drawFile_3:
6644   2D59              .ds 2
6645   2D5B             drawFileInfo1_1:
6646   2D5B              .ds 2
6647   2D5D             drawFileInfo2_1:
6648   2D5D              .ds 2
6649   2D5F             drawCmdLineWithPath_l:
6650   2D5F              .ds 2
6651   2D61             drawCmdLineWithPath_old:
6652   2D61              .ds 2
6653   2D63             drawWindow_1:
6654   2D63              .ds 2
6655   2D65             drawWindowText_1:
6656   2D65              .ds 1
6657   2D66             drawWindowText_2:
6658   2D66              .ds 1
6659   2D67             drawWindowText_3:
6660   2D67              .ds 2
6661   2D69             drawWindowProgress_1:
6662   2D69              .ds 1
6663   2D6A             drawWindowProgress_2:
6664   2D6A              .ds 1
6665   2D6B             drawWindowProgress_3:
6666   2D6B              .ds 1
6667   2D6C             drawWindowProgress_4:
6668   2D6C              .ds 1
6669   2D6D             drawInput_1:
6670   2D6D              .ds 1
6671   2D6E             drawInput_2:
6672   2D6E              .ds 1
6673   2D6F             drawInput_3:
6674   2D6F              .ds 1
6675   2D70             drawInput_c1:
6676   2D70              .ds 2
6677   2D72             drawInput_old:
6678   2D72              .ds 2
6679   2D74             drawInput_cmdline_offset:
6680   2D74              .ds 2
6681   2D76             drawInput_cmdline_pos:
6682   2D76              .ds 2
6683   2D78             drawWindowInput_1:
6684   2D78              .ds 1
6685   2D79             drawWindowInput_2:
6686   2D79              .ds 1
6687   2D7A             drawWindowInput_3:
6688   2D7A              .ds 1
6689   2D7B             memswap_1:
6690   2D7B              .ds 2
6691   2D7D             memswap_2:
6692   2D7D              .ds 2
6693   2D7F             memswap_3:
6694   2D7F              .ds 2
6695   2D81             i2s32_1:
6696   2D81              .ds 2
6697   2D83             i2s32_2:
6698   2D83              .ds 2
6699   2D85             i2s32_3:
6700   2D85              .ds 2
6701   2D87             i2s32_4:
6702   2D87              .ds 1
6703   2D88             i2s32_v:
6704   2D88              .ds 4
6705   2D8C             i2s_1:
6706   2D8C              .ds 2
6707   2D8E             i2s_2:
6708   2D8E              .ds 2
6709   2D90             i2s_3:
6710   2D90              .ds 2
6711   2D92             i2s_4:
6712   2D92              .ds 1
6713   2D93             add32_32_1:
6714   2D93              .ds 2
6715   2D95             add32_32_2:
6716   2D95              .ds 2
6717   2D97             strlen_1:
6718   2D97              .ds 2
6719   2D99             memcmp_1:
6720   2D99              .ds 2
6721   2D9B             memcmp_2:
6722   2D9B              .ds 2
6723   2D9D             memcmp_3:
6724   2D9D              .ds 2
6725   2D9F             op_div16_mod:
6726   2D9F              .ds 2
6727   2DA1             memset_1:
6728   2DA1              .ds 2
6729   2DA3             memset_2:
6730   2DA3              .ds 1
6731   2DA4             memset_3:
6732   2DA4              .ds 2
6733   2DA6             memcpy_1:
6734   2DA6              .ds 2
6735   2DA8             memcpy_2:
6736   2DA8              .ds 2
6737   2DAA             memcpy_3:
6738   2DAA              .ds 2
6739   2DAC             fs_findfirst_1:
6740   2DAC              .ds 2
6741   2DAE             fs_findfirst_2:
6742   2DAE              .ds 2
6743   2DB0             fs_findfirst_3:
6744   2DB0              .ds 2
6745   2DB2             strcpy_1:
6746   2DB2              .ds 2
6747   2DB4             strcpy_2:
6748   2DB4              .ds 2
6749   2DB6             memcpy_back_1:
6750   2DB6              .ds 2
6751   2DB8             memcpy_back_2:
6752   2DB8              .ds 2
6753   2DBA             memcpy_back_3:
6754   2DBA              .ds 2
6755   2DBC             strchr_1:
6756   2DBC              .ds 2
6757   2DBE             strchr_2:
6758   2DBE              .ds 1
6759   2DBF             strcmp_1:
6760   2DBF              .ds 2
6761   2DC1             strcmp_2:
6762   2DC1              .ds 2
6763   2DC3             strcmp_a:
6764   2DC3              .ds 1
6765   2DC4             strcmp_b:
6766   2DC4              .ds 1
6767   2DC5             fs_open_1:
6768   2DC5              .ds 2
6769   2DC7             fs_read_1:
6770   2DC7              .ds 2
6771   2DC9             fs_read_2:
6772   2DC9              .ds 2
6773   2DCB             fs_create_1:
6774   2DCB              .ds 2
6775   2DCD             fs_write_1:
6776   2DCD              .ds 2
6777   2DCF             fs_write_2:
6778   2DCF              .ds 2
6779   2DD1             fs_exec_1:
6780   2DD1              .ds 2
6781   2DD3             fs_exec_2:
6782   2DD3              .ds 2
6783   2DD5             fs_cmdLine:
6784   2DD5 D7 2D        .dw $+2
6785   2DD7              .ds 1
6786   2DD8             fs_selfName:
6787   2DD8 DA 2D        .dw $+2
6788   2DDA              .ds 1
6789   2DDB             fs_low:
6790   2DDB              .ds 2
6791   2DDD             fs_high:
6792   2DDD              .ds 2
6793   2DDF             fs_addr:
6794   2DDF              .ds 1
6795   2DE0             set32_1:
6796   2DE0              .ds 2
6797   2DE2             set32_2:
6798   2DE2              .ds 2
6799   2DE4             div32_16_1:
6800   2DE4              .ds 2
6801   2DE6             div32_16_2:
6802   2DE6              .ds 2
6803   2DE8             div32_16_tmp:
6804   2DE8              .ds 2
6805   2DEA             add32_16_1:
6806   2DEA              .ds 2
6807   2DEC             add32_16_2:
6808   2DEC              .ds 2
6809   2DEE             cmp32_32_1:
6810   2DEE              .ds 2
6811   2DF0             cmp32_32_2:
6812   2DF0              .ds 2
6813   2DF2             sub32_32_1:
6814   2DF2              .ds 2
6815   2DF4             sub32_32_2:
6816   2DF4              .ds 2
6817   2DF6             fs_delete_1:
6818   2DF6              .ds 2
6819   2DF8             fs_mkdir_1:
6820   2DF8              .ds 2
6821   2DFA             fs_move_1:
6822   2DFA              .ds 2
6823   2DFC             fs_move_2:
6824   2DFC              .ds 2
6825   2DFE             apogeyScreen2a_i:
6826   2DFE              .ds 1
6827   2DFF             directCursor_1:
6828   2DFF              .ds 1
6829   2E00             directCursor_2:
6830   2E00              .ds 1
6831   2E01             charAddr_1:
6832   2E01              .ds 1
6833   2E02             charAddr_2:
6834   2E02              .ds 1
6835   2E03             print2_1:
6836   2E03              .ds 2
6837   2E05             print2_2:
6838   2E05              .ds 2
6839   2E07             apogeyVideoMem:
6840   2E07 C2 E2        .dw 58050
6841   2E09             
6842   2E09             apogeyVideoBpl:
6843   2E09 4E           .db 78
6844   2E0A             
6845   2E0A             print_1:
6846   2E0A              .ds 1
6847   2E0B             print_2:
6848   2E0B              .ds 1
6849   2E0C             print_3:
6850   2E0C              .ds 2
6851   2E0E             printn_1:
6852   2E0E              .ds 1
6853   2E0F             printn_2:
6854   2E0F              .ds 1
6855   2E10             printn_3:
6856   2E10              .ds 1
6857   2E11             printn_4:
6858   2E11              .ds 2
6859   2E13             print2n_1:
6860   2E13              .ds 2
6861   2E15             print2n_2:
6862   2E15              .ds 1
6863   2E16             print2n_3:
6864   2E16              .ds 2
6865   2E18             print2cn_1:
6866   2E18              .ds 2
6867   2E1A             print2cn_2:
6868   2E1A              .ds 1
6869   2E1B             print2cn_3:
6870   2E1B              .ds 1
6871   2E1C             printm_1:
6872   2E1C              .ds 1
6873   2E1D             printm_2:
6874   2E1D              .ds 1
6875   2E1E             printm_3:
6876   2E1E              .ds 1
6877   2E1F             printm_4:
6878   2E1F              .ds 2
6879   2E21             printcn_1:
6880   2E21              .ds 1
6881   2E22             printcn_2:
6882   2E22              .ds 1
6883   2E23             printcn_3:
6884   2E23              .ds 1
6885   2E24             printcn_4:
6886   2E24              .ds 1
6887   2E25             fs_open0_1:
6888   2E25              .ds 2
6889   2E27             fs_open0_2:
6890   2E27              .ds 1
6891   2E28             fs_seek_1:
6892   2E28              .ds 2
6893   2E2A             fs_seek_2:
6894   2E2A              .ds 2
6895   2E2C             fs_seek_3:
6896   2E2C              .ds 1
6897   2E2D             print2m_1:
6898   2E2D              .ds 2
6899   2E2F             print2m_2:
6900   2E2F              .ds 1
6901   2E30             print2m_3:
6902   2E30              .ds 2
6903   2E32             string13:
6904   2E32 00           .db 0
6905   2E33             string20:
6906   2E33 17 00        .db 23,0
6907   2E35             string49:
6908   2E35 20 20 20 20  .db 32,32,32,32,32,60,68,73,82,62,0
6908   2E39 20 3C 44 49 
6908   2E3D 52 3E 00 
6909   2E40             string16:
6910   2E40 20 6B 6F 70  .db 32,107,111,112,105,114,111,119,97,110,105,101,32,0
6910   2E44 69 72 6F 77 
6910   2E48 61 6E 69 65 
6910   2E4C 20 00 
6911   2E4E             string22:
6912   2E4E 20 6B 6F 70  .db 32,107,111,112,105,114,111,119,97,116,120,32,0
6912   2E52 69 72 6F 77 
6912   2E56 61 74 78 20 
6912   2E5A 00 
6913   2E5B             string30:
6914   2E5B 20 6D 62 00  .db 32,109,98,0
6915   2E5F             string31:
6916   2E5F 20 6E 61 6B  .db 32,110,97,107,111,112,105,116,101,108,120,32,0
6916   2E63 6F 70 69 74 
6916   2E67 65 6C 78 20 
6916   2E6B 00 
6917   2E6C             string0:
6918   2E6C 20 6F 7B 69  .db 32,111,123,105,98,107,97,32,0
6918   2E70 62 6B 61 20 
6918   2E74 00 
6919   2E75             string24:
6920   2E75 20 70 65 72  .db 32,112,101,114,101,105,109,101,110,111,119,97,110,105,101,47,112,101,114,101,109,101,125,101,110,105,101,32,0
6920   2E79 65 69 6D 65 
6920   2E7D 6E 6F 77 61 
6920   2E81 6E 69 65 2F 
6920   2E85 70 65 72 65 
6920   2E89 6D 65 7D 65 
6920   2E8D 6E 69 65 20 
6920   2E91 00 
6921   2E92             string23:
6922   2E92 20 70 65 72  .db 32,112,101,114,101,105,109,101,110,111,119,97,116,120,47,112,101,114,101,109,101,115,116,105,116,120,32,0
6922   2E96 65 69 6D 65 
6922   2E9A 6E 6F 77 61 
6922   2E9E 74 78 2F 70 
6922   2EA2 65 72 65 6D 
6922   2EA6 65 73 74 69 
6922   2EAA 74 78 20 00 
6923   2EAE             string41:
6924   2EAE 20 70 6F 6D  .db 32,112,111,109,101,116,105,116,120,32,102,97,106,108,121,32,0
6924   2EB2 65 74 69 74 
6924   2EB6 78 20 66 61 
6924   2EBA 6A 6C 79 20 
6924   2EBE 00 
6925   2EBF             string28:
6926   2EBF 20 73 6F 7A  .db 32,115,111,122,100,97,116,120,32,102,97,106,108,32,0
6926   2EC3 64 61 74 78 
6926   2EC7 20 66 61 6A 
6926   2ECB 6C 20 00 
6927   2ECE             string27:
6928   2ECE 20 73 6F 7A  .db 32,115,111,122,100,97,116,120,32,112,97,112,107,117,32,0
6928   2ED2 64 61 74 78 
6928   2ED6 20 70 61 70 
6928   2EDA 6B 75 20 00 
6929   2EDE             string36:
6930   2EDE 20 75 64 61  .db 32,117,100,97,108,101,110,105,101,32,0
6930   2EE2 6C 65 6E 69 
6930   2EE6 65 20 00 
6931   2EE9             string37:
6932   2EE9 20 75 64 61  .db 32,117,100,97,108,105,116,120,32,0
6932   2EED 6C 69 74 78 
6932   2EF1 20 00 
6933   2EF3             string40:
6934   2EF3 2A 2E 2A 00  .db 42,46,42,0
6935   2EF7             string15:
6936   2EF7 2E 49 4E 00  .db 46,73,78,0
6937   2EFB             string14:
6938   2EFB 2E 52 4B 00  .db 46,82,75,0
6939   2EFF             string21:
6940   2EFF 2F 00        .db 47,0
6941   2F01             string53:
6942   2F01 30 31 32 33  .db 48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70,0
6942   2F05 34 35 36 37 
6942   2F09 38 39 41 42 
6942   2F0D 43 44 45 46 
6942   2F11 00 
6943   2F12             string50:
6944   2F12 3E 00        .db 62,0
6945   2F14             string46:
6946   2F14 46 31 20 46  .db 70,49,32,70,82,69,69,32,70,50,32,78,69,87,32,32,70,51,32,86,73,69,87,32,32,70,52,32,69,68,73,84,32,70,53,32,67,79,80,89,32,70,54,32,82,69,78,32,32,70,55,32,68,73,82,32,32,70,56,32,68,69,76,0
6946   2F18 52 45 45 20 
6946   2F1C 46 32 20 4E 
6946   2F20 45 57 20 20 
6946   2F24 46 33 20 56 
6946   2F28 49 45 57 20 
6946   2F2C 20 46 34 20 
6946   2F30 45 44 49 54 
6946   2F34 20 46 35 20 
6946   2F38 43 4F 50 59 
6946   2F3C 20 46 36 20 
6946   2F40 52 45 4E 20 
6946   2F44 20 46 37 20 
6946   2F48 44 49 52 20 
6946   2F4C 20 46 38 20 
6946   2F50 44 45 4C 00 
6947   2F54             string47:
6948   2F54 5B 00        .db 91,0
6949   2F56             string51:
6950   2F56 5B 20 41 4E  .db 91,32,65,78,89,32,75,69,89,32,93,0
6950   2F5A 59 20 4B 45 
6950   2F5E 59 20 5D 00 
6951   2F62             string52:
6952   2F62 5B 20 61 72  .db 91,32,97,114,50,32,45,32,115,116,111,112,32,93,0
6952   2F66 32 20 2D 20 
6952   2F6A 73 74 6F 70 
6952   2F6E 20 5D 00 
6953   2F71             string12:
6954   2F71 5B 20 77 6B  .db 91,32,119,107,32,45,32,111,107,32,93,32,32,91,32,97,114,50,32,45,32,111,116,109,101,110,97,32,93,0
6954   2F75 20 2D 20 6F 
6954   2F79 6B 20 5D 20 
6954   2F7D 20 5B 20 61 
6954   2F81 72 32 20 2D 
6954   2F85 20 6F 74 6D 
6954   2F89 65 6E 61 20 
6954   2F8D 5D 00 
6955   2F8F             string48:
6956   2F8F 5D 00        .db 93,0
6957   2F91             string42:
6958   2F91 62 61 6A 74  .db 98,97,106,116,32,119,32,32,32,32,0
6958   2F95 20 77 20 20 
6958   2F99 20 20 00 
6959   2F9C             string7:
6960   2F9C 64 69 73 6B  .db 100,105,115,107,32,122,97,112,111,108,110,101,110,0
6960   2FA0 20 7A 61 70 
6960   2FA4 6F 6C 6E 65 
6960   2FA8 6E 00 
6961   2FAA             string8:
6962   2FAA 66 61 69 6C  .db 102,97,105,108,32,115,117,125,101,115,116,119,117,101,116,0
6962   2FAE 20 73 75 7D 
6962   2FB2 65 73 74 77 
6962   2FB6 75 65 74 00 
6963   2FBA             string4:
6964   2FBA 66 61 6A 6C  .db 102,97,106,108,32,110,101,32,111,116,107,114,121,116,0
6964   2FBE 20 6E 65 20 
6964   2FC2 6F 74 6B 72 
6964   2FC6 79 74 00 
6965   2FC9             string44:
6966   2FC9 66 61 6A 6C  .db 102,97,106,108,97,104,32,0
6966   2FCD 61 68 20 00 
6967   2FD1             string43:
6968   2FD1 66 61 6A 6C  .db 102,97,106,108,101,32,0
6968   2FD5 65 20 00 
6969   2FD8             string45:
6970   2FD8 69 6D 71 00  .db 105,109,113,0
6971   2FDC             string11:
6972   2FDC 69 6D 71 3A  .db 105,109,113,58,0
6972   2FE0 00 
6973   2FE1             string17:
6974   2FE1 69 7A 3A 00  .db 105,122,58,0
6975   2FE5             string6:
6976   2FE5 6D 61 6B 73  .db 109,97,107,115,105,109,117,109,32,102,97,106,108,111,119,32,119,32,112,97,112,107,101,0
6976   2FE9 69 6D 75 6D 
6976   2FED 20 66 61 6A 
6976   2FF1 6C 6F 77 20 
6976   2FF5 77 20 70 61 
6976   2FF9 70 6B 65 00 
6977   2FFD             string1:
6978   2FFD 6E 65 74 20  .db 110,101,116,32,102,97,106,108,111,119,111,106,32,115,105,115,116,101,109,121,0
6978   3001 66 61 6A 6C 
6978   3005 6F 77 6F 6A 
6978   3009 20 73 69 73 
6978   300D 74 65 6D 79 
6978   3011 00 
6979   3012             string25:
6980   3012 6F 7B 69 62  .db 111,123,105,98,107,97,32,107,111,112,105,114,111,119,97,110,105,113,0
6980   3016 6B 61 20 6B 
6980   301A 6F 70 69 72 
6980   301E 6F 77 61 6E 
6980   3022 69 71 00 
6981   3025             string2:
6982   3025 6F 7B 69 62  .db 111,123,105,98,107,97,32,110,97,107,111,112,105,116,101,108,113,0
6982   3029 6B 61 20 6E 
6982   302D 61 6B 6F 70 
6982   3031 69 74 65 6C 
6982   3035 71 00 
6983   3037             string26:
6984   3037 6F 7B 69 62  .db 111,123,105,98,107,97,32,112,101,114,101,109,101,125,101,110,105,113,0
6984   303B 6B 61 20 70 
6984   303F 65 72 65 6D 
6984   3043 65 7D 65 6E 
6984   3047 69 71 00 
6985   304A             string29:
6986   304A 6F 7B 69 62  .db 111,123,105,98,107,97,32,115,111,122,100,97,110,105,113,32,112,97,112,107,105,0
6986   304E 6B 61 20 73 
6986   3052 6F 7A 64 61 
6986   3056 6E 69 71 20 
6986   305A 70 61 70 6B 
6986   305E 69 00 
6987   3060             string39:
6988   3060 6F 7B 69 62  .db 111,123,105,98,107,97,32,117,100,97,108,101,110,105,113,0
6988   3064 6B 61 20 75 
6988   3068 64 61 6C 65 
6988   306C 6E 69 71 00 
6989   3070             string33:
6990   3070 6F 7B 69 62  .db 111,123,105,98,107,97,32,126,116,101,110,105,113,0
6990   3074 6B 61 20 7E 
6990   3078 74 65 6E 69 
6990   307C 71 00 
6991   307E             string3:
6992   307E 70 61 70 6B  .db 112,97,112,107,97,32,110,101,32,112,117,115,116,97,0
6992   3082 61 20 6E 65 
6992   3086 20 70 75 73 
6992   308A 74 61 00 
6993   308D             string9:
6994   308D 70 72 65 72  .db 112,114,101,114,119,97,110,111,32,112,111,108,120,122,111,119,97,116,101,108,101,109,0
6994   3091 77 61 6E 6F 
6994   3095 20 70 6F 6C 
6994   3099 78 7A 6F 77 
6994   309D 61 74 65 6C 
6994   30A1 65 6D 00 
6995   30A4             string32:
6996   30A4 70 72 6F 77  .db 112,114,111,119,101,114,107,97,46,46,46,0
6996   30A8 65 72 6B 61 
6996   30AC 2E 2E 2E 00 
6997   30B0             string10:
6998   30B0 70 75 74 78  .db 112,117,116,120,32,98,111,108,120,123,101,32,50,53,53,32,115,105,109,119,111,108,111,119,0
6998   30B4 20 62 6F 6C 
6998   30B8 78 7B 65 20 
6998   30BC 32 35 35 20 
6998   30C0 73 69 6D 77 
6998   30C4 6F 6C 6F 77 
6998   30C8 00 
6999   30C9             string5:
7000   30C9 70 75 74 78  .db 112,117,116,120,32,110,101,32,110,97,106,100,101,110,0
7000   30CD 20 6E 65 20 
7000   30D1 6E 61 6A 64 
7000   30D5 65 6E 00 
7001   30D8             string19:
7002   30D8 73 6B 6F 70  .db 115,107,111,112,105,114,111,119,97,110,111,32,32,32,32,32,32,32,32,32,32,32,47,32,32,32,32,32,32,32,32,32,32,32,98,97,106,116,0
7002   30DC 69 72 6F 77 
7002   30E0 61 6E 6F 20 
7002   30E4 20 20 20 20 
7002   30E8 20 20 20 20 
7002   30EC 20 20 2F 20 
7002   30F0 20 20 20 20 
7002   30F4 20 20 20 20 
7002   30F8 20 20 62 61 
7002   30FC 6A 74 00 
7003   30FF             string34:
7004   30FF 73 77 6F 62  .db 115,119,111,98,111,100,110,111,58,32,0
7004   3103 6F 64 6E 6F 
7004   3107 3A 20 00 
7005   310A             string18:
7006   310A 77 3A 00     .db 119,58,0
7007   310D             string35:
7008   310D 77 73 65 67  .db 119,115,101,103,111,58,0
7008   3111 6F 3A 00 
7009   3114             string38:
7010   3114 77 79 20 68  .db 119,121,32,104,111,116,105,116,101,32,117,100,97,108,105,116,120,32,102,97,105,108,40,121,41,63,0
7010   3118 6F 74 69 74 
7010   311C 65 20 75 64 
7010   3120 61 6C 69 74 
7010   3124 78 20 66 61 
7010   3128 69 6C 28 79 
7010   312C 29 3F 00 
7011   312F               .end
tasm: Number of errors = 0
